import fs from 'fs';
// eslint-disable-next-line import/no-extraneous-dependencies
import walk from 'walk';

const walker = walk.walk('./lib');

const functions = [];

const fd = fs.openSync('./lib/index.js', 'w');
fs.appendFileSync(
  fd,
  '// This file is generated by `../scripts/walkLib.js`. To rebuild it, simply run `npm run walklib`\n',
);

walker.on('file', (root, stat, next) => {
  if (root !== './lib' && stat.name.includes('.js')) {
    const name = stat.name.replace('.js', '');
    const path = `${root.replace('./lib', '.')}/${name}`;
    functions.push({ path, name, root });
  }
  next();
});

walker.on('end', () => {
  functions.sort((a, b) => (a.path > b.path ? 1 : -1));
  functions.reduce((lastRoot, f) => {
    if (f.root !== lastRoot) {
      fs.appendFileSync(fd, `\n// ${f.root}\n`);
    }
    fs.appendFileSync(fd, `import ${f.name} from '${f.path}';\n`);
    return f.root;
  }, '');

  fs.appendFileSync(fd, '\n// Export named functions.\n');
  fs.appendFileSync(fd, 'export {\n');
  functions.forEach(f => {
    fs.appendFileSync(fd, `  ${f.name},\n`);
  });
  fs.appendFileSync(fd, '};\n');
});
