{"version":3,"sources":["webpack:///webpack/bootstrap 38919140b4f422bbdac3","webpack:///external \"@babel/runtime/helpers/interopRequireDefault\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///../melon.js/lib/version/calls/getConfig.js","webpack:///external \"bignumber.js\"","webpack:///../melon.js/lib/utils/generic/ensure.js","webpack:///../melon.js/lib/utils/parity/sendTransaction.js","webpack:///../melon.js/lib/fund/contracts/getFundContract.js","webpack:///../melon.js/lib/pricefeeds/contracts/getCanonicalPriceFeedContract.js","webpack:///../melon.js/lib/assets/utils/toReadable.js","webpack:///../melon.js/lib/assets/utils/toProcessable.js","webpack:///../melon.js/lib/utils/ethereum/findEventInLog.js","webpack:///external \"@babel/runtime/helpers/slicedToArray\"","webpack:///../melon.js/lib/assets/utils/getAddress.js","webpack:///external \"@babel/runtime/core-js/promise\"","webpack:///../melon.js/lib/version/contracts/getVersionContract.js","webpack:///../melon.js/lib/utils/generic/toDate.js","webpack:///../melon.js/lib/assets/utils/getSymbol.js","webpack:///external \"ramda\"","webpack:///external \"@babel/runtime/helpers/objectSpread\"","webpack:///../melon.js/lib/exchange/contracts/getMatchingMarketContract.js","webpack:///../melon.js/lib/assets/contracts/getTokenContract.js","webpack:///../melon.js/lib/assets/calls/getBalance.js","webpack:///external \"ethers-wallet\"","webpack:///external \"ethers-utils\"","webpack:///../melon.js/lib/assets/transactions/approve.js","webpack:///../melon.js/lib/exchange/utils/getMethodNameSignature.js","webpack:///../melon.js/lib/pricefeeds/contracts/getStakingPriceFeedContract.js","webpack:///external \"rxjs\"","webpack:///../melon.js/lib/assets/utils/getDecimals.js","webpack:///../melon.js/lib/exchange/calls/getOrder.js","webpack:///../melon.js/lib/exchange/utils/getExchangeName.js","webpack:///../melon.js/lib/olympiad/contracts/getOlympiadContract.js","webpack:///../melon.js/lib/utils/environment/getNetwork.js","webpack:///../melon.js/lib/exchange/contracts/getExchangeAdapterContract.js","webpack:///external \"@parity/api\"","webpack:///../melon.js/lib/fund/transactions/callOnExchange.js","webpack:///../melon.js/lib/utils/constants/providers.js","webpack:///external \"@babel/runtime/core-js/object/assign\"","webpack:///external \"debug\"","webpack:///../melon.js/lib/index.js","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/addressBook.json","webpack:///external \"@babel/runtime/core-js/object/keys\"","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/utils/info/tokenInfo.js","webpack:///../melon.js/lib/assets/utils/getTokenInfo.js","webpack:///../melon.js/lib/exchange/utils/getPrices.js","webpack:///external \"@babel/runtime/core-js/json/stringify\"","webpack:///../melon.js/lib/utils/generic/rush.js","webpack:///../melon.js/lib/riskManagement/contracts/getRiskManagementContract.js","webpack:///../melon.js/lib/participation/calls/getParticipation.js","webpack:///external \"graphql\"","webpack:///../melon.js/lib/assets/calls/getAllowance.js","webpack:///../melon.js/lib/version/calls/getNativeAssetSymbol.js","webpack:///../melon.js/lib/utils/ethereum/getNetworkName.js","webpack:///external \"@babel/runtime/core-js/object/entries\"","webpack:///../melon.js/lib/utils/constants/networks.js","webpack:///../melon.js/lib/pricefeeds/calls/getQuoteAssetSymbol.js","webpack:///../melon.js/lib/assets/utils/getWhiteListedAssets.js","webpack:///../melon.js/lib/utils/ethereum/gasBoost.js","webpack:///../melon.js/lib/utils/generic/trace.js","webpack:///../melon.js/lib/utils/parity/constructTransactionObject.js","webpack:///../melon.js/lib/exchange/calls/getActiveOrders.js","webpack:///../melon.js/lib/exchange/calls/getRecentTrades.js","webpack:///../melon.js/lib/fund/calls/getExchangeIndex.js","webpack:///../melon.js/lib/fund/calls/getFundInformations.js","webpack:///../melon.js/lib/pricefeeds/calls/getPrice.js","webpack:///../melon.js/lib/fund/calls/getOrdersHistory.js","webpack:///../melon.js/lib/utils/generic/isValidId.js","webpack:///../melon.js/lib/fund/preflights/preflightMakeOrder.js","webpack:///../melon.js/lib/riskManagement/calls/isMakePermitted.js","webpack:///../melon.js/lib/fund/preflights/preflightTakeOrder.js","webpack:///../melon.js/lib/riskManagement/calls/isTakePermitted.js","webpack:///../melon.js/lib/fund/transactions/takeOrder.js","webpack:///../melon.js/lib/olympiad/calls/getRegistrantFund.js","webpack:///../melon.js/lib/pricefeeds/contracts/getPriceFeedContract.js","webpack:///../melon.js/lib/participation/calls/isInvestmentRequestPermittedAndAllowed.js","webpack:///../melon.js/lib/participation/contracts/getComplianceContract.js","webpack:///../melon.js/lib/pricefeeds/calls/hasRecentPrice.js","webpack:///../melon.js/lib/utils/environment/getAccountAddress.js","webpack:///../melon.js/lib/utils/environment/getEnvironment.js","webpack:///../melon.js/lib/utils/environment/isValidEnvironment.js","webpack:///external \"web3/lib/web3/event\"","webpack:///../melon.js/lib/utils/generic/resolvePromiseObject.js","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///../melon.js/lib/utils/generic/isPromise.js","webpack:///../melon.js/lib/version/contracts/getRankingContract.js","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///../exchange-aggregator/src/formatRelayerOrderbook.ts","webpack:///../exchange-aggregator/src/getStemmedSymbol.ts","webpack:///../exchange-aggregator/src/getTokenAddress.ts","webpack:///../exchange-aggregator/node_modules/isomorphic-ws/node.js","webpack:///./src/index.ts","webpack:///../graphql-schema/src/index.ts","webpack:///external \"graphql-tools\"","webpack:///../graphql-schema/src/resolvers.ts","webpack:///../graphql-schema/src/resolvers/Orderbook.ts","webpack:///../graphql-schema/src/resolvers/OrderbookEntry.ts","webpack:///../graphql-schema/src/resolvers/Quantity.ts","webpack:///../graphql-schema/src/resolvers/Query.ts","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/utils/info/exchangeInfo.js","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/version/Version.abi.json","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/pricefeeds/CanonicalPriceFeed.abi.json","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/assets/PreminedAsset.abi.json","webpack:///../melon.js/lib/assets/calls/getTotalSupply.js","webpack:///external \"@babel/runtime/core-js/object/create\"","webpack:///../melon.js/lib/assets/transactions/ensureAllowance.js","webpack:///../melon.js/lib/assets/transactions/transferFrom.js","webpack:///../melon.js/lib/assets/transactions/transferTo.js","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/exchange/adapter/SimpleAdapter.abi.json","webpack:///../melon.js/lib/exchange/calls/getFundRecentTrades.js","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/exchange/thirdparty/MatchingMarket.abi.json","webpack:///../melon.js/lib/exchange/calls/getLastOrderId.js","webpack:///../melon.js/lib/exchange/calls/getOrderbook.js","webpack:///../melon.js/lib/exchange/events/onOrderUpdate.js","webpack:///../melon.js/lib/exchange/schemas/Order.js","webpack:///../melon.js/lib/exchange/schemas/Trade.js","webpack:///../melon.js/lib/exchange/transactions/cancelOrderFromAccount.js","webpack:///../melon.js/lib/exchange/transactions/make0xOffChainOrder.js","webpack:///external \"0x.js\"","webpack:///../melon.js/lib/exchange/transactions/makeOrderFromAccount.js","webpack:///../melon.js/lib/exchange/transactions/takeOrderFromAccount.js","webpack:///../melon.js/lib/exchange/utils/averagePrice.js","webpack:///../melon.js/lib/exchange/utils/deserializeOrder.js","webpack:///../melon.js/lib/exchange/utils/getExchangeList.js","webpack:///../melon.js/lib/exchange/utils/matchOrders.js","webpack:///../melon.js/lib/exchange/utils/serializeOrder.js","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/version/Fund.abi.json","webpack:///../melon.js/lib/fund/calls/getHoldingsAndPrices.js","webpack:///../melon.js/lib/fund/calls/getModules.js","webpack:///../melon.js/lib/fund/calls/getOpenOrders.js","webpack:///../melon.js/lib/fund/calls/getParticipationAuthorizations.js","webpack:///../melon.js/lib/fund/calls/getRequestsHistory.js","webpack:///../melon.js/lib/fund/calls/getStake.js","webpack:///../melon.js/lib/fund/calls/isShutDown.js","webpack:///../melon.js/lib/fund/calls/performCalculations.js","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/riskmgmt/RMMakeOrders.abi.json","webpack:///../melon.js/lib/fund/transactions/calcSharePriceAndConvertFees.js","webpack:///../melon.js/lib/fund/transactions/cancelOrder.js","webpack:///../melon.js/lib/fund/transactions/makeOrder.js","webpack:///../melon.js/lib/fund/transactions/shutDownFund.js","webpack:///../melon.js/lib/fund/transactions/takeMultipleOrders.js","webpack:///../melon.js/lib/fund/transactions/toggleInvestment.js","webpack:///../melon.js/lib/fund/transactions/toggleRedemption.js","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/competitions/Competition.abi.json","webpack:///../melon.js/lib/olympiad/transactions/claimReward.js","webpack:///../melon.js/lib/olympiad/transactions/registerForCompetition.js","webpack:///../melon.js/lib/olympiad/transactions/signOlympiadTermsAndConditions.js","webpack:///../melon.js/lib/participation/calls/getLastRequest.js","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/pricefeeds/PriceFeed.abi.json","webpack:///../melon.js/lib/participation/constants/requestStatus.js","webpack:///../melon.js/lib/participation/constants/requestTypes.js","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/compliance/ComplianceInterface.abi.json","webpack:///../melon.js/lib/participation/transactions/executeRequest.js","webpack:///../melon.js/lib/participation/transactions/invest.js","webpack:///../melon.js/lib/participation/transactions/list.js","webpack:///../melon.js/lib/participation/transactions/redeem.js","webpack:///../melon.js/lib/participation/transactions/redeemAllOwnedAssets.js","webpack:///../melon.js/lib/pricefeeds/calls/getNextEpochTime.js","webpack:///../melon.js/lib/pricefeeds/calls/getOperators.js","webpack:///../melon.js/lib/pricefeeds/calls/getPriceByPriceFeed.js","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/pricefeeds/StakingPriceFeed.abi.json","webpack:///../melon.js/lib/pricefeeds/calls/getPriceFeedsByOwner.js","webpack:///../melon.js/lib/pricefeeds/calls/getRegisteredAssets.js","webpack:///../melon.js/lib/pricefeeds/calls/getStakersAndAmounts.js","webpack:///../melon.js/lib/pricefeeds/calls/getStakingPriceFeedOwner.js","webpack:///../melon.js/lib/pricefeeds/calls/getStakingToken.js","webpack:///../melon.js/lib/pricefeeds/calls/getTotalStaked.js","webpack:///../melon.js/lib/pricefeeds/calls/getTotalStakedByAddr.js","webpack:///../melon.js/lib/pricefeeds/calls/getUpdateInterval.js","webpack:///../melon.js/lib/pricefeeds/events/awaitDataFeedUpdates.js","webpack:///../melon.js/lib/pricefeeds/transactions/multisig/collectAndUpdate.js","webpack:///../melon.js/lib/pricefeeds/transactions/operator/depositStake.js","webpack:///../melon.js/lib/pricefeeds/transactions/operator/setupPriceFeed.js","webpack:///../melon.js/lib/pricefeeds/transactions/operator/updatePriceFeed.js","webpack:///../melon.js/lib/pricefeeds/transactions/operator/withdrawStake.js","webpack:///../melon.js/lib/utils/environment/isExternalSigner.js","webpack:///external \"@babel/runtime/core-js/object/values\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///../melon.js/lib/utils/environment/setEnvironment.js","webpack:///../melon.js/lib/utils/ethereum/extractEventDefinitions.js","webpack:///../melon.js/lib/utils/ethereum/onBlock.js","webpack:///../melon.js/lib/utils/ethereum/parseEvent.js","webpack:///../melon.js/lib/utils/ethereum/sendEther.js","webpack:///../melon.js/lib/utils/generic/getKeyByValue.js","webpack:///../melon.js/lib/utils/getPastEvents.js","webpack:///../melon.js/lib/utils/parity/getParityProvider.js","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/package.json","webpack:///../melon.js/package.json","webpack:///../melon.js/lib/utils/wallet/createWallet.js","webpack:///external \"bip39\"","webpack:///../melon.js/lib/utils/wallet/decryptWallet.js","webpack:///../melon.js/lib/utils/wallet/encryptWallet.js","webpack:///../melon.js/lib/utils/wallet/importWalletFromMnemonic.js","webpack:///../melon.js/lib/version/calls/getFundForManager.js","webpack:///../melon.js/lib/version/calls/getFundMapping.js","webpack:///../melon.js/lib/version/calls/getFunds.js","webpack:///../melon.js/lib/version/calls/getManagersMapping.js","webpack:///../melon.js/lib/version/calls/getRanking.js","webpack:////home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/FundRanking.abi.json","webpack:///../melon.js/lib/version/calls/getSubscriptionHistory.js","webpack:///../melon.js/lib/version/events/melonTracker.js","webpack:///../melon.js/lib/version/transactions/setupFund.js","webpack:///../melon.js/lib/version/transactions/signCompetitionTermsAndConditions.js","webpack:///../melon.js/lib/version/transactions/signTermsAndConditions.js","webpack:///../graphql-schema/src/resolvers/Subscription.ts","webpack:///../exchange-aggregator/src/index.ts","webpack:///../exchange-aggregator/src/orderbooks/getAggregatedObservable.ts","webpack:///../exchange-aggregator/src/orderbooks/0x/getObservableRelayer.ts","webpack:///external \"ws\"","webpack:///../exchange-aggregator/src/orderbooks/ercDex/getObservableErcDex.ts","webpack:///external \"axios\"","webpack:///../exchange-aggregator/src/orderbooks/oasisDex/getObservableOasisDex.ts","webpack:///../graphql-schema/src/utils/withUnsubscribe.ts","webpack:///external \"iterall\"","webpack:///../graphql-schema/src/resolvers/Symbol.ts","webpack:///../graphql-schema/src/schema.gql","webpack:///../graphql-schema/src/schema/Symbol.gql","webpack:///../graphql-schema/src/schema/Order.gql","webpack:///../graphql-schema/src/schema/ExchangeEnum.gql","webpack:///../graphql-schema/src/schema/HowMuchOfAsset.gql","webpack:///../graphql-schema/src/schema/Quantity.gql","webpack:///../graphql-schema/src/schema/Orderbook.gql","webpack:///../graphql-schema/src/schema/OrderbookEntry.gql","webpack:///../graphql-schema/src/schema/Query.gql","webpack:///../graphql-schema/src/schema/Price.gql","webpack:///../graphql-schema/src/schema/Subscription.gql","webpack:///external \"graphql-subscriptions\"","webpack:///external \"graphql-yoga\""],"names":["config","getConfig","environment","network","complianceAddress","addressBook","OnlyManager","exchangeAdapterAddress","SimpleAdapter","exchangeAddress","MatchingMarket","exchangeInfo","address","matchingMarketAddress","matchingMarketAdapter","zeroExV1Address","ZeroExExchange","zeroExV1AdapterAddress","ZeroExV1Adapter","canonicalPriceFeedAddress","CanonicalPriceFeed","stakingPriceFeedAddress","StakingPriceFeed","rankingAddress","FundRanking","riskManagementAddress","RMMakeOrders","versionAddress","Version","governanceAddress","Governance","assets","nativeAssetSymbol","quoteAssetSymbol","EnsureError","message","data","name","stack","Error","prototype","constructor","ensure","condition","sendTransaction","contract","method","parameters","opt","account","sign","api","eth","getTransactionCount","toNumber","undefined","nonce","options","from","to","gasPrice","gasKeyName","includes","instance","rawTransaction","signedTransaction","sendRawTransaction","transactionHash","_pollTransactionReceipt","getTransactionReceipt","rawReceipt","decodedLogs","parseEventLogs","logs","transactionReceipt","getFundContract","fundAddress","newContract","FundAbi","getCanonicalPriceFeedContract","CanonicalPriceFeedAbi","toReadable","quantity","tokenSymbol","decimals","BigNumber","div","toProcessable","shouldRound","precision","roundedQuantity","round","times","findEventInLog","nameOrIndex","receipt","length","log","find","l","event","getAddress","toLowerCase","getVersionContract","VersionAbi","toDate","value","Date","getTokenInfoByAddress","t","getSymbol","symbol","getMatchingMarketContract","MatchingMarketAbi","getTokenContract","tokenAddress","TokenAbi","getBalance","ofAddress","tokenContract","balanceOf","call","result","approve","spender","args","approvalLogEntry","getMethodNameSignature","methodName","signature","util","abiSignature","slice","getStakingPriceFeedContract","StakingPriceFeedAbi","getDecimals","getOrder","id","exchangeAdapterContract","isActive","getOwner","owner","order","sellWhichToken","buyWhichToken","sellHowMuch","buyHowMuch","enhancedOrder","sellSymbol","buySymbol","sell","howMuch","buy","getExchangeName","getOlympiadContract","OlympiadContract","olympiadAddress","getNetwork","net","version","getExchangeAdapterContract","SimpleAdapterAbi","callOnExchange","fundContract","orderAddresses","maker","taker","makerAsset","takerAsset","feeRecipient","orderValues","makerQuantity","takerQuantity","makerFee","takerFee","timestamp","salt","fillTakerTokenAmount","dexySignatureMode","identifier","exchangeIndex","v","r","s","Number","toString","padStart","updateLog","providers","INJECTED","LOCAL","HOSTED","NONE","getTokenInfo","toUpperCase","getPrices","rush","promise","errMsg","wait","race","resolve","reject","global","setTimeout","getRiskManagementContract","getModules","RiskMgmtContractAddress","RiskMgmtinterface","getParticipation","investorAddress","personalStake","totalSupply","getAllowance","ownerAddress","spenderAddress","allowance","approvedAmount","getNativeAssetSymbol","versionContract","getNativeAsset","getNetworkName","networkEntry","networks","LIVE","ROBSTEN","RINKEBY","KOVAN","getQuoteAssetSymbol","canonicalPriceFeedContract","getQuoteAsset","getWhiteListedAssets","promiseForInfo","tokenInfo","map","asset","assetInformation","info","Utils","toUtf8String","stripZeros","reverse","parseInt","url","ipfsHash","isWhiteListed","all","allAssetsInfos","filter","gasBoost","params","multiplier","estimateGas","gasEstimation","getBlockByNumber","latestBlock","gasLimit","Math","floor","multipliedGasEstimation","ceil","fallback","trace","warn","category","newTrace","console","overloading","constructTransactionObject","functionABI","abi","_interface","e","_name","encodeOptions","_encodeOptions","getActiveOrders","baseTokenSymbol","quoteTokenSymbol","numberOfOrders","getLastOrderId","lastId","endIndex","minus","getOrdersPromises","assetPairArray","price","type","rawOrderbook","activeOrders","o","sort","a","b","getRecentTrades","inlastXdays","simpleMarketContract","blocksPerDay","numberOfDays","blockNumber","hashed","Api","sha3","fromBlock","toBlock","topics","getLogs","pastEvents","baseTokenAddress","quoteTokenAddress","decimalDifference","trade","buy_gem","pay_gem","give_amt","take_amt","getExchangeIndex","getExchangeInfo","fundExchanges","index","findIndex","_value","getFundInformations","getName","nameInBytes","getCreationTime","inception","modules","getPrice","assetAddress","getOrdersHistory","exchangeContract","getLastOrderIndex","lastOrderIndex","Array","fill","val","orders","push","formattedOrders","bytesToHex","exchangeOrderId","exchangeName","orderType","isValidId","gte","preflightMakeOrder","makerAssetSymbol","takerAssetSymbol","makerTokenBalance","isShutDown","exchangeMethodIsAllowed","isExchangeMethodAllowed","existsPriceOnAssetPair","ExistsPriceOnAssetPair","getReferencePriceInfo","isRecent","referencePrice","isAllowed","_dust","dust","isMakePermitted","getOrderPriceInfo","orderPrice","riskManagementContract","preflightTakeOrder","fillMakerQuantity","fillTakerQuantity","sellTokenBalance","isTakePermitted","takeOrder","lte","preflightCheck","orderId","exchange","updateType","getRegistrantFund","olympiadContract","registrantFund","getPriceFeedContract","PriceFeedAbi","priceFeedAddress","isInvestmentPermittedAndAllowed","isInvestAllowed","getComplianceContract","participationContractAddress","ComplianceInterfaceAbi","hasRecentPrice","dataFeedContract","getAccountAddress","getEnvironment","isValidEnvironment","providerType","resolvePromiseObject","obj","promises","key","then","resolved","isPromise","getRankingContract","RankingAbi","getTotalSupply","ensureAllowance","current","missing","approved","transferFrom","toAddress","fromAddress","transferLogEntry","transferTo","getFundRecentTrades","recentTrades","arrayOfHashes","giveAmount","takeAmount","indexOf","sellQuantity","buyQuantity","sellToken","buyToken","lastOrderIdBigNumber","getOrderbook","cleanedOrderbook","totalSellCumulativeVolume","reduce","previousVolume","currentOrder","add","orderbook","accumulator","cumulativeVolume","onOrderUpdate","cancelOrderFromAccount","canceled","networkToExchangeContract","networkToTokenTransferProxy","make0xOffChainOrder","relayer","approvePromise","ZeroEx","generatePseudoRandomSalt","makerTokenAddress","takerTokenAddress","exchangeContractAddress","makerTokenAmount","takerTokenAmount","expirationUnixTimestampSec","now","orderHash","getOrderHashHex","isValidOrderHash","signMessage","rawSignature","verified","Wallet","verifyMessage","expected","received","ecSignature","substring","isValidSignature","signedOrder","makeOrderFromAccount","timeout","matchingMarketContract","createdOrder","takeOrderFromAccount","maxTakeAmount","transaction","takeLog","averagePrice","cumulatedVolumes","deserializeOrder","getExchangeList","matchOrders","priceThreshold","gt","serializeOrder","getHoldingsAndPrices","promiseForHoldingsAndPrices","balance","holdingsAndPrices","getOpenOrders","getParticipationAuthorizations","subscriptionAllowed","isRedeemAllowed","redemptionAllowed","getRequestsHistory","requests","getStake","stake","bool","performCalculations","calculations","gav","managementReward","performanceReward","unclaimedRewards","rewardsShareQuantity","nav","sharePrice","calcSharePriceAndConvertFees","feesConvertedArgs","date","shareQuantity","unclaimedFees","cancelOrder","orderExpired","cancelLog","makeOrder","shutDownFund","managerToFunds","shutDownAllowed","takeMultipleOrders","totalQuantityAsked","exchangeNumber","accumulatorPromise","remainingQuantity","quantityAsked","executedQuantity","toggleInvestment","preInvestmentAllowed","postInvestmentAllowed","toggleRedemption","preRedemptionAllowed","postRedemptionAllowed","claimReward","registerForCompetition","buyInValue","isCompetitionActive","termsAndConditionsAreSigned","isWhitelisted","currentTotalBuyin","totalMaxBuyIn","getCHFValue","CHFValue","whitelistantToMaxBuyin","getFundByManager","managerToFund","etherBalance","registeredFundToRegistrants","registeredFundToRegistrant","registrantToRegistrantIds","registrantToRegistrantId","registerLog","signOlympiadTermsAndConditions","TERMS_AND_CONDITIONS","competitionHash","arrayifiedHash","hash","hexlify","getLastRequest","priceFeedContract","getInterval","interval","getLastRequestId","lastRequestId","participant","status","atUpdateId","maxRemainingWaitSeconds","eq","canBeExecutedInMs","max","request","requestStatus","ACTIVE","CANCELLED","EXECUTED","requestTypes","INVEST","REDEEM","FALLBACK_REDEEM","executeRequest","requestType","executeRequestLogEntry","participation","participantStake","invest","numShares","offeredValue","isNativeAsset","who","investRequestLogEntry","numSharesCreated","list","wallet","subscriber","participationContract","avatar","isListedBefore","listReceipt","isListed","redeem","requestedValue","redeemRequestLogEntry","redeemAllOwnedAssets","redeemAllOwnedAssetsLogEntry","atTimestamp","getNextEpochTime","getOperators","getPriceByPriceFeed","priceFeed","tokenAddr","stakingPricefeedContract","getPriceFeedsByOwner","getRegisteredAssets","getStakersAndAmounts","getStakingPriceFeedOwner","getStakingToken","stakingToken","getTotalStaked","totalStaked","getTotalStakedByAddr","addr","totalStakedFor","getUpdateInterval","INTERVAL","awaitDataFeedUpdates","howMany","entryTime","n","PriceUpdated","subscribe","error","lastBlockTime","lastBlock","blockDifference","getTime","collectAndUpdate","depositStake","stakingTokenAddress","stakingTokenSymbol","opts","setupPriceFeed","setupLog","stakingFeedAddress","toChecksumAddress","updatePriceFeed","newPrices","stakingPriceFeedContract","withdrawStake","isExternalSigner","setEnvironment","environmentCandidate","newEnvironment","extractEventDefinitions","json","onEventMap","i","decoder","SolidityEvent","onEvent","onBlock","isDataValid","accountAddress","syncing","nativeBalance","quoteBalance","accountInfo","parseEvent","decode","waitForTransaction","txhash","pollMethod","sendEther","amount","res","getKeyByValue","getPastEvents","eventSignature","paramName","allReceipts","checkHttpProvider","connectionTimeout","provider","Provider","Http","findHttpProvider","rpcEndpointList","lastPromise","lastType","candidate","getParityProvider","protocolPackage","pkg","dependencies","injectedProvider","ethereum","isParity","ethereumProvider","process","title","unshift","createWallet","mnemonic","bip39","generateMnemonic","fromMnemonic","decryptWallet","encryptedWallet","password","fromEncryptedWallet","decryptedWallet","encryptWallet","unencryptedWallet","encrypt","importWallet","getFundForManager","managerAddress","getFundsMapping","funds","fundsMapping","getFunds","startId","allFunds","getManagersMapping","managers","managersMapping","getRanking","rankingContract","getAddressAndSharePriceOfFunds","output","fundAddresses","fund","fundSharePrices","fundInceptions","getRankingPromises","unsortedFunds","getSubscriptionHistory","subscriptionHistory","setupFund","exchangeNames","quoteAsset","isVersionShutDown","exchanges","fundAddedMessage","logArgs","ofFund","fundInformations","signCompetitionTermsAndConditions","signTermsAndConditions"],"mappings":"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f,EAA+B5F,OAA/B,CAnEG;AAAA,6CAoEd4F,SApEc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA,GAAN;;eAuEezB,c;;;;;;;;;;;;;;AClFf,IAAM0B,YAAY;AAChBC,YAAU,sBADM;AAEhBC,SAAO,mBAFS;AAGhBC,UAAQ,cAHQ;AAIhBC,QAAM;AAJU,CAAlB;eAOeJ,S;;;;;;;ACPf,iE;;;;;;ACAA,kxOA,kBAAkB,SAAS,unBAAunB,gBAAgB,wwBAAwwB,UAAU,46BAA46B,SAAS,sd;;;;;;ACAz2E,+D;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;A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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 91);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 38919140b4f422bbdac3","module.exports = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/helpers/interopRequireDefault\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"@babel/runtime/regenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/regenerator\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/helpers/asyncToGenerator\"\n// module id = 2\n// module chunks = 0","// @flow\nimport addressBook from '@melonproject/smart-contracts/addressBook.json';\nimport exchangeInfo from '@melonproject/smart-contracts/utils/info/exchangeInfo';\n\nimport getNativeAssetSymbol from './getNativeAssetSymbol';\nimport getNetwork from '../../utils/environment/getNetwork';\nimport getQuoteAssetSymbol from '../../pricefeeds/calls/getQuoteAssetSymbol';\nimport getWhiteListedAssets from '../../assets/utils/getWhiteListedAssets';\n\nimport type { Address } from '../../assets/schemas/Address';\nimport type { TokenSymbol } from '../../assets/schemas/TokenSymbol';\n\n/**\n * Asset config\n */\nexport type AssetConfig = {\n  address: Address,\n  decimal: number,\n  name: string,\n  symbol: TokenSymbol,\n  url: string,\n};\n\n/**\n * Config retrieved from the version\n */\nexport type Config = {\n  assets: Array<AssetConfig>,\n  complianceAddress: Address,\n  matchingMarketAddress: Address,\n  matchingMarketAdapter: Address,\n  zeroExV1Address: Address,\n  zeroExV1AdapterAddress: Address,\n  nativeAssetSymbol: TokenSymbol,\n  canonicalPriceFeedAddress: Address,\n  stakingPriceFeedAddress: Address,\n  quoteAssetSymbol: TokenSymbol,\n  rankingAddress: Address,\n  riskManagementAddress: Address,\n  versionAddress: Address,\n  governanceAddress: Address,\n};\n\nlet config: Config;\n\n/**\n * Get config from deployed version contract\n */\nconst getConfig = async (environment): Promise<Config> => {\n  if (config) return config;\n\n  const network = await getNetwork(environment);\n  config = {\n    complianceAddress: addressBook[network].OnlyManager,\n    exchangeAdapterAddress: addressBook[network].SimpleAdapter,\n    exchangeAddress:\n      network === 'kovan'\n        ? addressBook[network].MatchingMarket\n        : exchangeInfo[network][0].address,\n    matchingMarketAddress: addressBook[network].MatchingMarket,\n    matchingMarketAdapter: addressBook[network].matchingMarketAdapter,\n    zeroExV1Address: addressBook[network].ZeroExExchange,\n    zeroExV1AdapterAddress: addressBook[network].ZeroExV1Adapter,\n    canonicalPriceFeedAddress: addressBook[network].CanonicalPriceFeed,\n    stakingPriceFeedAddress: addressBook[network].StakingPriceFeed,\n    rankingAddress: addressBook[network].FundRanking,\n    riskManagementAddress: addressBook[network].RMMakeOrders,\n    versionAddress: addressBook[network].Version,\n    governanceAddress: addressBook[network].Governance,\n  };\n\n  // HACK: Define config first so that inside these next async functions,\n  // getConfig() already returns the addresses to avoid an infinite loop\n  config.assets = await getWhiteListedAssets(environment, network);\n  config.nativeAssetSymbol = await getNativeAssetSymbol(environment);\n  config.quoteAssetSymbol = await getQuoteAssetSymbol(environment);\n\n  return config;\n};\n\nexport default getConfig;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/version/calls/getConfig.js","module.exports = require(\"bignumber.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bignumber.js\"\n// module id = 4\n// module chunks = 0","// @flow\n\nfunction EnsureError(message, data) {\n  this.name = 'EnsureError';\n  this.message = message || 'Ensure failed';\n  this.data = data;\n  this.stack = new Error().stack;\n}\nEnsureError.prototype = Object.create(Error.prototype);\nEnsureError.prototype.constructor = EnsureError;\n\n/**\n * Similar to asset but throws on runtime if `condition` isn't met.\n * Possibility to add a `message` and some `data` to trace.\n * @throws {EnsureError}\n */\nconst ensure = (condition: boolean, message: string, data: any): void => {\n  if (condition !== true) {\n    throw new EnsureError(message, { condition, data });\n  }\n};\n\nexport default ensure;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/generic/ensure.js","// @flow\nimport gasBoost from '../ethereum/gasBoost';\nimport constructTransactionObject from './constructTransactionObject';\n\nconst sendTransaction = async (\n  contract,\n  method,\n  parameters,\n  environment,\n  opt = {},\n) => {\n  const nonce = environment.account.sign\n    ? (await environment.api.eth.getTransactionCount(\n        environment.account.address,\n      )).toNumber()\n    : undefined;\n\n  // Prepare raw transaction\n  const options = {\n    from: environment.account.address,\n    to: contract.address,\n    gasPrice: 60000000000,\n    ...opt,\n  };\n\n  // HACK: If external parity signer, no need to set the nonce, Parity does it. If in-browser wallet, we need to explicitly set the nonce.\n  if (nonce) options.nonce = nonce;\n\n  // Estimate and adjust gas with gasBoost\n  const gasKeyName = environment.account.sign ? 'gasLimit' : 'gas';\n\n  if (\n    [\n      'cancelOrder',\n      'offer',\n      'depositStake',\n      'withdrawStake',\n      'collectAndUpdate',\n      'callOnExchange',\n    ].includes(method)\n  ) {\n    options[gasKeyName] = 6700000;\n  } else {\n    options[gasKeyName] = await gasBoost(\n      contract.instance[method],\n      parameters,\n      options,\n      environment,\n    );\n  }\n\n  // Construct raw transaction object\n  const rawTransaction = constructTransactionObject(\n    contract,\n    method,\n    parameters,\n    options,\n  );\n\n  let transactionHash;\n\n  if (environment.account.sign) {\n    // Sign transaction object with Wallet instance\n    const signedTransaction = environment.account.sign(rawTransaction);\n\n    // Send raw signed transaction and wait for receipt\n    transactionHash = await environment.api.eth.sendRawTransaction(\n      signedTransaction,\n    );\n  } else {\n    // Send raw transaction object and wait for receipt\n    transactionHash = await environment.api.eth.sendTransaction(rawTransaction);\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  await contract._pollTransactionReceipt(transactionHash);\n\n  const rawReceipt = await environment.api.eth.getTransactionReceipt(\n    transactionHash,\n  );\n  const decodedLogs = contract.parseEventLogs(rawReceipt.logs);\n  const transactionReceipt = { ...rawReceipt, logs: decodedLogs };\n  return transactionReceipt;\n};\n\nexport default sendTransaction;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/parity/sendTransaction.js","// @flow\nimport FundAbi from '@melonproject/smart-contracts/out/version/Fund.abi.json';\n\nimport type { Address } from '../../assets/schemas/Address';\n\n/**\n * Get the contract instance of fund at `fundAddress`\n */\nconst getFundContract = (environment, fundAddress: Address) =>\n  environment.api.newContract(FundAbi, fundAddress);\nexport default getFundContract;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/contracts/getFundContract.js","import CanonicalPriceFeedAbi from '@melonproject/smart-contracts/out/pricefeeds/CanonicalPriceFeed.abi.json';\nimport getConfig from '../../version/calls/getConfig';\n\n/**\n * Gets contract instance of deployed canonical Pricefeed\n */\nconst getCanonicalPriceFeedContract = async environment => {\n  const config = await getConfig(environment);\n  return environment.api.newContract(\n    CanonicalPriceFeedAbi,\n    config.canonicalPriceFeedAddress,\n  );\n};\n\nexport default getCanonicalPriceFeedContract;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/contracts/getCanonicalPriceFeedContract.js","// @flow\nimport BigNumber from 'bignumber.js';\n\nimport getDecimals from './getDecimals';\n\nimport type { Config } from '../../version/calls/getConfig';\nimport type { TokenSymbol } from '../schemas/TokenSymbol';\n\n/**\n * Takes a `quantity` from the EVM and makes it human readable\n * according to the decimals specified by `tokenSymbol`.\n *\n * _Note_ that the EVM always consumes and returns BigNumbers.\n *\n * @example toReadable(config, new BigNumber(100000000000000000, 'ETH-T')) // (17 zeros)\n * // --> // BigNumber(0.1)\n */\nconst toReadable = (\n  config: Config,\n  quantity: BigNumber,\n  tokenSymbol: TokenSymbol,\n): BigNumber => {\n  const decimals: number = getDecimals(config, tokenSymbol);\n  return new BigNumber(quantity).div(10 ** decimals);\n};\n\nexport default toReadable;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/assets/utils/toReadable.js","// @flow\nimport BigNumber from 'bignumber.js';\n\nimport getDecimals from './getDecimals';\n\nimport type { Config } from '../../version/calls/getConfig';\nimport type { TokenSymbol } from '../schemas/TokenSymbol';\n\n/**\n * Takes a human readable `quantity` and makes it processable by EVM according\n * to the decimals specified by `tokenSymbol`.\n *\n * _Note_ that the EVM always consumes and returns BigNumbers.\n *\n * @example\n *  toProcessable(config, 0.1, 'ETH-T'));\n *  // --> BigNumber(100000000000000000) // (17 zeros)\n */\nconst toProcessable = (\n  config: Config,\n  quantity: number | BigNumber,\n  tokenSymbol: TokenSymbol,\n  shouldRound: Boolean = true,\n): BigNumber => {\n  const precision: number = getDecimals(config, tokenSymbol);\n  if (shouldRound) {\n    const roundedQuantity = new BigNumber(quantity).round(precision);\n    return new BigNumber(roundedQuantity).times(10 ** precision);\n  }\n  return new BigNumber(quantity).times(10 ** precision); // this is a hack to handle 0x orders with more than 15 significant digits\n};\n\nexport default toProcessable;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/assets/utils/toProcessable.js","// @flow\nimport ensure from '../generic/ensure';\n\n/**\n * Searches the log of the `receipt` for a given event `nameOrIndex`\n * Possibility to add custom error `message` if event not found\n * @throws {EnsureError}\n * @returns found event\n */\nconst findEventInLog = (\n  nameOrIndex: string | number,\n  receipt: Object,\n  message: string = 'No transaction logs found in receipt',\n): any => {\n  ensure(\n    !!(receipt && receipt.logs && receipt.logs.length),\n    'Transaction has no logs at all.',\n    {\n      nameOrIndex,\n      receipt,\n    },\n  );\n\n  const log =\n    typeof nameOrIndex === 'string'\n      ? receipt.logs.find(l => l.event === nameOrIndex)\n      : receipt.logs[nameOrIndex];\n\n  ensure(!!log, message, {\n    nameOrIndex,\n    receipt,\n  });\n\n  return log;\n};\n\nexport default findEventInLog;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/ethereum/findEventInLog.js","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/helpers/slicedToArray\"\n// module id = 12\n// module chunks = 0","// @flow\nimport getTokenInfo from './getTokenInfo';\n\nimport type { Config } from '../../version/calls/getConfig';\nimport type { Address } from '../schemas/Address';\nimport type { TokenSymbol } from '../schemas/TokenSymbol';\n\n/**\n * Gets address of given `tokenSymbol`\n */\nconst getAddress = (config: Config, tokenSymbol: TokenSymbol): Address =>\n  getTokenInfo(config, tokenSymbol).address.toLowerCase();\n\nexport default getAddress;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/assets/utils/getAddress.js","module.exports = require(\"@babel/runtime/core-js/promise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/core-js/promise\"\n// module id = 14\n// module chunks = 0","import VersionAbi from '@melonproject/smart-contracts/out/version/Version.abi.json';\nimport getConfig from '../../version/calls/getConfig';\n\n/**\n * Get deployed version contract instance\n */\nconst getVersionContract = async environment => {\n  const config = await getConfig(environment);\n  return environment.api.newContract(VersionAbi, config.versionAddress);\n};\n\nexport default getVersionContract;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/version/contracts/getVersionContract.js","// @flow\nimport typeof BigNumber from 'bignumber.js';\n\nconst toDate = (value: BigNumber): Date =>\n  new Date(value.times(1000).toNumber());\n\nexport default toDate;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/generic/toDate.js","// @flow\n\nimport type { AssetConfig, Config } from '../../version/calls/getConfig';\nimport type { Address } from '../schemas/Address';\nimport type { TokenSymbol } from '../schemas/TokenSymbol';\n\nconst getTokenInfoByAddress = (config: Config, address: string): AssetConfig =>\n  config.assets.find(t => t.address.toLowerCase() === address.toLowerCase()) ||\n  (() => {\n    throw new Error(`No token found with address ${address}`);\n  })();\n\n/**\n * Gets the token symbol by its ERC20 `address`\n */\nconst getSymbol = (config: Config, address: Address): TokenSymbol =>\n  getTokenInfoByAddress(config, address).symbol;\n\nexport default getSymbol;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/assets/utils/getSymbol.js","module.exports = require(\"ramda\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ramda\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"@babel/runtime/helpers/objectSpread\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/helpers/objectSpread\"\n// module id = 19\n// module chunks = 0","// @flow\nimport MatchingMarketAbi from '@melonproject/smart-contracts/out/exchange/thirdparty/MatchingMarket.abi.json';\nimport getConfig from '../../version/calls/getConfig';\n\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * Get deployed SimpleMarket contract instance\n */\nconst getMatchingMarketContract = async (environment: Environment) => {\n  const config = await getConfig(environment);\n  return environment.api.newContract(\n    MatchingMarketAbi,\n    config.matchingMarketAddress,\n  );\n};\n\nexport default getMatchingMarketContract;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/contracts/getMatchingMarketContract.js","// @flow\nimport TokenAbi from '@melonproject/smart-contracts/out/assets/PreminedAsset.abi.json';\nimport getConfig from '../../version/calls/getConfig';\nimport getAddress from '../utils/getAddress';\n\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * @returns the contract instance of a token by symbol\n */\nconst getTokenContract: contract = async (environment: Environment, symbol) => {\n  const config = await getConfig(environment);\n  const tokenAddress = getAddress(config, symbol);\n  return environment.api.newContract(TokenAbi, tokenAddress);\n};\n\nexport default getTokenContract;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/assets/contracts/getTokenContract.js","// @flow\nimport BigNumber from 'bignumber.js';\nimport getConfig from '../../version/calls/getConfig';\nimport getTokenContract from '../contracts/getTokenContract';\nimport toReadable from '../utils/toReadable';\n\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * @returns the balance of a token for an address\n */\nconst getBalance = async (\n  environment: Environment,\n  { tokenSymbol, ofAddress },\n): Promise<BigNumber> => {\n  const config = await getConfig(environment);\n  const tokenContract = await getTokenContract(environment, tokenSymbol);\n  const result = await tokenContract.instance.balanceOf.call({}, [ofAddress]);\n  return toReadable(config, result, tokenSymbol);\n};\n\nexport default getBalance;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/assets/calls/getBalance.js","module.exports = require(\"ethers-wallet\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ethers-wallet\"\n// module id = 23\n// module chunks = 0","module.exports = require(\"ethers-utils\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ethers-utils\"\n// module id = 24\n// module chunks = 0","// @flow\nimport findEventInLog from '../../utils/ethereum/findEventInLog';\nimport getConfig from '../../version/calls/getConfig';\nimport getTokenContract from '../contracts/getTokenContract';\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport toProcessable from '../utils/toProcessable';\n\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * Approves `spender` to spend `quantity` of token with `symbol`\n * `from` given address\n *\n * @returns {true} if approval was succesfull\n */\nconst approve = async (\n  environment: Environment,\n  { symbol, spender, quantity },\n): boolean => {\n  const config = await getConfig(environment);\n  const tokenContract = await getTokenContract(environment, symbol);\n  const args = [spender, toProcessable(config, quantity, symbol)];\n\n  const receipt = await sendTransaction(\n    tokenContract,\n    'approve',\n    args,\n    environment,\n  );\n  const approvalLogEntry = findEventInLog('Approval', receipt);\n  return !!approvalLogEntry;\n};\n\nexport default approve;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/assets/transactions/approve.js","// @flow\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * Given a method name, this function returns the method signature of that function (from adapter contract), which then gets passed into callOnExchange function\n */\nconst getMethodNameSignature = (\n  environment: Environment,\n  methodName: String,\n): Order => {\n  let signature;\n  switch (methodName) {\n    case 'makeOrder':\n      signature = environment.api.util\n        .abiSignature('makeOrder', [\n          'address',\n          'address[5]',\n          'uint256[8]',\n          'bytes32',\n          'uint8',\n          'bytes32',\n          'bytes32',\n        ])\n        .slice(0, 10);\n      break;\n\n    case 'takeOrder':\n      signature = environment.api.util\n        .abiSignature('takeOrder', [\n          'address',\n          'address[5]',\n          'uint256[8]',\n          'bytes32',\n          'uint8',\n          'bytes32',\n          'bytes32',\n        ])\n        .slice(0, 10);\n      break;\n\n    case 'cancelOrder':\n      signature = environment.api.util\n        .abiSignature('cancelOrder', [\n          'address',\n          'address[5]',\n          'uint256[8]',\n          'bytes32',\n          'uint8',\n          'bytes32',\n          'bytes32',\n        ])\n        .slice(0, 10);\n      break;\n    default:\n      throw new Error(`No match found for method name ${methodName}`);\n  }\n\n  return signature;\n};\n\nexport default getMethodNameSignature;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/utils/getMethodNameSignature.js","import StakingPriceFeedAbi from '@melonproject/smart-contracts/out/pricefeeds/StakingPriceFeed.abi.json';\n\n/**\n * Gets contract instance of deployed canonical Pricefeed\n */\nconst getStakingPriceFeedContract = async (environment, address) =>\n  environment.api.newContract(StakingPriceFeedAbi, address);\n\nexport default getStakingPriceFeedContract;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/contracts/getStakingPriceFeedContract.js","module.exports = require(\"rxjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs\"\n// module id = 28\n// module chunks = 0","// @flow\nimport getTokenInfo from './getTokenInfo';\n\nimport type { Config } from '../../version/calls/getConfig';\nimport type { TokenSymbol } from '../schemas/TokenSymbol';\n\n/**\n * Gets decimals of given `tokenSymbol`\n */\nconst getDecimals = (config: Config, tokenSymbol: TokenSymbol): number =>\n  getTokenInfo(config, tokenSymbol).decimals;\n\nexport default getDecimals;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/assets/utils/getDecimals.js","// @flow\nimport toReadable from '../../assets/utils/toReadable';\nimport getSymbol from '../../assets/utils/getSymbol';\nimport getExchangeAdapterContract from '../contracts/getExchangeAdapterContract';\nimport getConfig from '../../version/calls/getConfig';\n\nimport type { Environment } from '../../utils/environment/Environment';\nimport type { Order, RawOrder } from '../schemas/Order';\n\n/**\n * Gets the normalised order from the exchange specified by `id`.\n * Only if the order is active, it has the fields `buy` and `sell`\n */\nconst getOrder = async (environment: Environment, { id }): Promise<Order> => {\n  const config = await getConfig(environment);\n  const exchangeAdapterContract = await getExchangeAdapterContract(environment);\n\n  const isActive: boolean = await exchangeAdapterContract.instance.isActive.call(\n    {},\n    [config.exchangeAddress, id],\n  );\n  const owner: string = await exchangeAdapterContract.instance.getOwner.call(\n    {},\n    [config.exchangeAddress, id],\n  );\n  const order: RawOrder = await exchangeAdapterContract.instance.getOrder.call(\n    {},\n    [config.exchangeAddress, id],\n  );\n\n  // if (isActive) console.log(isActive, order);\n\n  const [sellWhichToken, buyWhichToken, sellHowMuch, buyHowMuch] = order;\n\n  const enhancedOrder = {\n    id,\n    owner,\n    isActive:\n      isActive &&\n      sellWhichToken !== '0x0000000000000000000000000000000000000000' &&\n      buyWhichToken !== '0x0000000000000000000000000000000000000000',\n  };\n\n  // inactive orders have token set to 0x0000... so only enhance active orders\n  if (isActive) {\n    const sellSymbol = getSymbol(config, sellWhichToken);\n    const buySymbol = getSymbol(config, buyWhichToken);\n\n    enhancedOrder.sell = {\n      symbol: sellSymbol,\n      howMuch: toReadable(config, sellHowMuch, sellSymbol),\n    };\n\n    enhancedOrder.buy = {\n      symbol: buySymbol,\n      howMuch: toReadable(config, buyHowMuch, buySymbol),\n    };\n  }\n  return enhancedOrder;\n};\n\nexport default getOrder;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/calls/getOrder.js","import addressBook from '@melonproject/smart-contracts/addressBook.json';\nimport getNetwork from '../../utils/environment/getNetwork';\n\nconst getExchangeName = async (environment, exchangeAddress) => {\n  const network = await getNetwork(environment);\n\n  switch (exchangeAddress) {\n    case addressBook[network].MatchingMarket:\n      return 'MatchingMarket';\n\n    case addressBook[network].ZeroExExchange:\n      return 'ZeroEx';\n\n    default:\n      throw new Error(\n        `Exchange name not found for exchange with address ${exchangeAddress}`,\n      );\n  }\n};\n\nexport default getExchangeName;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/utils/getExchangeName.js","import OlympiadContract from '@melonproject/smart-contracts/out/competitions/Competition.abi.json';\nimport getConfig from '../../version/calls/getConfig';\n\n/**\n * Gets contract instance of deployed canonical Pricefeed\n */\nconst getOlympiadContract = async environment => {\n  const config = await getConfig(environment);\n  return environment.api.newContract(OlympiadContract, config.olympiadAddress);\n};\n\nexport default getOlympiadContract;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/olympiad/contracts/getOlympiadContract.js","import getNetworkName from '../ethereum/getNetworkName';\n\nlet network;\n\nconst getNetwork = async environment => {\n  if (!network) network = await environment.api.net.version();\n  return getNetworkName(network);\n};\n\nexport default getNetwork;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/environment/getNetwork.js","import SimpleAdapterAbi from '@melonproject/smart-contracts/out/exchange/adapter/SimpleAdapter.abi.json';\n\nimport getConfig from '../../version/calls/getConfig';\n\n/**\n * Get deployed ExchangeAdapter contract instance\n */\nconst getExchangeAdapterContract = async environment => {\n  const config = await getConfig(environment);\n\n  return environment.api.newContract(\n    SimpleAdapterAbi,\n    config.exchangeAdapterAddress,\n  );\n};\n\nexport default getExchangeAdapterContract;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/contracts/getExchangeAdapterContract.js","module.exports = require(\"@parity/api\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@parity/api\"\n// module id = 35\n// module chunks = 0","// @flow\nimport findEventInLog from '../../utils/ethereum/findEventInLog';\nimport getAddress from '../../assets/utils/getAddress';\nimport getConfig from '../../version/calls/getConfig';\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport toProcessable from '../../assets/utils/toProcessable';\nimport getExchangeIndex from '../calls/getExchangeIndex';\n\nimport type { Environment } from '../../utils/environment/Environment';\nimport type { Order } from '../../exchange/schemas/Order';\n\nconst callOnExchange = async (\n  environment: Environment,\n  {\n    fundContract,\n    exchangeAddress,\n    method,\n    orderAddresses: [maker, taker, makerAsset, takerAsset, feeRecipient],\n    orderValues: [\n      makerQuantity,\n      takerQuantity,\n      makerFee,\n      takerFee,\n      timestamp,\n      salt,\n      fillTakerTokenAmount,\n      dexySignatureMode = 0,\n    ],\n    identifier = 0,\n    signature,\n  },\n): Promise<Order> => {\n  const config = await getConfig(environment);\n\n  const exchangeIndex = await getExchangeIndex(\n    environment,\n    exchangeAddress,\n    fundContract.address,\n  );\n\n  const v = signature.v ? signature.v : 0;\n  const r = signature.r ? signature.r : '0x0';\n  const s = signature.s ? signature.s : '0x0';\n\n  const args = [\n    exchangeIndex,\n    method,\n    [\n      maker,\n      taker,\n      getAddress(config, makerAsset),\n      getAddress(config, takerAsset),\n      feeRecipient,\n    ],\n    [\n      toProcessable(config, makerQuantity, makerAsset, false),\n      toProcessable(config, takerQuantity, takerAsset, false),\n      makerFee,\n      takerFee,\n      timestamp,\n      salt,\n      toProcessable(config, fillTakerTokenAmount, takerAsset, false),\n      dexySignatureMode,\n    ],\n    `0x${Number(identifier)\n      .toString(16)\n      .padStart(64, '0')}`,\n    v,\n    r,\n    s,\n  ];\n  const receipt = await sendTransaction(\n    fundContract,\n    'callOnExchange',\n    args,\n    environment,\n    {},\n  );\n  const updateLog = findEventInLog('OrderUpdated', receipt);\n  return updateLog;\n};\n\nexport default callOnExchange;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/transactions/callOnExchange.js","const providers = {\n  INJECTED: 'Injected parity node',\n  LOCAL: 'Local parity node',\n  HOSTED: 'Hosted by us',\n  NONE: 'No provider found',\n};\n\nexport default providers;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/constants/providers.js","module.exports = require(\"@babel/runtime/core-js/object/assign\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/core-js/object/assign\"\n// module id = 38\n// module chunks = 0","module.exports = require(\"debug\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"debug\"\n// module id = 39\n// module chunks = 0","// This file is generated by `../scripts/walkLib.js`. To rebuild it, simply run `npm run walklib`\n\n// ./lib/assets/calls\nimport getAllowance from './assets/calls/getAllowance';\nimport getBalance from './assets/calls/getBalance';\nimport getTotalSupply from './assets/calls/getTotalSupply';\n\n// ./lib/assets/contracts\nimport getTokenContract from './assets/contracts/getTokenContract';\n\n// ./lib/assets/schemas\nimport Address from './assets/schemas/Address';\nimport TokenSymbol from './assets/schemas/TokenSymbol';\n\n// ./lib/assets/transactions\nimport approve from './assets/transactions/approve';\nimport ensureAllowance from './assets/transactions/ensureAllowance';\nimport transferFrom from './assets/transactions/transferFrom';\nimport transferTo from './assets/transactions/transferTo';\n\n// ./lib/assets/utils\nimport getAddress from './assets/utils/getAddress';\nimport getDecimals from './assets/utils/getDecimals';\nimport getSymbol from './assets/utils/getSymbol';\nimport getTokenInfo from './assets/utils/getTokenInfo';\nimport getWhiteListedAssets from './assets/utils/getWhiteListedAssets';\nimport toProcessable from './assets/utils/toProcessable';\nimport toReadable from './assets/utils/toReadable';\n\n// ./lib/exchange/calls\nimport getActiveOrders from './exchange/calls/getActiveOrders';\nimport getFundRecentTrades from './exchange/calls/getFundRecentTrades';\nimport getLastOrderId from './exchange/calls/getLastOrderId';\nimport getOrder from './exchange/calls/getOrder';\nimport getOrderbook from './exchange/calls/getOrderbook';\nimport getRecentTrades from './exchange/calls/getRecentTrades';\n\n// ./lib/exchange/contracts\nimport getExchangeAdapterContract from './exchange/contracts/getExchangeAdapterContract';\nimport getMatchingMarketContract from './exchange/contracts/getMatchingMarketContract';\n\n// ./lib/exchange/events\nimport onOrderUpdate from './exchange/events/onOrderUpdate';\n\n// ./lib/exchange/schemas\nimport BuyOrSell from './exchange/schemas/BuyOrSell';\nimport Order from './exchange/schemas/Order';\nimport Trade from './exchange/schemas/Trade';\n\n// ./lib/exchange/transactions\nimport cancelOrderFromAccount from './exchange/transactions/cancelOrderFromAccount';\nimport make0xOffChainOrder from './exchange/transactions/make0xOffChainOrder';\nimport makeOrderFromAccount from './exchange/transactions/makeOrderFromAccount';\nimport takeOrderFromAccount from './exchange/transactions/takeOrderFromAccount';\n\n// ./lib/exchange/utils\nimport averagePrice from './exchange/utils/averagePrice';\nimport deserializeOrder from './exchange/utils/deserializeOrder';\nimport getExchangeList from './exchange/utils/getExchangeList';\nimport getExchangeName from './exchange/utils/getExchangeName';\nimport getMethodNameSignature from './exchange/utils/getMethodNameSignature';\nimport getPrices from './exchange/utils/getPrices';\nimport matchOrders from './exchange/utils/matchOrders';\nimport serializeOrder from './exchange/utils/serializeOrder';\n\n// ./lib/fund/calls\nimport getExchangeIndex from './fund/calls/getExchangeIndex';\nimport getFundInformations from './fund/calls/getFundInformations';\nimport getHoldingsAndPrices from './fund/calls/getHoldingsAndPrices';\nimport getModules from './fund/calls/getModules';\nimport getOpenOrders from './fund/calls/getOpenOrders';\nimport getOrdersHistory from './fund/calls/getOrdersHistory';\nimport getParticipationAuthorizations from './fund/calls/getParticipationAuthorizations';\nimport getRequestsHistory from './fund/calls/getRequestsHistory';\nimport getStake from './fund/calls/getStake';\nimport isShutDown from './fund/calls/isShutDown';\nimport performCalculations from './fund/calls/performCalculations';\n\n// ./lib/fund/contracts\nimport getFundContract from './fund/contracts/getFundContract';\n\n// ./lib/fund/preflights\nimport preflightMakeOrder from './fund/preflights/preflightMakeOrder';\nimport preflightTakeOrder from './fund/preflights/preflightTakeOrder';\n\n// ./lib/fund/transactions\nimport calcSharePriceAndConvertFees from './fund/transactions/calcSharePriceAndConvertFees';\nimport callOnExchange from './fund/transactions/callOnExchange';\nimport cancelOrder from './fund/transactions/cancelOrder';\nimport makeOrder from './fund/transactions/makeOrder';\nimport shutDownFund from './fund/transactions/shutDownFund';\nimport takeMultipleOrders from './fund/transactions/takeMultipleOrders';\nimport takeOrder from './fund/transactions/takeOrder';\nimport toggleInvestment from './fund/transactions/toggleInvestment';\nimport toggleRedemption from './fund/transactions/toggleRedemption';\n\n// ./lib/olympiad/calls\nimport getRegistrantFund from './olympiad/calls/getRegistrantFund';\n\n// ./lib/olympiad/contracts\nimport getOlympiadContract from './olympiad/contracts/getOlympiadContract';\n\n// ./lib/olympiad/transactions\nimport claimReward from './olympiad/transactions/claimReward';\nimport registerForCompetition from './olympiad/transactions/registerForCompetition';\nimport signOlympiadTermsAndConditions from './olympiad/transactions/signOlympiadTermsAndConditions';\n\n// ./lib/participation/calls\nimport getLastRequest from './participation/calls/getLastRequest';\nimport getParticipation from './participation/calls/getParticipation';\nimport isInvestmentRequestPermittedAndAllowed from './participation/calls/isInvestmentRequestPermittedAndAllowed';\n\n// ./lib/participation/constants\nimport requestStatus from './participation/constants/requestStatus';\nimport requestTypes from './participation/constants/requestTypes';\n\n// ./lib/participation/contracts\nimport getComplianceContract from './participation/contracts/getComplianceContract';\n\n// ./lib/participation/transactions\nimport executeRequest from './participation/transactions/executeRequest';\nimport invest from './participation/transactions/invest';\nimport list from './participation/transactions/list';\nimport redeem from './participation/transactions/redeem';\nimport redeemAllOwnedAssets from './participation/transactions/redeemAllOwnedAssets';\n\n// ./lib/pricefeeds/calls\nimport getNextEpochTime from './pricefeeds/calls/getNextEpochTime';\nimport getOperators from './pricefeeds/calls/getOperators';\nimport getPrice from './pricefeeds/calls/getPrice';\nimport getPriceByPriceFeed from './pricefeeds/calls/getPriceByPriceFeed';\nimport getPriceFeedsByOwner from './pricefeeds/calls/getPriceFeedsByOwner';\nimport getQuoteAssetSymbol from './pricefeeds/calls/getQuoteAssetSymbol';\nimport getRegisteredAssets from './pricefeeds/calls/getRegisteredAssets';\nimport getStakersAndAmounts from './pricefeeds/calls/getStakersAndAmounts';\nimport getStakingPriceFeedOwner from './pricefeeds/calls/getStakingPriceFeedOwner';\nimport getStakingToken from './pricefeeds/calls/getStakingToken';\nimport getTotalStaked from './pricefeeds/calls/getTotalStaked';\nimport getTotalStakedByAddr from './pricefeeds/calls/getTotalStakedByAddr';\nimport getUpdateInterval from './pricefeeds/calls/getUpdateInterval';\nimport hasRecentPrice from './pricefeeds/calls/hasRecentPrice';\n\n// ./lib/pricefeeds/contracts\nimport getCanonicalPriceFeedContract from './pricefeeds/contracts/getCanonicalPriceFeedContract';\nimport getPriceFeedContract from './pricefeeds/contracts/getPriceFeedContract';\nimport getStakingPriceFeedContract from './pricefeeds/contracts/getStakingPriceFeedContract';\n\n// ./lib/pricefeeds/events\nimport awaitDataFeedUpdates from './pricefeeds/events/awaitDataFeedUpdates';\n\n// ./lib/pricefeeds/transactions/multisig\nimport collectAndUpdate from './pricefeeds/transactions/multisig/collectAndUpdate';\n\n// ./lib/pricefeeds/transactions/operator\nimport depositStake from './pricefeeds/transactions/operator/depositStake';\nimport setupPriceFeed from './pricefeeds/transactions/operator/setupPriceFeed';\nimport updatePriceFeed from './pricefeeds/transactions/operator/updatePriceFeed';\nimport withdrawStake from './pricefeeds/transactions/operator/withdrawStake';\n\n// ./lib/riskManagement/calls\nimport isMakePermitted from './riskManagement/calls/isMakePermitted';\nimport isTakePermitted from './riskManagement/calls/isTakePermitted';\n\n// ./lib/riskManagement/contracts\nimport getRiskManagementContract from './riskManagement/contracts/getRiskManagementContract';\n\n// ./lib/utils/constants\nimport networks from './utils/constants/networks';\nimport providers from './utils/constants/providers';\n\n// ./lib/utils/environment\nimport Environment from './utils/environment/Environment';\nimport getAccountAddress from './utils/environment/getAccountAddress';\nimport getEnvironment from './utils/environment/getEnvironment';\nimport getNetwork from './utils/environment/getNetwork';\nimport isExternalSigner from './utils/environment/isExternalSigner';\nimport isValidEnvironment from './utils/environment/isValidEnvironment';\nimport setEnvironment from './utils/environment/setEnvironment';\n\n// ./lib/utils/ethereum\nimport extractEventDefinitions from './utils/ethereum/extractEventDefinitions';\nimport findEventInLog from './utils/ethereum/findEventInLog';\nimport gasBoost from './utils/ethereum/gasBoost';\nimport getNetworkName from './utils/ethereum/getNetworkName';\nimport onBlock from './utils/ethereum/onBlock';\nimport parseEvent from './utils/ethereum/parseEvent';\nimport sendEther from './utils/ethereum/sendEther';\n\n// ./lib/utils/generic\nimport ensure from './utils/generic/ensure';\nimport getKeyByValue from './utils/generic/getKeyByValue';\nimport isPromise from './utils/generic/isPromise';\nimport isValidId from './utils/generic/isValidId';\nimport resolvePromiseObject from './utils/generic/resolvePromiseObject';\nimport rush from './utils/generic/rush';\nimport toDate from './utils/generic/toDate';\nimport trace from './utils/generic/trace';\n\n// ./lib/utils\nimport getPastEvents from './utils/getPastEvents';\n\n// ./lib/utils/parity\nimport constructTransactionObject from './utils/parity/constructTransactionObject';\nimport getParityProvider from './utils/parity/getParityProvider';\nimport sendTransaction from './utils/parity/sendTransaction';\n\n// ./lib/utils/wallet\nimport createWallet from './utils/wallet/createWallet';\nimport decryptWallet from './utils/wallet/decryptWallet';\nimport encryptWallet from './utils/wallet/encryptWallet';\nimport importWalletFromMnemonic from './utils/wallet/importWalletFromMnemonic';\n\n// ./lib/version/calls\nimport getConfig from './version/calls/getConfig';\nimport getFundForManager from './version/calls/getFundForManager';\nimport getFundMapping from './version/calls/getFundMapping';\nimport getFunds from './version/calls/getFunds';\nimport getManagersMapping from './version/calls/getManagersMapping';\nimport getNativeAssetSymbol from './version/calls/getNativeAssetSymbol';\nimport getRanking from './version/calls/getRanking';\nimport getSubscriptionHistory from './version/calls/getSubscriptionHistory';\n\n// ./lib/version/contracts\nimport getRankingContract from './version/contracts/getRankingContract';\nimport getVersionContract from './version/contracts/getVersionContract';\n\n// ./lib/version/events\nimport melonTracker from './version/events/melonTracker';\n\n// ./lib/version/transactions\nimport setupFund from './version/transactions/setupFund';\nimport signCompetitionTermsAndConditions from './version/transactions/signCompetitionTermsAndConditions';\nimport signTermsAndConditions from './version/transactions/signTermsAndConditions';\n\n// Export named functions.\nexport {\n  getAllowance,\n  getBalance,\n  getTotalSupply,\n  getTokenContract,\n  Address,\n  TokenSymbol,\n  approve,\n  ensureAllowance,\n  transferFrom,\n  transferTo,\n  getAddress,\n  getDecimals,\n  getSymbol,\n  getTokenInfo,\n  getWhiteListedAssets,\n  toProcessable,\n  toReadable,\n  getActiveOrders,\n  getFundRecentTrades,\n  getLastOrderId,\n  getOrder,\n  getOrderbook,\n  getRecentTrades,\n  getExchangeAdapterContract,\n  getMatchingMarketContract,\n  onOrderUpdate,\n  BuyOrSell,\n  Order,\n  Trade,\n  cancelOrderFromAccount,\n  make0xOffChainOrder,\n  makeOrderFromAccount,\n  takeOrderFromAccount,\n  averagePrice,\n  deserializeOrder,\n  getExchangeList,\n  getExchangeName,\n  getMethodNameSignature,\n  getPrices,\n  matchOrders,\n  serializeOrder,\n  getExchangeIndex,\n  getFundInformations,\n  getHoldingsAndPrices,\n  getModules,\n  getOpenOrders,\n  getOrdersHistory,\n  getParticipationAuthorizations,\n  getRequestsHistory,\n  getStake,\n  isShutDown,\n  performCalculations,\n  getFundContract,\n  preflightMakeOrder,\n  preflightTakeOrder,\n  calcSharePriceAndConvertFees,\n  callOnExchange,\n  cancelOrder,\n  makeOrder,\n  shutDownFund,\n  takeMultipleOrders,\n  takeOrder,\n  toggleInvestment,\n  toggleRedemption,\n  getRegistrantFund,\n  getOlympiadContract,\n  claimReward,\n  registerForCompetition,\n  signOlympiadTermsAndConditions,\n  getLastRequest,\n  getParticipation,\n  isInvestmentRequestPermittedAndAllowed,\n  requestStatus,\n  requestTypes,\n  getComplianceContract,\n  executeRequest,\n  invest,\n  list,\n  redeem,\n  redeemAllOwnedAssets,\n  getNextEpochTime,\n  getOperators,\n  getPrice,\n  getPriceByPriceFeed,\n  getPriceFeedsByOwner,\n  getQuoteAssetSymbol,\n  getRegisteredAssets,\n  getStakersAndAmounts,\n  getStakingPriceFeedOwner,\n  getStakingToken,\n  getTotalStaked,\n  getTotalStakedByAddr,\n  getUpdateInterval,\n  hasRecentPrice,\n  getCanonicalPriceFeedContract,\n  getPriceFeedContract,\n  getStakingPriceFeedContract,\n  awaitDataFeedUpdates,\n  collectAndUpdate,\n  depositStake,\n  setupPriceFeed,\n  updatePriceFeed,\n  withdrawStake,\n  isMakePermitted,\n  isTakePermitted,\n  getRiskManagementContract,\n  networks,\n  providers,\n  Environment,\n  getAccountAddress,\n  getEnvironment,\n  getNetwork,\n  isExternalSigner,\n  isValidEnvironment,\n  setEnvironment,\n  extractEventDefinitions,\n  findEventInLog,\n  gasBoost,\n  getNetworkName,\n  onBlock,\n  parseEvent,\n  sendEther,\n  ensure,\n  getKeyByValue,\n  isPromise,\n  isValidId,\n  resolvePromiseObject,\n  rush,\n  toDate,\n  trace,\n  getPastEvents,\n  constructTransactionObject,\n  getParityProvider,\n  sendTransaction,\n  createWallet,\n  decryptWallet,\n  encryptWallet,\n  importWalletFromMnemonic,\n  getConfig,\n  getFundForManager,\n  getFundMapping,\n  getFunds,\n  getManagersMapping,\n  getNativeAssetSymbol,\n  getRanking,\n  getSubscriptionHistory,\n  getRankingContract,\n  getVersionContract,\n  melonTracker,\n  setupFund,\n  signCompetitionTermsAndConditions,\n  signTermsAndConditions,\n};\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/index.js","module.exports = {\"melon\":{\"PriceFeed\":\"0x77Ca8B28C204517C6b8AB0B1E6B96866a9D727f6\",\"SimpleMarket\":\"0x063b0b868e99c9217323bb501d7762090889Ed9E\",\"NoCompliance\":\"0xB582Fe03521E6e26C22B86106851e2B07FEB2ddC\",\"RMMakeOrders\":\"0xc5c0B82D87e89c227B646B5A57aD02948D7526cC\",\"Governance\":\"0x8628183a70aB9C77dd47b4128501d502d559f0c0\",\"simpleAdapter\":\"0x7F310A41815de176feDFF8c3E108b609e376DB26\",\"Version\":\"0x1a1255c55aF2b03044c9b0DAD2113c577fC0F29e\",\"MlnToken\":\"0x3745Cea1Ea3a84a8d1F6a7E2194b6C1f6EE4c94B\",\"EurToken\":\"0x7D2B40C55846fC13d65981B063Ad9E50D48fab32\",\"EthToken\":\"0xB66F2Eda5C484f1a31E60B30161948107A4E982B\",\"Fund\":\"0x5EabB60c0A989B822beEe553D7e0b562BB5bAb2B\"},\"development\":{\"Governance\":\"0x22e53CccFF701644B1a979856422923a8180a29c\",\"EthToken\":\"0x1B62B8006009c4Bec5770e2E4C152b7b87c43997\",\"MlnToken\":\"0xcbFeBC35a180ebB7558A0fb245fB7dBB588fb171\",\"EurToken\":\"0x50b629a5365DB16768d49895C9184e8Be06B9da9\",\"CanonicalPriceFeed\":\"0x470F9788a6b294f51C2E144523E6741b1b7addBE\",\"SimplePriceFeed\":\"0xB8968aA47C5dC3637008f9900E451386825F7425\",\"SimpleMarket\":\"0x2bda9c8D7AE1375A39Bd731d2AF42920e44E437f\",\"NoCompliance\":\"0x2D564CA7811135ba738D612c0D7fdEb5da675754\",\"RMMakeOrders\":\"0x3c32BFC04Eb6C023FDf57c2C001737B0671d7CC6\",\"SimpleAdapter\":\"0x7a2C77a2802a9F3ea7CAC15545c69151fc0dAF7E\",\"CentralizedAdapter\":\"0xa74A36CDE25Adc0aE816cC322947BF6729aB8C52\",\"Version\":\"0x0C89493d901162695519813E1ce9a379F2951cC9\",\"FundRanking\":\"0xfb20D9E8A48928F50E846Ee9B9f6B2eB190d0576\"},\"kovan\":{\"Governance\":\"0x03286b52843541360E84084c1A8e8E6E00c8E95e\",\"CanonicalPriceFeed\":\"0xb0C791fa9797B31B8aEF784FE2068fDB685bA685\",\"MatchingMarket\":\"0xEDf27edCB96886F87df95c865De7Fa48f1A76dc8\",\"MatchingMarketAdapter\":\"0xAebFF6A26FAc6C06dF9e264f0bf96e9614617C88\",\"ZeroExTokenTransferProxy\":\"0x2A3A66955699f9481E1cE649CeBE335d9B3C1488\",\"ZeroExExchange\":\"0x55287a08B9f1bE2a1F9A6E8E88377A0f70C4f445\",\"ZeroExV1Adapter\":\"0x02a6486d0bef92C49552cf90be3F3e92BfFdEbb5\",\"NoCompliance\":\"0x14fb60c4b832DF80F2C8E5EDC87B2525d3f5f085\",\"OnlyManager\":\"0x871df91EDad29e23c15C173845B31d60303448D1\",\"RMMakeOrders\":\"0x68c5613E827a3f8882b92F557CC27Ca0b3c49b52\",\"CentralizedAdapter\":\"0xCe2a5A17eeBF08Abe606090b517A4cdE2eD18D3a\",\"OnlyManagerCompetition\":\"0x5f44118CE55bf8b6E6ED75a8beB1d318c6439971\",\"Version\":\"0x25B0Be6B8Cd2A72A8A1991c4af26E796243cc6fF\",\"FundRanking\":\"0x0e0EF6257569b428c058317722494f21Df38E1C2\",\"Competition\":\"0xc3269F7b9FC42492C9A7297d6f86068e510c7093\"},\"live\":{\"FundRanking\":\"0x1013D5F34d934b052768799efa18cf1aC7423778\",\"PriceFeed\":\"0x79A8Ddb299Bb4Af1f9ee206AF9689dD687d8EdE4\",\"NoCompliance\":\"0xdD99ea2d4BD06451b119f07673979c5A4842C656\",\"OnlyManager\":\"0xFb5978C7ca78074B2044034CbdbC3f2E03Dfe2bA\",\"RMMakeOrders\":\"0x562fc9fc8c7284ea01645dd0629020bcc7220fd5\",\"SimpleAdapter\":\"0x703805ae406016d5fb716f805F07821018A38922\",\"Governance\":\"0x73185bc2a1aa75ec49ba9239b28ea22fda5940fa\",\"Version\":\"0x931Dddf00c66C132FC6452F546e8a0e831685F70\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/addressBook.json\n// module id = 41\n// module chunks = 0","module.exports = require(\"@babel/runtime/core-js/object/keys\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/core-js/object/keys\"\n// module id = 42\n// module chunks = 0","// this file tracks addresses of tokens relevant to the Melon protocol\nmodule.exports = {\n  kovan: {\n    'CHF-T': {\n      address: '0x0000000000000000000000000000000000000000',\n      name: 'Swiss Franc token (dummy)',\n      decimals: 18,\n      url: '',\n      ipfsHash: ''\n    },\n    'ANT-T': {\n      address: '0x560848C7a470b9aA87F7283FDb31bD6773771660',\n      name: 'Aragon Network Token',\n      decimals: 18,\n      url: 'https://aragon.one/',\n      ipfsHash: '',\n    },\n    'AVT-T': {\n      address: '0x3f9cf17C8cC1883B75AE9a532597340564601538',\n      name: 'AventCoin',\n      decimals: 18,\n      url: 'https://aventus.io/',\n      ipfsHash: '',\n    },\n    'BNT-T': {\n      address: '0x79Fe4882428F457C086Be4584e3E164C13F2017e',\n      name: 'Bancor Network Token',\n      decimals: 18,\n      url: 'https://www.bancor.network/',\n      ipfsHash: '',\n    },\n    'BAT-T': {\n      address: '0x47eB525440e976387b80b41cB22CF4dc0A7E9Db0',\n      name: 'Basic Attention Token',\n      decimals: 18,\n      url: 'https://www.basicattentiontoken.org/',\n      ipfsHash: '',\n    },\n    'BTC-T': {\n      address: '0x3824e72d60Ec60f3f02ae172de7c37C59876cC14',\n      name: 'Bitcoin Token',\n      decimals: 8,\n      url: 'https://bitcoin.org/en/',\n      ipfsHash: '',\n    },\n    'DGD-T': {\n      address: '0xe67E7cE765b67AA1Dcd731458eD50C04BfC78d74',\n      name: 'Digix Dao Token',\n      decimals: 9,\n      url: 'https://dgx.io/',\n      ipfsHash: '',\n    },\n    'DGX-T': {\n      address: '0xc6194A293784FC652488c0570759E2eBb8456104',\n      name: 'Digix Gold Token',\n      decimals: 9,\n      url: 'https://dgx.io/',\n      ipfsHash: '',\n    },\n    'DOGE-T': {\n      address: '0x1cbe9e3FeD97A51BA6bef63C00124aAea8411a78',\n      name: 'Dogecoin Token',\n      decimals: 8,\n      url: 'http://dogecoin.com/',\n      ipfsHash: '',\n    },\n    'ETC-T': {\n      address: '0x8D57263632EFDC077b5417Baa434f8Fa9365A1d7',\n      name: 'Ether Classic Token',\n      decimals: 18,\n      url: 'https://ethereumclassic.github.io/',\n      ipfsHash: '',\n    },\n    'ETH-T': {\n      address: '0x26bB6da136a71Aa8D62D488BD3C91cC2151F029b',\n      name: 'Ether Token',\n      decimals: 18,\n      url: 'https://ethereum.org/',\n      ipfsHash: '',\n    },\n    'EUR-T': {\n      address: '0x6d49eB0E3bDef4F907d3952AC4Cab06c3ea9fE6b',\n      name: 'Euro Token',\n      decimals: 8,\n      url: 'https://www.decentralizedcapital.com/#!/',\n      ipfsHash: '',\n    },\n    'GNO-T': {\n      address: '0x89C6dd6A72E2e5838B1CfDc1059Dad22CE4b6A4b',\n      name: 'Gnosis Token',\n      decimals: 18,\n      url: 'https://gnosis.pm/',\n      ipfsHash: '',\n    },\n    'GNT-T': {\n      address: '0x3A3c7f4eF0589F18eFEc7EBA767EdAe3e73B95cD',\n      name: 'Golem Network Token',\n      decimals: 18,\n      url: 'https://golem.network/',\n      ipfsHash: '',\n    },\n    'ICN-T': {\n      address: '0xAAe7a8C55e31b94A67B411be035573F5dEF419fB',\n      name: 'Iconomi Token',\n      decimals: 18,\n      url: 'https://www.iconomi.net/',\n      ipfsHash: '',\n    },\n    'LTC-T': {\n      address: '0x38a31aD4F640280d973687C76433276F2817F5C1',\n      name: 'Litecoin Token',\n      decimals: 8,\n      url: 'https://litecoin.com/',\n      ipfsHash: '',\n    },\n    'REP-T': {\n      address: '0x19044fF4C8f00b16AB660407ABfFFac8FD1cE833',\n      name: 'Rep Token',\n      decimals: 18,\n      url: 'https://augur.net/',\n      ipfsHash: '',\n    },\n    'XRP-T': {\n      address: '0x664a756CBb64A207cD69BacCb1d153F010Bc02ED',\n      name: 'Ripple Token',\n      decimals: 6,\n      url: 'https://ripple.com/',\n      ipfsHash: '',\n    },\n    'SNGLS-T': {\n      address: '0xd466408b253beA8DC07b484c43B5d9690396D0c6',\n      name: 'SingularDTV Token',\n      decimals: 0,\n      url: 'https://singulardtv.com/',\n      ipfsHash: '',\n    },\n    'SNT-T': {\n      address: '0xc5Ab5219a293426eb60ab0A0091D40FF676816c2',\n      name: 'Status Network Token',\n      decimals: 18,\n      url: 'https://status.im/',\n      ipfsHash: '',\n    },\n    'ZRX-T': {\n      address: '0x8925daf23aD19c68fF317038C6c6018cfBB70704',\n      name: '0x Protocol Token',\n      decimals: 18,\n      url: 'https://0xproject.com/',\n      ipfsHash: '',\n    },\n    'REQ-T': {\n      address: '0x30C64c8D3e985D91F9c1eFAf4CCDe66b2925ea7C',\n      name: 'Request Network',\n      decimals: 18,\n      url: 'https://request.network',\n      ipfsHash: '',\n    },\n    'FUN-T': {\n      address: '0x28d1FC38670499E0C439FefC886A91B203139a1f',\n      name: 'FunFair',\n      decimals: 8,\n      url: 'funfair.io',\n      ipfsHash: '',\n    },\n    'SAN-T': {\n      address: '0x76B614b11afB1474836e5762984fC0445F5F9d70',\n      name: 'Santiment Network Token',\n      decimals: 18,\n      url: 'santiment.net',\n      ipfsHash: '',\n    },\n    'MANA-T': {\n      address: '0x2d29f5cA0e8d10822552Bf73553E263eE68278d0',\n      name: 'Decentraland',\n      decimals: 18,\n      url: 'decentraland.org',\n      ipfsHash: '',\n    },\n    'USDT-T': {\n      address: '0x57030466f1C62cDF9201EcCa416c68cEB89378da',\n      name: 'Tether',\n      decimals: 6,\n      url: 'tether.to',\n      ipfsHash: '',\n    },\n    'ZEC-T': {\n      address: '0x3D9Ac387cf69F6F65Aa32EE78A46bEd0C147F6A9',\n      name: 'ZCash',\n      decimals: 8,\n      url: 'z.cash',\n      ipfsHash: '',\n    },\n    'WETH-T': {\n      address: '0xa27Af8713623fCc239d49108B1A7b187c133e88B',\n      name: 'Ether Token',\n      decimals: 18,\n      url: 'ethereum.org',\n      ipfsHash: '',\n    },\n    'MLN-T': {\n      address: '0xDC5fC5DaB642f688Bc5BB58bEF6E0d452D7ae123',\n      name: 'Melon Token',\n      decimals: 18,\n      url: 'melonport.com',\n      ipfsHash: '',\n    },\n    'MKR-T': {\n      address: '0x71BE1386EC4d6d780b208529ABc349Ee69c241Cd',\n      name: 'MakerDao',\n      decimals: 18,\n      url: 'makerdao.com',\n      ipfsHash: '',\n    },\n    'DAI-T': {\n      address: '0x82789d9a0951974E58EbB91DF13b84424e51Acc4',\n      name: 'Dai',\n      decimals: 18,\n      url: '',\n      ipfsHash: '',\n    },\n    'KNC-T': {\n      address: '0x46c4B65F40f686c3F3738395c36AceA70C06F3C2',\n      name: 'Kyber Network',\n      decimals: 18,\n      url: 'kyber.network',\n      ipfsHash: '',\n    },\n    'JNT-T': {\n      address: '0xB04985BFaB8550C43C00528D9d06492916cB9df6',\n      name: 'Jibrel Network',\n      decimals: 18,\n      url: 'jibrel.network',\n      ipfsHash: '',\n    },\n    'OMG-T': {\n      address: '0xfdBe0D69a110D1f0dc6aEc8588804da88173B8F0',\n      name: 'Omise-Go',\n      decimals: 18,\n      url: 'omise.co',\n      ipfsHash: '',\n    },\n  },\n  live: {\n    'CHF': {\n      address: '0x0000000000000000000000000000000000000000',\n      name: 'Swiss Franc token (dummy)',\n      decimals: 18,\n      url: '',\n      ipfsHash: ''\n    },\n    'WETH': {\n      address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n      name: 'Wrapped ETH contract - Ether in ERC20 format',\n      decimals: 18,\n      url: 'https://makerdao.com/',\n      ipfsHash: '',\n      zeroBeforeApproval: false,\n      isERC223: false\n    },\n    'DAI': {\n      address: '0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359',\n      name: 'Dai',\n      decimals: 18,\n      url: 'https://makerdao.com/',\n      ipfsHash: '',\n      zeroBeforeApproval: false,\n      isERC223: false\n    },\n    'SAI': {\n      address: '0x59adcf176ed2f6788a41b8ea4c4904518e62b6a4',\n      name: '',\n      decimals: 18,\n      url: 'https://makerdao.com/',\n      ipfsHash: '',\n    },\n    'MKR': {\n      address: '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2',\n      name: 'Maker Dao',\n      decimals: 18,\n      url: 'https://makerdao.com/',\n      ipfsHash: '',\n      zeroBeforeApproval: false,\n      isERC223: false\n    },\n    'DGD': {\n      address: '0xe0b7927c4af23765cb51314a0e0521a9645f0e2a',\n      name: 'Digix Dao',\n      decimals: 9,\n      url: 'https://dgx.io/',\n      ipfsHash: '',\n    },\n    'GNT': {\n      address: '0xa74476443119A942dE498590Fe1f2454d7D4aC0d',\n      name: 'Golem Network Token',\n      decimals: 18,\n      url: 'https://golem.network/',\n      ipfsHash: '',\n    },\n    'REP': {\n      address: '0xe94327d07fc17907b4db788e5adf2ed424addff6',\n      name: 'Reputation',\n      decimals: 18,\n      url: 'https://augur.net/',\n      ipfsHash: '',\n    },\n    'ICN': {\n      address: '0x888666ca69e0f178ded6d75b5726cee99a87d698',\n      name: 'Iconomi',\n      decimals: 18,\n      url: 'https://www.iconomi.net/',\n      ipfsHash: '',\n    },\n    'SNGLS': {\n      address: '0xaec2e87e0a235266d9c5adc9deb4b2e29b54d009',\n      name: 'SingularDTV',\n      decimals: 0,\n      url: 'https://singulardtv.com/',\n      ipfsHash: '',\n    },\n    'MLN': {\n      address: '0xbeb9ef514a379b997e0798fdcc901ee474b6d9a1',\n      name: 'Melon',\n      decimals: 18,\n      url: 'http://melon.fund/',\n      ipfsHash: '',\n      zeroBeforeApproval: false,\n      isERC223: false\n    },\n    'BAT': {\n      address: '0x0d8775f648430679a709e98d2b0cb6250d2887ef',\n      name: 'Basic Attention Token',\n      decimals: 18,\n      url: 'https://www.basicattentiontoken.org/',\n      ipfsHash: '',\n    },\n    'ZRX': {\n      address: '0xe41d2489571d322189246dafa5ebde1f4699f498',\n      name: '0x Token',\n      decimals: 18,\n      url: '0xproject.com',\n      ipfsHash: '',\n    },\n    'KNC': {\n      address: '0xdd974d5c2e2928dea5f71b9825b8b646686bd200',\n      name: 'Kyber Network',\n      decimals: 18,\n      url: 'kyber.network',\n      ipfsHash: '',\n    },\n    'JNT': {\n      address: '0xa5fd1a791c4dfcaacc963d4f73c6ae5824149ea7',\n      name: 'Jibrel Network',\n      decimals: 18,\n      url: 'jibrel.network',\n      ipfsHash: '',\n    },\n    'OMG': {\n      address: '0xd26114cd6EE289AccF82350c8d8487fedB8A0C07',\n      name: 'Omise-Go',\n      decimals: 18,\n      url: 'omise.co',\n      ipfsHash: '',\n    },\n    'ANT': {\n      address: '0x960b236A07cf122663c4303350609A66A7B288C0',\n      name: 'Aragon Network Token',\n      decimals: 18,\n      url: 'https://aragon.one/',\n      ipfsHash: '',\n    },\n    'GNO': {\n      address: '0x6810e776880c02933d47db1b9fc05908e5386b96',\n      name: 'Gnosis Token',\n      decimals: 18,\n      url: 'https://gnosis.pm/',\n      ipfsHash: '',\n    },\n    'REQ': {\n      address: '0x8f8221afbb33998d8584a2b05749ba73c37a938a',\n      name: 'Request Network',\n      decimals: 18,\n      url: 'https://request.network',\n      ipfsHash: '',\n    },\n    // \"NMR\": \"0x1776e1f26f98b1a5df9cd347953a26dd3cb46671\"\n    // 'W-GNT': {\n    //   address: '0xe0b7927c4af23765cb51314a0e0521a9645f0e2a',\n    //   name: 'Wrapped Golem Network Token',\n    //   decimals: 9,\n    //   url: 'https://golem.network/',\n    //   ipfsHash: '',\n    // },\n    // \"RHOC\": \"0x168296bb09e24a88805cb9c33356536b980d3fc5\",\n    // \"TIME\": \"0x6531f133e6deebe7f2dce5a0441aa7ef330b4e53\",\n    // \"GUP\": \"0xf7b098298f7c69fc14610bf71d5e02c60792894c\",\n    // \"VSL\": \"0x5c543e7ae0a1104f78406c340e9c64fd9fce5170\",\n    // \"PLU\": \"0xd8912c10681d8b21fd3742244f44658dba12264e\",\n    // \"1ST\": \"0xaf30d2a7e90d7dc361c8c4585e9bb7d2f6f15bc7\",\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/utils/info/tokenInfo.js\n// module id = 43\n// module chunks = 0","// @flow\nimport type { AssetConfig, Config } from '../../version/calls/getConfig';\n\n/**\n * Gets the token info by `tokenSymbol`\n * @throws If no token with given symbol is registered\n */\nconst getTokenInfo = (config: Config, tokenSymbol: string): AssetConfig =>\n  config.assets.find(t => t.symbol === tokenSymbol.toUpperCase()) ||\n  (() => {\n    throw new Error(`No token found with symbol ${tokenSymbol}`);\n  })();\n\nexport default getTokenInfo;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/assets/utils/getTokenInfo.js","// @flow\nimport BigNumber from 'bignumber.js';\n\nimport type { Order } from '../schemas/Order';\n\n/**\n * Prices computed from an Order\n */\nexport type Prices = {\n  buy: BigNumber,\n  sell: BigNumber,\n};\n\n/**\n * Get buy and sell prices for a given `order`\n */\nconst getPrices = (order: Order): Prices => ({\n  buy: new BigNumber(order.sell.howMuch).div(order.buy.howMuch),\n  sell: new BigNumber(order.buy.howMuch).div(order.sell.howMuch),\n});\n\nexport default getPrices;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/utils/getPrices.js","module.exports = require(\"@babel/runtime/core-js/json/stringify\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/core-js/json/stringify\"\n// module id = 46\n// module chunks = 0","// @flow\n\n/**\n * Rush: If `promise` didn't resolve before `wait` miliseconds: recect with\n * `errMsg`\n * @throws rejects the promise\n */\nconst rush = async (\n  promise: Promise<any>,\n  errMsg: string,\n  wait: number = 30000,\n): Promise<any> =>\n  wait\n    ? Promise.race([\n        promise,\n        new Promise((resolve, reject) =>\n          global.setTimeout(\n            () =>\n              reject(\n                new Error(\n                  `${promise} took longer than ${wait /\n                    1000} seconds to fulfill/reject: ${errMsg}`,\n                ),\n              ),\n            wait,\n          ),\n        ),\n      ])\n    : promise;\n\nexport default rush;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/generic/rush.js","// @flow\nimport RiskMgmtinterface from '@melonproject/smart-contracts/out/riskmgmt/RMMakeOrders.abi.json';\n\n/**\n * Get deployed risk management contract instance\n */\n\nconst getRiskManagementContract = async (environment, fundContract) => {\n  const [\n    ,\n    ,\n    RiskMgmtContractAddress,\n  ] = await fundContract.instance.getModules.call();\n  return environment.api.newContract(\n    RiskMgmtinterface,\n    RiskMgmtContractAddress,\n  );\n};\n\nexport default getRiskManagementContract;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/riskManagement/contracts/getRiskManagementContract.js","// @flow\nimport BigNumber from 'bignumber.js';\nimport getConfig from '../../version/calls/getConfig';\nimport getFundContract from '../../fund/contracts/getFundContract';\nimport toReadable from '../../assets/utils/toReadable';\n\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * The participation of an investor in fund\n */\ntype Participation = {\n  personalStake: BigNumber,\n  totalSupply: BigNumber,\n};\n\n/**\n * Get the personalStake and totalSupply of an `investorAddress` in a fund at\n * fundAddress\n */\nconst getParticipation = async (\n  environment: Environment,\n  { fundAddress, investorAddress },\n): Promise<Participation> => {\n  const config = await getConfig(environment);\n  const fundContract = await getFundContract(environment, fundAddress);\n\n  const personalStake = await fundContract.instance.balanceOf.call({}, [\n    investorAddress,\n  ]);\n  const totalSupply = await fundContract.instance.totalSupply.call();\n\n  return {\n    personalStake: toReadable(config, personalStake, config.quoteAssetSymbol),\n    totalSupply: toReadable(config, totalSupply, config.quoteAssetSymbol),\n  };\n};\n\nexport default getParticipation;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/participation/calls/getParticipation.js","module.exports = require(\"graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql\"\n// module id = 50\n// module chunks = 0","// @flow\nimport BigNumber from 'bignumber.js';\nimport getConfig from '../../version/calls/getConfig';\nimport getTokenContract from '../contracts/getTokenContract';\nimport toReadable from '../utils/toReadable';\n\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * @returns the amount which spender is still allowed to withdraw from owner\n * @param tokenSymbol the symbol of the token. Example: \"MLN-T\"\n * @param ownerAddress holds the funds currently\n * @param spenderAddress is eligible to spend the funds\n */\nconst getAllowance: BigNumber = async (\n  environment: Environment,\n  { tokenSymbol, ownerAddress, spenderAddress },\n): Promise<BigNumber> => {\n  const config = await getConfig(environment);\n  const tokenContract = await getTokenContract(environment, tokenSymbol);\n  const approvedAmount: BigNumber = await tokenContract.instance.allowance.call(\n    {},\n    [ownerAddress, spenderAddress],\n  );\n\n  return toReadable(config, approvedAmount, tokenSymbol);\n};\n\nexport default getAllowance;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/assets/calls/getAllowance.js","// @flow\nimport getVersionContract from '../contracts/getVersionContract';\nimport getSymbol from '../../assets/utils/getSymbol';\nimport getConfig from '../../version/calls/getConfig';\n\nimport type { TokenSymbol } from '../../assets/schemas/TokenSymbol';\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * Gets the native asset of the version\n */\nconst getNativeAssetSymbol = async (\n  environment: Environment,\n): Promise<TokenSymbol> => {\n  const config = await getConfig(environment);\n  const versionContract = await getVersionContract(environment);\n\n  const address = await versionContract.instance.getNativeAsset.call();\n\n  return getSymbol(config, address);\n};\n\nexport default getNativeAssetSymbol;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/version/calls/getNativeAssetSymbol.js","// @flow\nimport networks from '../constants/networks';\n\n/**\n * `id` to name mapping helper\n */\nconst getNetworkName = (id: string | number) => {\n  const networkEntry = Object.entries(networks).find(\n    ([, value]) => id.toString() === value,\n  );\n  return networkEntry ? networkEntry[0].toLowerCase() : null;\n};\n\nexport default getNetworkName;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/ethereum/getNetworkName.js","module.exports = require(\"@babel/runtime/core-js/object/entries\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/core-js/object/entries\"\n// module id = 54\n// module chunks = 0","const networks = {\n  LIVE: '1',\n  ROBSTEN: '3',\n  RINKEBY: '4',\n  KOVAN: '42',\n};\n\nexport default networks;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/constants/networks.js","// @flow\nimport getCanonicalPriceFeedContract from '../contracts/getCanonicalPriceFeedContract';\nimport getSymbol from '../../assets/utils/getSymbol';\nimport getConfig from '../../version/calls/getConfig';\n\nimport type { TokenSymbol } from '../../assets/schemas/TokenSymbol';\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * Gets the quote asset of the current PriceFeed\n */\nconst getQuoteAssetSymbol = async (\n  environment: Environment,\n): Promise<TokenSymbol> => {\n  const config = await getConfig(environment);\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n  const address = await canonicalPriceFeedContract.instance.getQuoteAsset.call();\n\n  return getSymbol(config, address);\n};\n\nexport default getQuoteAssetSymbol;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/calls/getQuoteAssetSymbol.js","import Utils from 'ethers-utils';\nimport tokenInfo from '@melonproject/smart-contracts/utils/info/tokenInfo';\nimport getCanonicalPriceFeedContract from '../../pricefeeds/contracts/getCanonicalPriceFeedContract';\n\n/**\n * Gets list of white listed asset pairs on production exchange\n */\nconst getWhiteListedAssets = async (environment, network) => {\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n\n  const promiseForInfo = Object.keys(tokenInfo[network]).map(async symbol => {\n    const asset = tokenInfo[network][symbol];\n\n    const info = await canonicalPriceFeedContract.instance.assetInformation.call(\n      {},\n      [asset.address],\n    );\n\n    return {\n      address: asset.address,\n      name: Utils.toUtf8String(Utils.stripZeros(info[1].reverse()).reverse()),\n      symbol: Utils.toUtf8String(Utils.stripZeros(info[2].reverse()).reverse()),\n      decimals: parseInt(info[3], 10),\n      url: info[4],\n      ipfsHash: info[5],\n      isWhiteListed: info[0],\n    };\n  });\n\n  const allAssetsInfos = await Promise.all(promiseForInfo);\n\n  return allAssetsInfos.filter(asset => asset.isWhiteListed);\n};\n\nexport default getWhiteListedAssets;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/assets/utils/getWhiteListedAssets.js","// @flow\nimport BigNumber from 'bignumber.js';\nimport trace from '../generic/trace';\nimport ensure from '../generic/ensure';\n\n/**\n * Takes a truffle `method` (eg. myContract.myMethod) and estimates the gas\n * consumption according to `params` and `options` and boosts this estimation\n * by the `multiplier`.\n */\nconst gasBoost = async (\n  method: Function,\n  params: Array<string | BigNumber | number>,\n  options: Object,\n  environment,\n  multiplier: number = 1.2,\n): Promise<any> => {\n  const gasEstimation = await method.estimateGas(options, params);\n\n  const latestBlock = await environment.api.eth.getBlockByNumber();\n\n  const gasLimit = Math.floor(latestBlock.gasLimit * 0.998);\n\n  ensure(\n    gasEstimation < latestBlock.gasLimit * 0.998,\n    `Gas estimation ${gasEstimation} is above gas limit: ${gasLimit}`,\n  );\n\n  let multipliedGasEstimation = Math.ceil(gasEstimation * multiplier);\n\n  if (multipliedGasEstimation > latestBlock.gasLimit) {\n    const fallback = Math.ceil(gasLimit);\n    trace.warn(\n      `Boosted gas estimation (${multipliedGasEstimation +\n        0}) would be over latestBlocks gasLimit (${gasLimit +\n        0}). Falling back to ${fallback}`,\n    );\n\n    ensure(\n      fallback >= gasEstimation,\n      `Fallback (${fallback}) lower than gas estimation (${gasEstimation})`,\n    );\n    multipliedGasEstimation = fallback;\n  }\n  return multipliedGasEstimation;\n};\n\nexport default gasBoost;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/ethereum/gasBoost.js","// @flow\ntype Trace = {\n  message: string,\n  category: 'trace' | 'log' | 'warn' | 'error' | 'debug',\n  data: any,\n};\n\n/**\n * Helper function to unveil internals of melon.js for logging\n */\nconst trace = ({ message, category = 'trace', data }: Trace): void => {\n  const newTrace = { timestamp: new Date(), message, category, data };\n  // setup.tracer(newTrace);\n  console.log(newTrace.timestamp, newTrace.category, newTrace.message);\n};\n\nconst overloading = (...args) => {\n  if (typeof args[0] === 'string') {\n    const [message, data, category] = args;\n    trace({ message, data, category });\n  } else {\n    trace(args[0]);\n  }\n};\n\noverloading.log = (message: string, data: any) =>\n  trace({ message, data, category: 'log' });\n\noverloading.warn = (message: string, data: any) =>\n  trace({ message, data, category: 'warn' });\n\nexport default overloading;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/generic/trace.js","/* eslint-disable no-underscore-dangle */\nconst constructTransactionObject = (contract, method, parameters, options) => {\n  const functionABI = contract.abi._interface.find(e => e._name === method);\n\n  const encodeOptions = contract._encodeOptions(\n    functionABI,\n    options,\n    parameters,\n  );\n  return encodeOptions;\n};\n\nexport default constructTransactionObject;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/parity/constructTransactionObject.js","// @flow\nimport BigNumber from 'bignumber.js';\nimport { range } from 'ramda';\nimport getOrder from './getOrder';\nimport getPrices from '../utils/getPrices';\nimport getExchangeAdapterContract from '../contracts/getExchangeAdapterContract';\nimport getConfig from '../../version/calls/getConfig';\n\nimport type { Order } from '../schemas/Order';\n\n/**\n * Get `numberOfOrders` active orders for the `baseTokenSymbol`/\n * `quoteTokenSymbol` asset pair\n */\nconst getActiveOrders = async (\n  environment,\n  { baseTokenSymbol, quoteTokenSymbol, numberOfOrders = 105 },\n): Promise<[Order]> => {\n  const exchangeAdapterContract = await getExchangeAdapterContract(environment);\n  const config = await getConfig(environment);\n\n  const lastId: BigNumber = await exchangeAdapterContract.instance.getLastOrderId.call(\n    {},\n    [config.exchangeAddress],\n  );\n  const endIndex: number =\n    lastId.minus(numberOfOrders).toNumber() < 0\n      ? 1\n      : lastId.minus(numberOfOrders).toNumber();\n\n  const getOrdersPromises: [Promise<Order>] = range(\n    endIndex,\n    lastId.toNumber() + 1,\n  ).map(async id => {\n    const order = await getOrder(environment, { id });\n    const assetPairArray = [baseTokenSymbol, quoteTokenSymbol];\n    if (\n      order.isActive &&\n      (assetPairArray.includes(order.buy.symbol) &&\n        assetPairArray.includes(order.sell.symbol))\n    ) {\n      if (order.buy.symbol === baseTokenSymbol) {\n        order.price = getPrices(order).buy;\n        order.type = 'buy';\n      } else {\n        order.price = getPrices(order).sell;\n        order.type = 'sell';\n      }\n      return order;\n    }\n    return null;\n  });\n\n  const rawOrderbook: [Order] = await Promise.all(getOrdersPromises);\n  const activeOrders = rawOrderbook.filter(o => !!o).sort((a, b) => {\n    if (a.type === b.type) return b.price.minus(a.price).toNumber();\n    return a.type === 'buy' ? 1 : -1;\n  });\n  return activeOrders;\n};\n\nexport default getActiveOrders;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/calls/getActiveOrders.js","// @flow\nimport Api from '@parity/api';\nimport BigNumber from 'bignumber.js';\nimport getAddress from '../../assets/utils/getAddress';\nimport getConfig from '../../version/calls/getConfig';\nimport getDecimals from '../../assets/utils/getDecimals';\nimport getMatchingMarketContract from '../contracts/getMatchingMarketContract';\nimport toReadable from '../../assets/utils/toReadable';\nimport toDate from '../../utils/generic/toDate';\n\nimport type { Trade } from '../schemas/Trade';\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * get all recent trades for a given asset pair `baseTokenSymbol`/\n * `quoteTokenSymbol` in the `inlastXdays`\n */\nconst getRecentTrades = async (\n  environment: Environment,\n  { baseTokenSymbol, quoteTokenSymbol, inlastXdays = 1 },\n): Promise<[Trade]> => {\n  const config = await getConfig(environment);\n  const simpleMarketContract = await getMatchingMarketContract(environment);\n\n  const blocksPerDay = 21600;\n  const numberOfDays = inlastXdays;\n\n  const blockNumber = await environment.api.eth.blockNumber();\n\n  const hashed = Api.util.sha3(\n    'LogTake(bytes32,bytes32,address,address,address,address,uint128,uint128,uint64)',\n  );\n  const filter = {\n    fromBlock: blockNumber.toNumber() - blocksPerDay * numberOfDays,\n    toBlock: 'latest',\n    address: simpleMarketContract.address,\n    topics: [hashed],\n  };\n  const pastEvents = await environment.api.eth.getLogs(filter);\n  const decodedLogs = simpleMarketContract.parseEventLogs(pastEvents);\n\n  if (baseTokenSymbol && quoteTokenSymbol) {\n    const baseTokenAddress = getAddress(config, baseTokenSymbol);\n    const quoteTokenAddress = getAddress(config, quoteTokenSymbol);\n    const decimalDifference =\n      getDecimals(config, quoteTokenSymbol) -\n      getDecimals(config, baseTokenSymbol);\n    return decodedLogs\n      .map(event => {\n        const trade = {\n          maker: event.params.maker.value,\n          taker: event.params.taker.value,\n          timestamp: toDate(event.params.timestamp.value),\n          transactionHash: event.transactionHash,\n        };\n        if (\n          event.params.buy_gem.value.toLowerCase() === quoteTokenAddress &&\n          event.params.pay_gem.value.toLowerCase() === baseTokenAddress\n        ) {\n          if (getDecimals(config, baseTokenSymbol) !== 18) {\n            trade.price = new BigNumber(event.params.give_amt.value)\n              .div(event.params.take_amt.value)\n              .div(10 ** decimalDifference);\n          } else {\n            trade.price = new BigNumber(event.params.give_amt.value).div(\n              event.params.take_amt.value,\n            );\n          }\n          trade.type = 'buy';\n          trade.quantity = toReadable(\n            config,\n            event.params.take_amt.value,\n            baseTokenSymbol,\n          );\n        } else if (\n          event.params.buy_gem.value.toLowerCase() === baseTokenAddress &&\n          event.params.pay_gem.value.toLowerCase() === quoteTokenAddress\n        ) {\n          if (getDecimals(config, baseTokenSymbol) !== 18) {\n            trade.price = new BigNumber(event.params.take_amt.value)\n              .div(event.params.give_amt.value)\n              .div(10 ** decimalDifference);\n          } else {\n            trade.price = new BigNumber(event.params.take_amt.value).div(\n              event.params.give_amt.value,\n            );\n          }\n          trade.type = 'sell';\n          trade.quantity = toReadable(\n            config,\n            event.params.give_amt.value,\n            baseTokenSymbol,\n          );\n        } else {\n          return null;\n        }\n        return trade;\n      })\n      .filter(o => !!o);\n  }\n  return decodedLogs;\n};\n\nexport default getRecentTrades;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/calls/getRecentTrades.js","// @flow\nimport type { Environment } from '../../utils/environment/Environment';\nimport getFundContract from '../contracts/getFundContract';\nimport ensure from '../../utils/generic/ensure';\n/**\n * Gets the index of an exchange on a specific fund\n * @throws If this exchange address is unknown to the fund\n */\nconst getExchangeIndex = async (\n  environment: Environment,\n  exchangeAddress: String,\n  fundAddress: String,\n) => {\n  const fundContract = await getFundContract(environment, fundAddress);\n  const fundExchanges = await fundContract.instance.getExchangeInfo.call(\n    {},\n    [],\n  );\n  // eslint-disable-next-line no-underscore-dangle\n  const index = fundExchanges[0].findIndex(e => e._value === exchangeAddress);\n  ensure(\n    index !== -1,\n    `Fund with address ${fundAddress} does not authorize exchange with address ${exchangeAddress}`,\n  );\n\n  return index;\n};\n\nexport default getExchangeIndex;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/calls/getExchangeIndex.js","// @flow\nimport Utils from 'ethers-utils';\nimport getFundContract from '../contracts/getFundContract';\nimport toDate from '../../utils/generic/toDate';\n\nimport type { Address } from '../../assets/schemas/Address';\n\n/**\n * General fund informations\n */\ntype FundInformations = {\n  fundAddress: Address,\n  owner: Address,\n  name: string,\n  decimals: number,\n  inception: Date,\n};\n\n/**\n * Get general fund informations for fund at `fundAddress`\n */\nconst getFundInformations = async (\n  environment,\n  { fundAddress },\n): Promise<FundInformations> => {\n  const fundContract = getFundContract(environment, fundAddress);\n  const nameInBytes = await fundContract.instance.getName.call();\n  const name = Utils.toUtf8String(\n    Utils.stripZeros(nameInBytes.reverse()).reverse(),\n  );\n  const decimals = (await fundContract.instance.getDecimals.call()).toNumber();\n  const inception = await fundContract.instance.getCreationTime.call();\n  const owner = await fundContract.instance.owner.call();\n  const modules = await fundContract.instance.getModules.call();\n\n  return {\n    fundAddress,\n    name,\n    owner,\n    decimals,\n    inception: toDate(inception),\n    modules,\n  };\n};\n\nexport default getFundInformations;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/calls/getFundInformations.js","// @flow\nimport BigNumber from 'bignumber.js';\nimport getAddress from '../../assets/utils/getAddress';\nimport getConfig from '../../version/calls/getConfig';\nimport getCanonicalPriceFeedContract from '../contracts/getCanonicalPriceFeedContract';\nimport toReadable from '../../assets/utils/toReadable';\n\nimport type { Environment } from '../../utils/environment/Environment';\nimport type { TokenSymbol } from '../../assets/schemas/TokenSymbol';\n\n/**\n * Gets price of `tokenSymbol` against MLN-T\n */\nconst getPrice = async (\n  environment: Environment,\n  tokenSymbol: TokenSymbol,\n): BigNumber => {\n  const config = await getConfig(environment);\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n  const assetAddress = getAddress(config, tokenSymbol);\n\n  const [price, ,] = await canonicalPriceFeedContract.instance.getPrice.call(\n    {},\n    [assetAddress],\n  );\n\n  return toReadable(config, price, config.quoteAssetSymbol);\n};\n\nexport default getPrice;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/calls/getPrice.js","// @flow\nimport getFundContract from '../contracts/getFundContract';\nimport getConfig from '../../version/calls/getConfig';\nimport getMatchingMarketContract from '../../exchange/contracts/getMatchingMarketContract';\nimport getSymbol from '../../assets/utils/getSymbol';\nimport toReadable from '../../assets/utils/toReadable';\nimport toDate from '../../utils/generic/toDate';\nimport getExchangeName from '../../exchange/utils/getExchangeName';\nimport isValidId from '../../utils/generic/isValidId';\n\n/**\n * Get all the orders the fund has made so far, regardless of their status (active, canceled etc.)\n */\n\nconst getOrdersHistory = async (environment, { fundAddress }) => {\n  const config = await getConfig(environment);\n  const exchangeContract = await getMatchingMarketContract(environment);\n\n  const fundContract = getFundContract(environment, fundAddress);\n  const lastOrderIndex = await fundContract.instance.getLastOrderIndex.call(\n    {},\n    [],\n  );\n\n  if (!isValidId(lastOrderIndex)) {\n    return [];\n  }\n\n  const getOrdersPromises = new Array(lastOrderIndex.toNumber() + 1)\n    .fill(undefined)\n    .map(async (val, index) => {\n      const order = await fundContract.instance.orders.call({}, [index]);\n      order.push(index);\n      return order;\n    });\n  const orders = await Promise.all(getOrdersPromises);\n  const formattedOrders = orders.map(async order => ({\n    exchangeOrderId: parseInt(environment.api.util.bytesToHex(order[1]), 16),\n    exchangeName: await getExchangeName(environment, order[0]),\n    // The following will only work for oasisdex on chain orders.\n    // HACK: order status is not updated on protocol level on fund contract if order is fully executed, so we query OasisDex to check if isActive\n    isActive:\n      (await getExchangeName(environment, order[0])) === 'MatchingMarket'\n        ? await exchangeContract.instance.isActive.call({}, [\n            parseInt(environment.api.util.bytesToHex(order[1]), 16),\n          ])\n        : 'N/A',\n    orderType: order[2].toNumber() === 0 ? 'make' : 'take',\n    sellSymbol:\n      order[2] === 0\n        ? getSymbol(config, order[3])\n        : getSymbol(config, order[4]),\n    buySymbol:\n      order[2] === 0\n        ? getSymbol(config, order[4])\n        : getSymbol(config, order[3]),\n    sellHowMuch:\n      order[2] === 0\n        ? toReadable(config, order[5], getSymbol(config, order[3]))\n        : toReadable(config, order[6], getSymbol(config, order[4])),\n    buyHowMuch:\n      order[2] === 0\n        ? toReadable(config, order[6], getSymbol(config, order[4]))\n        : toReadable(config, order[5], getSymbol(config, order[3])),\n    timestamp: toDate(order[7]),\n    type:\n      getSymbol(config, order[3]) === config.quoteAssetSymbol ? 'buy' : 'sell',\n    price:\n      getSymbol(config, order[3]) === config.quoteAssetSymbol\n        ? toReadable(config, order[5], getSymbol(config, order[3])).div(\n            toReadable(config, order[6], getSymbol(config, order[4])),\n          )\n        : toReadable(config, order[6], getSymbol(config, order[4])).div(\n            toReadable(config, order[5], getSymbol(config, order[3])),\n          ),\n  }));\n  return Promise.all(formattedOrders);\n};\n\nexport default getOrdersHistory;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/calls/getOrdersHistory.js","// @flow\nimport BigNumber from 'bignumber.js';\n\nconst isValidId = (id: BigNumber): boolean =>\n  id.toString(16) !==\n    'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff' &&\n  id.gte(0);\n\nexport default isValidId;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/generic/isValidId.js","// @flow\nimport getMethodNameSignature from '../../exchange/utils/getMethodNameSignature';\nimport ensure from '../../utils/generic/ensure';\nimport getAddress from '../../assets/utils/getAddress';\nimport getBalance from '../../assets/calls/getBalance';\nimport getConfig from '../../version/calls/getConfig';\nimport getCanonicalPriceFeedContract from '../../pricefeeds/contracts/getCanonicalPriceFeedContract';\nimport getMatchingMarketContract from '../../exchange/contracts/getMatchingMarketContract';\nimport isMakePermitted from '../../riskManagement/calls/isMakePermitted';\nimport toProcessable from '../../assets/utils/toProcessable';\n\nimport type { Environment } from '../../utils/environment/Environment';\nimport type { Order } from '../../exchange/schemas/Order';\n\nconst preflightMakeOrder = async (\n  environment: Environment,\n  {\n    fundContract,\n    exchangeAddress,\n    makerAssetSymbol,\n    takerAssetSymbol,\n    makerQuantity,\n    takerQuantity,\n  },\n): Promise<Order> => {\n  const config = await getConfig(environment);\n\n  const makerTokenBalance = await getBalance(environment, {\n    tokenSymbol: makerAssetSymbol,\n    ofAddress: fundContract.address,\n  });\n  ensure(\n    makerTokenBalance.gte(makerQuantity),\n    `Insufficient balance of ${makerAssetSymbol}`,\n  );\n\n  const owner = await fundContract.instance.owner.call();\n  ensure(\n    owner.toLowerCase() === environment.account.address.toLowerCase(),\n    'Not owner of fund',\n  );\n\n  const isShutDown = await fundContract.instance.isShutDown.call();\n  ensure(isShutDown === false, 'Fund is shut down');\n\n  const method = await getMethodNameSignature(environment, 'makeOrder');\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n\n  const isExchangeMethodAllowed = await canonicalPriceFeedContract.instance.exchangeMethodIsAllowed.call(\n    {},\n    [exchangeAddress, method],\n  );\n  ensure(isExchangeMethodAllowed, 'This exchange method is not allowed');\n\n  ensure(\n    getAddress(config, makerAssetSymbol) !== fundContract.address &&\n      getAddress(config, takerAssetSymbol) !== fundContract.address,\n    'Fund buying/selling its own fund token is forbidden.',\n  );\n  const ExistsPriceOnAssetPair = await canonicalPriceFeedContract.instance.existsPriceOnAssetPair.call(\n    {},\n    [\n      getAddress(config, makerAssetSymbol),\n      getAddress(config, takerAssetSymbol),\n    ],\n  );\n  ensure(\n    ExistsPriceOnAssetPair,\n    'Price not provided on this asset pair by your datafeed.',\n  );\n\n  const [\n    isRecent,\n    referencePrice,\n  ] = await canonicalPriceFeedContract.instance.getReferencePriceInfo.call({}, [\n    getAddress(config, makerAssetSymbol),\n    getAddress(config, takerAssetSymbol),\n  ]);\n\n  ensure(isRecent, 'Pricefeed data is outdated :( Please try again.');\n\n  const isAllowed = await isMakePermitted(environment, {\n    referencePrice,\n    makerAssetSymbol,\n    takerAssetSymbol,\n    makerQuantity,\n    takerQuantity,\n    fundContract,\n  });\n\n  ensure(isAllowed, \"Risk Management module doesn't allow this trade\");\n\n  if (exchangeAddress === config.matchingMarketAddress) {\n    // pre conditions if OasisDex\n    const exchangeContract = await getMatchingMarketContract(environment);\n\n    // eslint-disable-next-line no-underscore-dangle\n    const dust = await exchangeContract.instance._dust.call({}, [\n      getAddress(config, takerAssetSymbol),\n    ]);\n    /* eslint-enable */\n    ensure(\n      toProcessable(config, takerQuantity, takerAssetSymbol).gte(dust),\n      'Selling quantity too low.',\n    );\n  } else if (exchangeAddress === config.zeroExV1Address) {\n    // pre conditions if ZeroExV1\n    // TODO: implement when ZeroExv2 is live\n  }\n\n  return true;\n};\n\nexport default preflightMakeOrder;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/preflights/preflightMakeOrder.js","import getAddress from '../../assets/utils/getAddress';\nimport getConfig from '../../version/calls/getConfig';\nimport getCanonicalPriceFeedContract from '../../pricefeeds/contracts/getCanonicalPriceFeedContract';\nimport getRiskManagementContract from '../contracts/getRiskManagementContract';\nimport toProcessable from '../../assets/utils/toProcessable';\n\n/**\n * Test if make order request is permitted\n */\nconst isMakePermitted = async (\n  environment,\n  {\n    referencePrice,\n    makerAssetSymbol,\n    takerAssetSymbol,\n    makerQuantity,\n    takerQuantity,\n    fundContract,\n  },\n) => {\n  const config = await getConfig(environment);\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n\n  const orderPrice = await canonicalPriceFeedContract.instance.getOrderPriceInfo.call(\n    {},\n    [\n      getAddress(config, makerAssetSymbol),\n      getAddress(config, takerAssetSymbol),\n      toProcessable(config, makerQuantity, makerAssetSymbol),\n      toProcessable(config, takerQuantity, takerAssetSymbol),\n    ],\n  );\n\n  const riskManagementContract = await getRiskManagementContract(\n    environment,\n    fundContract,\n  );\n\n  const result = await riskManagementContract.instance.isMakePermitted.call(\n    {},\n    [\n      orderPrice,\n      referencePrice,\n      getAddress(config, makerAssetSymbol),\n      getAddress(config, takerAssetSymbol),\n      toProcessable(config, makerQuantity, makerAssetSymbol),\n      toProcessable(config, takerQuantity, takerAssetSymbol),\n    ],\n  );\n\n  return result;\n};\n\nexport default isMakePermitted;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/riskManagement/calls/isMakePermitted.js","// @flow\nimport getMethodNameSignature from '../../exchange/utils/getMethodNameSignature';\nimport ensure from '../../utils/generic/ensure';\nimport getAddress from '../../assets/utils/getAddress';\nimport getBalance from '../../assets/calls/getBalance';\nimport getConfig from '../../version/calls/getConfig';\nimport getCanonicalPriceFeedContract from '../../pricefeeds/contracts/getCanonicalPriceFeedContract';\nimport getMatchingMarketContract from '../../exchange/contracts/getMatchingMarketContract';\nimport isTakePermitted from '../../riskManagement/calls/isTakePermitted';\nimport toProcessable from '../../assets/utils/toProcessable';\n\nimport type { Environment } from '../../utils/environment/Environment';\nimport type { Order } from '../../exchange/schemas/Order';\n\nconst preflightTakeOrder = async (\n  environment: Environment,\n  {\n    fundContract,\n    exchangeAddress,\n    makerAssetSymbol,\n    takerAssetSymbol,\n    fillMakerQuantity,\n    fillTakerQuantity,\n  },\n): Promise<Order> => {\n  const config = await getConfig(environment);\n\n  const sellTokenBalance = await getBalance(environment, {\n    tokenSymbol: takerAssetSymbol,\n    ofAddress: fundContract.address,\n  });\n  ensure(\n    sellTokenBalance.gte(fillTakerQuantity),\n    `Insufficient balance of ${takerAssetSymbol}`,\n  );\n\n  const owner = await fundContract.instance.owner.call();\n  ensure(\n    owner.toLowerCase() === environment.account.address.toLowerCase(),\n    'Not owner of fund',\n  );\n\n  const isShutDown = await fundContract.instance.isShutDown.call();\n  ensure(isShutDown === false, 'Fund is shut down');\n\n  const method = await getMethodNameSignature(environment, 'takeOrder');\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n\n  const isExchangeMethodAllowed = await canonicalPriceFeedContract.instance.exchangeMethodIsAllowed.call(\n    {},\n    [exchangeAddress, method],\n  );\n  ensure(isExchangeMethodAllowed, 'This exchange method is not allowed');\n\n  ensure(\n    getAddress(config, makerAssetSymbol) !== fundContract.address &&\n      getAddress(config, takerAssetSymbol) !== fundContract.address,\n    'Fund buying/selling its own fund token is forbidden.',\n  );\n\n  const ExistsPriceOnAssetPair = await canonicalPriceFeedContract.instance.existsPriceOnAssetPair.call(\n    {},\n    [\n      getAddress(config, takerAssetSymbol),\n      getAddress(config, makerAssetSymbol),\n    ],\n  );\n  ensure(\n    ExistsPriceOnAssetPair,\n    'Price not provided on this asset pair by your datafeed.',\n  );\n\n  const [\n    isRecent,\n    referencePrice,\n  ] = await canonicalPriceFeedContract.instance.getReferencePriceInfo.call({}, [\n    getAddress(config, takerAssetSymbol),\n    getAddress(config, makerAssetSymbol),\n  ]);\n\n  const isAllowed = await isTakePermitted(environment, {\n    fundContract,\n    referencePrice,\n    takerAssetSymbol,\n    makerAssetSymbol,\n    fillTakerQuantity,\n    fillMakerQuantity,\n  });\n\n  ensure(isAllowed, 'Risk Management module does not allow this trade.');\n\n  ensure(isRecent, 'Pricefeed data is outdated :( Please try again.');\n\n  if (exchangeAddress === config.matchingMarketAddress) {\n    // pre conditions if OasisDex\n    const exchangeContract = await getMatchingMarketContract(environment);\n\n    // eslint-disable-next-line no-underscore-dangle\n    const dust = await exchangeContract.instance._dust.call({}, [\n      getAddress(config, takerAssetSymbol),\n    ]);\n    /* eslint-enable */\n    ensure(\n      toProcessable(config, fillTakerQuantity, takerAssetSymbol).gte(dust),\n      'Selling quantity too low.',\n    );\n  } else if (exchangeAddress === config.zeroExV1Address) {\n    // pre conditions if ZeroExV1\n    // TODO: implement when ZeroExv2 is live\n  }\n\n  return true;\n};\n\nexport default preflightTakeOrder;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/preflights/preflightTakeOrder.js","import getAddress from '../../assets/utils/getAddress';\nimport getConfig from '../../version/calls/getConfig';\nimport getCanonicalPriceFeedContract from '../../pricefeeds/contracts/getCanonicalPriceFeedContract';\nimport getRiskManagementContract from '../contracts/getRiskManagementContract';\nimport toProcessable from '../../assets/utils/toProcessable';\n\n/**\n * Test if make order request is permitted\n */\nconst isTakePermitted = async (\n  environment,\n  {\n    fundContract,\n    referencePrice,\n    takerAssetSymbol,\n    makerAssetSymbol,\n    fillTakerQuantity,\n    fillMakerQuantity,\n  },\n) => {\n  const config = await getConfig(environment);\n\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n  const orderPrice = await canonicalPriceFeedContract.instance.getOrderPriceInfo.call(\n    {},\n    [\n      getAddress(config, takerAssetSymbol),\n      getAddress(config, makerAssetSymbol),\n      toProcessable(config, fillTakerQuantity, takerAssetSymbol),\n      toProcessable(config, fillMakerQuantity, makerAssetSymbol),\n    ],\n  );\n\n  const riskManagementContract = await getRiskManagementContract(\n    environment,\n    fundContract,\n  );\n\n  const result = await riskManagementContract.instance.isTakePermitted.call(\n    {},\n    [\n      orderPrice,\n      referencePrice,\n      getAddress(config, takerAssetSymbol),\n      getAddress(config, makerAssetSymbol),\n      toProcessable(config, fillTakerQuantity, takerAssetSymbol),\n      toProcessable(config, fillMakerQuantity, makerAssetSymbol),\n    ],\n  );\n  return result;\n};\n\nexport default isTakePermitted;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/riskManagement/calls/isTakePermitted.js","// @flow\nimport Utils from 'ethers-utils';\nimport BigNumber from 'bignumber.js';\nimport ensure from '../../utils/generic/ensure';\nimport callOnExchange from './callOnExchange';\nimport getFundContract from '../contracts/getFundContract';\nimport getMethodNameSignature from '../../exchange/utils/getMethodNameSignature';\nimport preflightTakeOrder from '../preflights/preflightTakeOrder';\nimport getExchangeName from '../../exchange/utils/getExchangeName';\n\nimport type { Environment } from '../../utils/environment/Environment';\nimport type { Order } from '../../exchange/schemas/Order';\n\nconst takeOrder = async (\n  environment: Environment,\n  {\n    fundAddress,\n    exchangeAddress,\n    maker,\n    taker,\n    makerAssetSymbol,\n    takerAssetSymbol,\n    feeRecipient,\n    makerQuantity,\n    takerQuantity,\n    makerFee,\n    takerFee,\n    timestamp,\n    salt,\n    fillTakerTokenAmount,\n    dexySignatureMode = 0,\n    identifier = '0x0',\n    signature = {},\n  },\n): Promise<Order> => {\n  const fillTakerQuantity =\n    !fillTakerTokenAmount ||\n    new BigNumber(fillTakerTokenAmount).gte(takerQuantity)\n      ? new BigNumber(takerQuantity)\n      : new BigNumber(fillTakerTokenAmount);\n\n  const fillMakerQuantity = fillTakerQuantity\n    .times(new BigNumber(makerQuantity))\n    .div(new BigNumber(takerQuantity));\n\n  ensure(\n    fillMakerQuantity.lte(makerQuantity),\n    'Quantity asked too high compared to quantity for sale on the order.',\n  );\n\n  //TODO: add ensure ZeroEx.isOrderValid\n\n  const fundContract = await getFundContract(environment, fundAddress);\n  const preflightCheck = await preflightTakeOrder(environment, {\n    fundContract,\n    exchangeAddress,\n    makerAssetSymbol,\n    takerAssetSymbol,\n    fillMakerQuantity,\n    fillTakerQuantity,\n  });\n\n  ensure(\n    preflightCheck,\n    'One of the pre-conditions of the function takeOrder failed on pre-flight.',\n  );\n\n  const method = await getMethodNameSignature(environment, 'takeOrder');\n\n  const updateLog = await callOnExchange(environment, {\n    fundContract,\n    exchangeAddress,\n    method,\n    orderAddresses: [\n      maker,\n      taker,\n      makerAssetSymbol,\n      takerAssetSymbol,\n      feeRecipient,\n    ],\n    orderValues: [\n      makerQuantity,\n      takerQuantity,\n      makerFee,\n      takerFee,\n      timestamp,\n      salt,\n      fillTakerQuantity,\n      dexySignatureMode,\n    ],\n    identifier,\n    signature,\n  });\n  console.log(updateLog);\n\n  return {\n    id: Utils.toUtf8String(\n      Utils.stripZeros(updateLog.params.orderId.value.reverse()).reverse(),\n    ),\n    exchange: getExchangeName(environment, updateLog.params.exchange.value),\n    updateType: updateLog.params.updateType.value === 0 ? 'make' : 'take',\n  };\n};\n\nexport default takeOrder;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/transactions/takeOrder.js","// @flow\nimport getOlympiadContract from '../contracts/getOlympiadContract';\n\n/**\n * @return Address of the fund registered by the registrant address\n */\nconst getRegistrantFund = async (environment): Promise<any> => {\n  const olympiadContract = await getOlympiadContract(environment);\n\n  const registrantFund = await olympiadContract.instance.getRegistrantFund.call(\n    {},\n    [environment.account.address],\n  );\n  return registrantFund;\n};\n\nexport default getRegistrantFund;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/olympiad/calls/getRegistrantFund.js","import PriceFeedAbi from '@melonproject/smart-contracts/out/pricefeeds/PriceFeed.abi.json';\nimport getConfig from '../../version/calls/getConfig';\n\n/**\n * Gets contract instance of deployed DataFeed\n */\nconst getPriceFeedContract = async environment => {\n  const config = await getConfig(environment);\n  return environment.api.newContract(PriceFeedAbi, config.priceFeedAddress);\n};\n\nexport default getPriceFeedContract;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/contracts/getPriceFeedContract.js","import ensure from '../../utils/generic/ensure';\n\n/**\n * Test if subscribe request is permitted\n */\nconst isInvestmentPermittedAndAllowed = async (\n  environment,\n  { fundContract, asset },\n) => {\n  ensure(\n    await fundContract.instance.isInvestAllowed.call({}, [asset]),\n    'Subscriptions in MLN to fund are disabled by the fund manager',\n  );\n};\n\nexport default isInvestmentPermittedAndAllowed;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/participation/calls/isInvestmentRequestPermittedAndAllowed.js","// @flow\nimport ComplianceInterfaceAbi from '@melonproject/smart-contracts/out/compliance/ComplianceInterface.abi.json';\n\n/**\n * Get deployed participation contract instance\n */\nconst getComplianceContract = async (environment, fundContract) => {\n  const [\n    ,\n    ,\n    participationContractAddress,\n  ] = await fundContract.instance.getModules.call();\n  return environment.api.newContract(\n    ComplianceInterfaceAbi,\n    participationContractAddress,\n  );\n};\n\nexport default getComplianceContract;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/participation/contracts/getComplianceContract.js","// @flow\nimport getCanonicalPriceFeedContract from '../contracts/getCanonicalPriceFeedContract';\nimport getAddress from '../../assets/utils/getAddress';\nimport getConfig from '../../version/calls/getConfig';\n\nimport type { Environment } from '../../utils/environment/Environment';\nimport type { TokenSymbol } from '../../assets/schemas/TokenSymbol';\n\nconst hasRecentPrice = async (\n  environment: Environment,\n  tokenSymbol: TokenSymbol,\n): Promise<Boolean> => {\n  const config = await getConfig(environment);\n  const symbol = tokenSymbol || config.quoteAssetSymbol;\n  const tokenAddress = getAddress(config, symbol);\n  const dataFeedContract = await getCanonicalPriceFeedContract(environment);\n  return dataFeedContract.instance.hasRecentPrice.call({}, [tokenAddress]);\n};\n\nexport default hasRecentPrice;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/calls/hasRecentPrice.js","const getAccountAddress = environment =>\n  environment.account ? environment.account.address : null;\n\nexport default getAccountAddress;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/environment/getAccountAddress.js","export const environment = {};\n\nconst getEnvironment = () => ({ ...environment });\n\nexport default getEnvironment;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/environment/getEnvironment.js","import providers from '../constants/providers';\n\nconst isValidEnvironment = environment =>\n  typeof environment.api === 'object' &&\n  Object.values(providers).includes(environment.providerType);\n\nexport default isValidEnvironment;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/environment/isValidEnvironment.js","module.exports = require(\"web3/lib/web3/event\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"web3/lib/web3/event\"\n// module id = 81\n// module chunks = 0","import { mergeAll } from 'ramda';\nimport isPromise from './isPromise';\n\nconst resolvePromiseObject = async obj => {\n  const promises = Object.keys(obj).map(\n    key =>\n      isPromise(obj[key])\n        ? obj[key].then(resolved => ({ [key]: resolved }))\n        : new Promise(resolve => resolve({ [key]: obj[key] })),\n  );\n\n  const resolved = await Promise.all(promises);\n  return mergeAll(resolved);\n};\n\nexport default resolvePromiseObject;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/generic/resolvePromiseObject.js","module.exports = require(\"@babel/runtime/helpers/defineProperty\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/helpers/defineProperty\"\n// module id = 83\n// module chunks = 0","const isPromise = obj => obj && typeof obj.then === 'function';\n\nexport default isPromise;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/generic/isPromise.js","import RankingAbi from '@melonproject/smart-contracts/out/FundRanking.abi.json';\nimport getConfig from '../../version/calls/getConfig';\n\n/**\n * Get deployed version contract instance\n */\nconst getRankingContract = async environment => {\n  const config = await getConfig(environment);\n  return environment.api.newContract(RankingAbi, config.rankingAddress);\n};\n\nexport default getRankingContract;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/version/contracts/getRankingContract.js","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/helpers/toConsumableArray\"\n// module id = 86\n// module chunks = 0","import * as tokenInfo from '@melonproject/smart-contracts/utils/info/tokenInfo';\nimport BigNumber from 'bignumber.js';\n\nconst getTokenInfo = tokenSymbol => tokenInfo.live[tokenSymbol];\n\nconst getSymbol = address =>\n  Object.entries(tokenInfo.live).find(\n    ([symbol, info]) => info.address.toLowerCase() === address.toLowerCase(),\n  )[0];\n\nconst getDecimals = tokenSymbol => getTokenInfo(tokenSymbol).decimals;\n\nconst toReadable = (quantity, tokenSymbol) => {\n  const decimals = getDecimals(tokenSymbol);\n  return new BigNumber(quantity).div(10 ** decimals);\n};\n\nconst getPrices = order => ({\n  buy: new BigNumber(order.sell.howMuch).div(order.buy.howMuch),\n  sell: new BigNumber(order.buy.howMuch).div(order.sell.howMuch),\n});\n\nconst formatRelayerOrderbook = exchange => (bids, asks) => {\n  const formattedBids = bids.map(order => ({\n    id: order.salt,\n    owner: order.maker,\n    isActive: true,\n    sell: {\n      symbol: getSymbol(order.makerTokenAddress),\n      howMuch: toReadable(\n        order.makerTokenAmount,\n        getSymbol(order.makerTokenAddress),\n      ),\n    },\n    buy: {\n      symbol: getSymbol(order.takerTokenAddress),\n      howMuch: toReadable(\n        order.takerTokenAmount,\n        getSymbol(order.takerTokenAddress),\n      ),\n    },\n    type: 'buy',\n    makerFee: order.makerFee,\n    takerFee: order.takerFee,\n    signature: order.ecSignature,\n    expiration: order.expirationUnixTimestampSec,\n    feeRecipient: order.feeRecipient,\n    exchangeContractAddress: order.exchangeContractAddress,\n    exchange,\n  }));\n  const formattedAsks = asks.map(order => ({\n    id: order.salt,\n    owner: order.maker,\n    isActive: true,\n    sell: {\n      symbol: getSymbol(order.makerTokenAddress),\n      howMuch: toReadable(\n        order.makerTokenAmount,\n        getSymbol(order.makerTokenAddress),\n      ),\n    },\n    buy: {\n      symbol: getSymbol(order.takerTokenAddress),\n      howMuch: toReadable(\n        order.takerTokenAmount,\n        getSymbol(order.takerTokenAddress),\n      ),\n    },\n    type: 'sell',\n    makerFee: order.makerFee,\n    takerFee: order.takerFee,\n    signature: order.ecSignature,\n    expiration: order.expirationUnixTimestampSec,\n    feeRecipient: order.feeRecipient,\n    exchangeContractAddress: order.exchangeContractAddress,\n    exchange,\n  }));\n\n  const orderbook = [...formattedBids, ...formattedAsks].map(order => ({\n    ...order,\n    price: order.type === 'buy' ? getPrices(order).buy : getPrices(order).sell,\n  }));\n\n  return orderbook;\n};\n\nexport default formatRelayerOrderbook;\n\n\n\n// WEBPACK FOOTER //\n// ../exchange-aggregator/src/formatRelayerOrderbook.ts","import * as R from 'ramda';\n\n// MLN-T-M => MLN\nconst getStemmedSymbol: (symbol: string) => string = R.compose(\n  R.cond([[R.equals('ETH'), R.always('WETH')], [R.T, R.identity]]),\n  R.nth(0) as (arg: string[]) => string,\n  R.split('-'),\n);\n\nexport default getStemmedSymbol;\n\n\n\n// WEBPACK FOOTER //\n// ../exchange-aggregator/src/getStemmedSymbol.ts","import * as tokenInfo from '@melonproject/smart-contracts/utils/info/tokenInfo';\nimport * as R from 'ramda';\n\nconst getTokenAddress = (symbol: string) =>\n  R.path(['live', symbol, 'address'], tokenInfo);\n\nexport default getTokenAddress;\n\n\n\n// WEBPACK FOOTER //\n// ../exchange-aggregator/src/getTokenAddress.ts","\"use strict\";\n\nmodule.exports = require('ws');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../exchange-aggregator/node_modules/isomorphic-ws/node.js\n// module id = 90\n// module chunks = 0","import { makeContext, makeSchema } from '@melonproject/graphql-schema';\nimport * as fs from 'fs';\nimport { PubSub } from 'graphql-subscriptions';\nimport { GraphQLServer } from 'graphql-yoga';\n\nasync function start(port: number) {\n  const pubsub = new PubSub();\n  const server = new GraphQLServer({\n    schema: makeSchema(),\n    context: () => makeContext(pubsub),\n  });\n\n  await server.start({\n    port\n  });\n\n  // tslint:disable-next-line:no-console\n  console.log(`Server is running on http://localhost:${port}`);\n}\n\nstart(parseInt(process.env.PORT as string, 10));\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import { GraphQLSchema } from 'graphql';\nimport { PubSub } from 'graphql-subscriptions';\nimport { makeExecutableSchema } from 'graphql-tools';\nimport resolvers from './resolvers';\nimport * as schema from './schema.gql';\n\nexport interface Context {\n  pubsub: PubSub;\n}\n\nexport const makeContext = (pubsub: PubSub): Context => ({\n  pubsub,\n});\n\nexport const makeSchema = (): GraphQLSchema =>\n  makeExecutableSchema({\n    typeDefs: schema,\n    resolvers,\n  });\n\n\n\n// WEBPACK FOOTER //\n// ../graphql-schema/src/index.ts","module.exports = require(\"graphql-tools\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql-tools\"\n// module id = 93\n// module chunks = 0","import Orderbook from './resolvers/Orderbook';\nimport OrderbookEntry from './resolvers/OrderbookEntry';\nimport Quantity from './resolvers/Quantity';\nimport Query from './resolvers/Query';\nimport Subscription from './resolvers/Subscription';\nimport Symbol from './resolvers/Symbol';\n\nexport default {\n  Query,\n  Subscription,\n  Symbol,\n  Quantity,\n  Orderbook,\n  OrderbookEntry,\n};\n\n\n\n// WEBPACK FOOTER //\n// ../graphql-schema/src/resolvers.ts","const allOrders = parent => parent.allOrders;\nconst buyEntries = parent => parent.buyEntries;\nconst sellEntries = parent => parent.sellEntries;\nconst totalBuyVolume = parent => parent.totalBuyVolume;\nconst totalSellVolume = parent => parent.totalSellVolume;\n\nexport default {\n  allOrders,\n  buyEntries,\n  sellEntries,\n  totalBuyVolume,\n  totalSellVolume,\n};\n\n\n\n// WEBPACK FOOTER //\n// ../graphql-schema/src/resolvers/Orderbook.ts","const order = parent => parent.order;\nconst volume = parent => parent.volume;\n\nexport default {\n  order,\n  volume,\n};\n\n\n\n// WEBPACK FOOTER //\n// ../graphql-schema/src/resolvers/OrderbookEntry.ts","import { GraphQLScalarType, Kind } from 'graphql';\n\nexport default new GraphQLScalarType({\n  name: 'Quantity',\n  parseValue: value => value,\n  serialize: value => value.toString(),\n  parseLiteral: ast => {\n    if (ast.kind === Kind.STRING) {\n      return ast.value.toString();\n    }\n\n    return null;\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ../graphql-schema/src/resolvers/Quantity.ts","import { getParityProvider, getPrice } from '@melonproject/melon.js';\nimport { Context } from '../index';\n\nconst price = async (parent, args, context: Context) => {\n  const environment = await getParityProvider();\n  return getPrice(environment, args.symbol);\n};\n\nexport default {\n  price,\n};\n\n\n\n// WEBPACK FOOTER //\n// ../graphql-schema/src/resolvers/Query.ts","// this file tracks exchanges external to the Melon protocol\nmodule.exports = {\n  live: {\n    'OasisDex' : {\n      address: '0x14FBCA95be7e99C15Cc2996c6C9d841e54B79425',\n      data: '',\n      url: 'https://oasisdex.com',\n      githubHint: '',\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/utils/info/exchangeInfo.js\n// module id = 99\n// module chunks = 0","module.exports = [{\"constant\":true,\"inputs\":[],\"name\":\"TERMS_AND_CONDITIONS\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"shutDown\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GOVERNANCE\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"withId\",\"type\":\"uint256\"}],\"name\":\"getFundById\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastFundId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofManager\",\"type\":\"address\"}],\"name\":\"getFundByManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofFund\",\"type\":\"address\"}],\"name\":\"shutDownFund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COMPLIANCE\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CANONICAL_PRICEFEED\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION_NUMBER\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MELON_ASSET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofNewOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NATIVE_ASSET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listOfFunds\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNativeAsset\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofFundName\",\"type\":\"bytes32\"},{\"name\":\"ofQuoteAsset\",\"type\":\"address\"},{\"name\":\"ofManagementFee\",\"type\":\"uint256\"},{\"name\":\"ofPerformanceFee\",\"type\":\"uint256\"},{\"name\":\"ofCompliance\",\"type\":\"address\"},{\"name\":\"ofRiskMgmt\",\"type\":\"address\"},{\"name\":\"ofExchanges\",\"type\":\"address[]\"},{\"name\":\"ofDefaultAssets\",\"type\":\"address[]\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"setupFund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"termsAndConditionsAreSigned\",\"outputs\":[{\"name\":\"signed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"managerToFunds\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isShutDown\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"versionNumber\",\"type\":\"string\"},{\"name\":\"ofGovernance\",\"type\":\"address\"},{\"name\":\"ofMelonAsset\",\"type\":\"address\"},{\"name\":\"ofNativeAsset\",\"type\":\"address\"},{\"name\":\"ofCanonicalPriceFeed\",\"type\":\"address\"},{\"name\":\"ofCompetitionCompliance\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ofFund\",\"type\":\"address\"}],\"name\":\"FundUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"FundUpdated\",\"type\":\"event\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/version/Version.abi.json\n// module id = 100\n// module chunks = 0","module.exports = [{\"constant\":false,\"inputs\":[{\"name\":\"ofExchange\",\"type\":\"address\"},{\"name\":\"querySignature\",\"type\":\"bytes4\"}],\"name\":\"exchangeMethodIsAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakeRanking\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"staker\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"stakeFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAssets\",\"type\":\"address[]\"}],\"name\":\"hasRecentPrices\",\"outputs\":[{\"name\":\"areRecent\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"},{\"name\":\"inputName\",\"type\":\"bytes32\"},{\"name\":\"inputSymbol\",\"type\":\"bytes8\"},{\"name\":\"inputDecimals\",\"type\":\"uint256\"},{\"name\":\"inputUrl\",\"type\":\"string\"},{\"name\":\"inputIpfsHash\",\"type\":\"string\"},{\"name\":\"ofBreakInBreakOut\",\"type\":\"address[2]\"},{\"name\":\"inputStandards\",\"type\":\"uint256[]\"},{\"name\":\"inputFunctionSignatures\",\"type\":\"bytes4[]\"}],\"name\":\"updateAsset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastUpdateId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"assetIsRegistered\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"},{\"name\":\"assetIndex\",\"type\":\"uint256\"}],\"name\":\"removeAsset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"lastStakedFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isStakingFeed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOperators\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burnStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAssets\",\"type\":\"address[]\"},{\"name\":\"newPrices\",\"type\":\"uint256[]\"}],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"updatesThisEpoch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableUpdates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getValidity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VALIDITY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCount\",\"type\":\"uint256\"}],\"name\":\"setMinimumPriceCount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"totalStakedFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"superFeed\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNextEpochTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakeHistory\",\"outputs\":[{\"name\":\"at\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"getName\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"},{\"name\":\"inputName\",\"type\":\"bytes32\"},{\"name\":\"inputSymbol\",\"type\":\"bytes8\"},{\"name\":\"inputDecimals\",\"type\":\"uint256\"},{\"name\":\"inputUrl\",\"type\":\"string\"},{\"name\":\"inputIpfsHash\",\"type\":\"string\"},{\"name\":\"breakInBreakOut\",\"type\":\"address[2]\"},{\"name\":\"inputStandards\",\"type\":\"uint256[]\"},{\"name\":\"inputFunctionSignatures\",\"type\":\"bytes4[]\"}],\"name\":\"registerAsset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"},{\"name\":\"querySignature\",\"type\":\"bytes4\"}],\"name\":\"assetMethodIsAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofExchange\",\"type\":\"address\"}],\"name\":\"getExchangeFunctionSignatures\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"supportsHistory\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enableUpdates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStakersAndAmounts\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"updatesAreAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofExchange\",\"type\":\"address\"},{\"name\":\"ofExchangeAdapter\",\"type\":\"address\"},{\"name\":\"inputTakesCustody\",\"type\":\"bool\"},{\"name\":\"inputFunctionSignatures\",\"type\":\"bytes4[]\"}],\"name\":\"registerExchange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INTERVAL\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setupStakingPriceFeed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"getPriceInfo\",\"outputs\":[{\"name\":\"isRecent\",\"type\":\"bool\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"assetDecimals\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"operatorsUpdatingThisEpoch\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_UPDATES_PER_EPOCH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAssets\",\"type\":\"address[]\"}],\"name\":\"getPrices\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInterval\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getPriceFeedsByOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"getInvertedPriceInfo\",\"outputs\":[{\"name\":\"isRecent\",\"type\":\"bool\"},{\"name\":\"invertedPrice\",\"type\":\"uint256\"},{\"name\":\"assetDecimals\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRE_EPOCH_UPDATE_PERIOD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"sellAsset\",\"type\":\"address\"},{\"name\":\"buyAsset\",\"type\":\"address\"},{\"name\":\"sellQuantity\",\"type\":\"uint256\"},{\"name\":\"buyQuantity\",\"type\":\"uint256\"}],\"name\":\"getOrderPriceInfo\",\"outputs\":[{\"name\":\"orderPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofExchange\",\"type\":\"address\"},{\"name\":\"ofExchangeAdapter\",\"type\":\"address\"},{\"name\":\"inputTakesCustody\",\"type\":\"bool\"},{\"name\":\"inputFunctionSignatures\",\"type\":\"bytes4[]\"}],\"name\":\"updateExchange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredAssets\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofBase\",\"type\":\"address\"},{\"name\":\"ofQuote\",\"type\":\"address\"}],\"name\":\"getReferencePriceInfo\",\"outputs\":[{\"name\":\"isRecent\",\"type\":\"bool\"},{\"name\":\"referencePrice\",\"type\":\"uint256\"},{\"name\":\"decimal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"exchangeInformation\",\"outputs\":[{\"name\":\"exists\",\"type\":\"bool\"},{\"name\":\"adapter\",\"type\":\"address\"},{\"name\":\"takesCustody\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofNewOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRegisteredExchanges\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"subFeedPostUpdateHook\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofExchange\",\"type\":\"address\"},{\"name\":\"exchangeIndex\",\"type\":\"uint256\"}],\"name\":\"removeExchange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"assetsToPrices\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastEpochTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numOperators\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"hasRecentPrice\",\"outputs\":[{\"name\":\"isRecent\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"unsorted\",\"type\":\"uint256[]\"}],\"name\":\"medianize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"updateId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INCEPTION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredExchanges\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unstake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"getSymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalStakedAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofOperator\",\"type\":\"address\"}],\"name\":\"hasUpdatedThisEpoch\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"getDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRegisteredAssets\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getQuoteAsset\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRanked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakesFor\",\"outputs\":[{\"name\":\"at\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"sellAsset\",\"type\":\"address\"},{\"name\":\"buyAsset\",\"type\":\"address\"}],\"name\":\"existsPriceOnAssetPair\",\"outputs\":[{\"name\":\"isExistent\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumPriceCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"assetInformation\",\"outputs\":[{\"name\":\"exists\",\"type\":\"bool\"},{\"name\":\"name\",\"type\":\"bytes32\"},{\"name\":\"symbol\",\"type\":\"bytes8\"},{\"name\":\"decimals\",\"type\":\"uint256\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ipfsHash\",\"type\":\"string\"},{\"name\":\"breakIn\",\"type\":\"address\"},{\"name\":\"breakOut\",\"type\":\"address\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumStake\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalStakedForAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"QUOTE_ASSET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofExchange\",\"type\":\"address\"}],\"name\":\"exchangeIsRegistered\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofExchange\",\"type\":\"address\"}],\"name\":\"getExchangeInformation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ofStakingAsset\",\"type\":\"address\"},{\"name\":\"ofQuoteAsset\",\"type\":\"address\"},{\"name\":\"quoteAssetName\",\"type\":\"bytes32\"},{\"name\":\"quoteAssetSymbol\",\"type\":\"bytes8\"},{\"name\":\"quoteAssetDecimals\",\"type\":\"uint256\"},{\"name\":\"quoteAssetUrl\",\"type\":\"string\"},{\"name\":\"quoteAssetIpfsHash\",\"type\":\"string\"},{\"name\":\"quoteAssetBreakInBreakOut\",\"type\":\"address[2]\"},{\"name\":\"quoteAssetStandards\",\"type\":\"uint256[]\"},{\"name\":\"quoteAssetFunctionSignatures\",\"type\":\"bytes4[]\"},{\"name\":\"updateInfo\",\"type\":\"uint256[4]\"},{\"name\":\"stakingInfo\",\"type\":\"uint256[2]\"},{\"name\":\"ofGovernance\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ofPriceFeed\",\"type\":\"address\"}],\"name\":\"SetupPriceFeed\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"StakeBurned\",\"type\":\"event\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/pricefeeds/CanonicalPriceFeed.abi.json\n// module id = 101\n// module chunks = 0","module.exports = [{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/assets/PreminedAsset.abi.json\n// module id = 102\n// module chunks = 0","// @flow\nimport BigNumber from 'bignumber.js';\nimport getConfig from '../../version/calls/getConfig';\nimport getTokenContract from '../contracts/getTokenContract';\nimport toReadable from '../utils/toReadable';\n\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * @returns total supply of a token by its symbol\n */\nconst getTotalSupply = async (\n  environment: Environment,\n  { symbol },\n): Promise<BigNumber> => {\n  const config = await getConfig(environment);\n  const tokenContract = await getTokenContract(environment, symbol);\n  const totalSupply = await tokenContract.instance.totalSupply.call({}, []);\n\n  return toReadable(config, totalSupply, symbol);\n};\n\nexport default getTotalSupply;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/assets/calls/getTotalSupply.js","module.exports = require(\"@babel/runtime/core-js/object/create\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/core-js/object/create\"\n// module id = 106\n// module chunks = 0","// @flow\nimport BigNumber from 'bignumber.js';\nimport getAllowance from '../calls/getAllowance';\nimport approve from '../transactions/approve';\n\n/**\n * Ensures that `spender` still has the allowance to spend `quantity` of tokens\n * with `sympol` of `owner`. If current allowance is below requested allowance,\n * only the difference is approved again.\n *\n * @returns the actual approved quantity\n */\nconst ensureAllowance = async (\n  environment,\n  { symbol, owner, spender, quantity },\n): Promise<BigNumber> => {\n  const current = await getAllowance(environment, { symbol, owner, spender });\n  const missing: BigNumber = quantity.minus(current);\n  const approved: boolean = await approve(\n    symbol,\n    spender,\n    missing,\n    environment,\n    {},\n  );\n  return approved ? missing : new BigNumber(0);\n};\n\nexport default ensureAllowance;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/assets/transactions/ensureAllowance.js","// @flow\nimport findEventInLog from '../../utils/ethereum/findEventInLog';\nimport getConfig from '../../version/calls/getConfig';\nimport getTokenContract from '../contracts/getTokenContract';\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport toProcessable from '../utils/toProcessable';\n\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * Transfers `quantity` amount of token with `symbol` from `fromAddress` to\n * `toAddress`\n *\n * @throws {EnsureError}\n * @returns `true` if successful, otherwise it throws\n */\nconst transferFrom = async (\n  environment: Environment,\n  { symbol, toAddress, quantity },\n): Promise<boolean> => {\n  const config = await getConfig(environment);\n  const tokenContract = await getTokenContract(environment, symbol);\n  const fromAddress = environment.account.address;\n  const args = [\n    fromAddress,\n    toAddress,\n    toProcessable(config, quantity, symbol),\n  ];\n  const receipt = await sendTransaction(\n    tokenContract,\n    'transferFrom',\n    args,\n    environment,\n  );\n  const transferLogEntry = findEventInLog('Transfer', receipt);\n  return !!transferLogEntry;\n};\n\nexport default transferFrom;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/assets/transactions/transferFrom.js","// @flow\nimport findEventInLog from '../../utils/ethereum/findEventInLog';\nimport getConfig from '../../version/calls/getConfig';\nimport getTokenContract from '../contracts/getTokenContract';\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport toProcessable from '../utils/toProcessable';\n\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * Transfer `quantity` amount of tokens with symbol `symbol` from `from`\n * account to `toAddress`. In contrast to _transferFrom_, this function can\n * be called without approving the quantity/tokens first, if `from` can sign\n * the transaction (i.e. unlocked node or the account of logged in user)\n *\n * @throws {EnsureError}\n * @returns `true` if transfer is successful\n */\nconst transferTo = async (\n  environment: Environment,\n  { symbol, toAddress, quantity },\n): boolean => {\n  const config = await getConfig(environment);\n  const tokenContract = await getTokenContract(environment, symbol);\n  const args = [toAddress, toProcessable(config, quantity, symbol), ''];\n  const receipt = await sendTransaction(\n    tokenContract,\n    'transfer',\n    args,\n    environment,\n    {},\n  );\n  const transferLogEntry = findEventInLog('Transfer', receipt);\n\n  return !!transferLogEntry;\n};\n\nexport default transferTo;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/assets/transactions/transferTo.js","module.exports = [{\"constant\":true,\"inputs\":[{\"name\":\"onExchange\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"onExchange\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"approveOnly\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"onExchange\",\"type\":\"address\"},{\"name\":\"sellAsset\",\"type\":\"address\"},{\"name\":\"buyAsset\",\"type\":\"address\"},{\"name\":\"sellQuantity\",\"type\":\"uint256\"},{\"name\":\"buyQuantity\",\"type\":\"uint256\"}],\"name\":\"makeOrder\",\"outputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"onExchange\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"cancelOrder\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"onExchange\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"takeOrder\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"onExchange\",\"type\":\"address\"}],\"name\":\"getLastOrderId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"onExchange\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"isActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isApproveOnly\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"onExchange\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"OrderUpdated\",\"type\":\"event\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/exchange/adapter/SimpleAdapter.abi.json\n// module id = 110\n// module chunks = 0","// @flow\nimport BigNumber from 'bignumber.js';\nimport toReadable from '../../assets/utils/toReadable';\nimport getDecimals from '../../assets/utils/getDecimals';\nimport getSymbol from '../../assets/utils/getSymbol';\nimport getRecentTrades from './getRecentTrades';\nimport getConfig from '../../version/calls/getConfig';\nimport toDate from '../../utils/generic/toDate';\n\nimport type { Address } from '../../assets/schemas/Address';\nimport type { TokenSymbol } from '../../assets/schemas/TokenSymbol';\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * @deprecated should be same as Trade\n */\ntype FundTrade = {\n  maker: Address,\n  taker: Address,\n  timeStamp: Date,\n  sellQuantity: BigNumber,\n  buyQuantity: BigNumber,\n  sellToken: TokenSymbol,\n  buyToken: TokenSymbol,\n};\n\n/**\n * Get recent trades for `fundAddress` `inlastXdays`.\n */\nconst getFundRecentTrades = async (\n  environment: Environment,\n  { fundAddress, inlastXdays = 1 },\n): Promise<[FundTrade]> => {\n  const recentTrades = await getRecentTrades(environment, {\n    baseTokenSymbol: undefined,\n    quoteTokenSymbol: undefined,\n    inlastXdays,\n  });\n  const config = await getConfig(environment);\n\n  let trade;\n  const arrayOfHashes = [];\n\n  return recentTrades\n    .map(event => {\n      const maker = event.params.maker.value;\n      const taker = event.params.taker.value;\n      const giveAmount = event.params.give_amt.value;\n      const takeAmount = event.params.take_amt.value;\n\n      if (\n        (maker === fundAddress || taker === fundAddress) &&\n        arrayOfHashes.indexOf(event.transactionHash) === -1\n      ) {\n        arrayOfHashes.push(event.transactionHash);\n        const buySymbol = getSymbol(\n          config,\n          event.params.pay_gem.value.toLowerCase(),\n        );\n        const sellSymbol = getSymbol(\n          config,\n          event.params.buy_gem.value.toLowerCase(),\n        );\n\n        trade = {\n          maker,\n          taker,\n          timestamp: toDate(event.params.timestamp.value),\n          sellQuantity: giveAmount,\n          buyQuantity: takeAmount,\n          sellToken: sellSymbol,\n          buyToken: buySymbol,\n          transactionHash: event.transactionHash,\n        };\n\n        // case BUY ORDER\n        if (sellSymbol === config.quoteAssetSymbol) {\n          const decimalDifference =\n            getDecimals(config, sellSymbol) - getDecimals(config, buySymbol);\n\n          if (getDecimals(config, buySymbol) !== 18) {\n            trade.price = new BigNumber(giveAmount)\n              .div(takeAmount)\n              .div(10 ** decimalDifference);\n          } else {\n            trade.price = new BigNumber(giveAmount).div(takeAmount);\n          }\n          trade.type = 'buy';\n          trade.quantity = toReadable(config, takeAmount, buySymbol);\n        } else if (buySymbol === config.quoteAssetSymbol) {\n          const decimalDifference =\n            getDecimals(config, buySymbol) - getDecimals(config, sellSymbol);\n\n          if (getDecimals(config, sellSymbol) !== 18) {\n            trade.price = new BigNumber(takeAmount)\n              .div(giveAmount)\n              .div(10 ** decimalDifference);\n          } else {\n            trade.price = new BigNumber(takeAmount).div(giveAmount);\n          }\n          trade.type = 'sell';\n          trade.quantity = toReadable(config, giveAmount, sellSymbol);\n        } else {\n          return null;\n        }\n        return trade;\n      }\n      return null;\n    })\n    .filter(o => !!o);\n};\n\nexport default getFundRecentTrades;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/calls/getFundRecentTrades.js","module.exports = [{\"constant\":true,\"inputs\":[],\"name\":\"matchingEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"sell_gem\",\"type\":\"address\"},{\"name\":\"buy_gem\",\"type\":\"address\"}],\"name\":\"getBestOffer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pay_gem\",\"type\":\"address\"},{\"name\":\"pay_amt\",\"type\":\"uint256\"},{\"name\":\"buy_gem\",\"type\":\"address\"},{\"name\":\"min_fill_amount\",\"type\":\"uint256\"}],\"name\":\"sellAllAmount\",\"outputs\":[{\"name\":\"fill_amt\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pay_gem\",\"type\":\"address\"},{\"name\":\"buy_gem\",\"type\":\"address\"},{\"name\":\"pay_amt\",\"type\":\"uint128\"},{\"name\":\"buy_amt\",\"type\":\"uint128\"}],\"name\":\"make\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"buy_gem\",\"type\":\"address\"},{\"name\":\"pay_gem\",\"type\":\"address\"},{\"name\":\"pay_amt\",\"type\":\"uint256\"}],\"name\":\"getBuyAmount\",\"outputs\":[{\"name\":\"fill_amt\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"baseToken\",\"type\":\"address\"},{\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"addTokenPairWhitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"baseToken\",\"type\":\"address\"},{\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"remTokenPairWhitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pay_amt\",\"type\":\"uint256\"},{\"name\":\"pay_gem\",\"type\":\"address\"},{\"name\":\"buy_amt\",\"type\":\"uint256\"},{\"name\":\"buy_gem\",\"type\":\"address\"},{\"name\":\"pos\",\"type\":\"uint256\"}],\"name\":\"offer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"pos\",\"type\":\"uint256\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"last_offer_id\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"matchingEnabled_\",\"type\":\"bool\"}],\"name\":\"setMatchingEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getOffer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"del_rank\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"bytes32\"},{\"name\":\"maxTakeAmount\",\"type\":\"uint128\"}],\"name\":\"take\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pay_gem\",\"type\":\"address\"}],\"name\":\"getMinSell\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getNextUnsortedOffer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"close_time\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_span\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_best\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id_\",\"type\":\"bytes32\"}],\"name\":\"bump\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"sell_gem\",\"type\":\"address\"},{\"name\":\"buy_gem\",\"type\":\"address\"}],\"name\":\"getOfferCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"buy_gem\",\"type\":\"address\"},{\"name\":\"buy_amt\",\"type\":\"uint256\"},{\"name\":\"pay_gem\",\"type\":\"address\"},{\"name\":\"max_fill_amount\",\"type\":\"uint256\"}],\"name\":\"buyAllAmount\",\"outputs\":[{\"name\":\"fill_amt\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"isActive\",\"outputs\":[{\"name\":\"active\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"offers\",\"outputs\":[{\"name\":\"pay_amt\",\"type\":\"uint256\"},{\"name\":\"pay_gem\",\"type\":\"address\"},{\"name\":\"buy_amt\",\"type\":\"uint256\"},{\"name\":\"buy_gem\",\"type\":\"address\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"timestamp\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFirstUnsortedOffer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"baseToken\",\"type\":\"address\"},{\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"isTokenPairWhitelisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getBetterOffer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_dust\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getWorseOffer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"_menu\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_near\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pay_gem\",\"type\":\"address\"},{\"name\":\"dust\",\"type\":\"uint256\"}],\"name\":\"setMinSell\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isClosed\",\"outputs\":[{\"name\":\"closed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_rank\",\"outputs\":[{\"name\":\"next\",\"type\":\"uint256\"},{\"name\":\"prev\",\"type\":\"uint256\"},{\"name\":\"delb\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"isOfferSorted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"buyEnabled_\",\"type\":\"bool\"}],\"name\":\"setBuyEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pay_amt\",\"type\":\"uint256\"},{\"name\":\"pay_gem\",\"type\":\"address\"},{\"name\":\"buy_amt\",\"type\":\"uint256\"},{\"name\":\"buy_gem\",\"type\":\"address\"},{\"name\":\"pos\",\"type\":\"uint256\"},{\"name\":\"rounding\",\"type\":\"bool\"}],\"name\":\"offer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pay_amt\",\"type\":\"uint256\"},{\"name\":\"pay_gem\",\"type\":\"address\"},{\"name\":\"buy_amt\",\"type\":\"uint256\"},{\"name\":\"buy_gem\",\"type\":\"address\"}],\"name\":\"offer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pay_gem\",\"type\":\"address\"},{\"name\":\"buy_gem\",\"type\":\"address\"},{\"name\":\"buy_amt\",\"type\":\"uint256\"}],\"name\":\"getPayAmount\",\"outputs\":[{\"name\":\"fill_amt\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"close_time\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"LogItemUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pay_amt\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"pay_gem\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"buy_amt\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"buy_gem\",\"type\":\"address\"}],\"name\":\"LogTrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"pair\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"pay_gem\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"buy_gem\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"pay_amt\",\"type\":\"uint128\"},{\"indexed\":false,\"name\":\"buy_amt\",\"type\":\"uint128\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"LogMake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"pair\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"pay_gem\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"buy_gem\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"pay_amt\",\"type\":\"uint128\"},{\"indexed\":false,\"name\":\"buy_amt\",\"type\":\"uint128\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"LogBump\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"pair\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"pay_gem\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"buy_gem\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"take_amt\",\"type\":\"uint128\"},{\"indexed\":false,\"name\":\"give_amt\",\"type\":\"uint128\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"LogTake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"pair\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"pay_gem\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"buy_gem\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"pay_amt\",\"type\":\"uint128\"},{\"indexed\":false,\"name\":\"buy_amt\",\"type\":\"uint128\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"LogKill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"isEnabled\",\"type\":\"bool\"}],\"name\":\"LogBuyEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pay_gem\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"min_amount\",\"type\":\"uint256\"}],\"name\":\"LogMinSell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"isEnabled\",\"type\":\"bool\"}],\"name\":\"LogMatchingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"LogUnsortedOffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"LogSortedOffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"LogAddTokenPairWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"LogRemTokenPairWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"LogInsert\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"LogDelete\",\"type\":\"event\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/exchange/thirdparty/MatchingMarket.abi.json\n// module id = 112\n// module chunks = 0","// @flow\nimport BigNumber from 'bignumber.js';\nimport getExchangeAdapterContract from '../contracts/getExchangeAdapterContract';\nimport getConfig from '../../version/calls/getConfig';\n\n/**\n * gets last order id\n */\nconst getLastOrderId = async (environment): number => {\n  const config = await getConfig(environment);\n  const exchangeAdapterContract = await getExchangeAdapterContract(environment);\n  const lastOrderIdBigNumber: BigNumber = await exchangeAdapterContract.instance.getLastOrderId.call(\n    {},\n    [config.exchangeAddress],\n  );\n  return lastOrderIdBigNumber.toNumber();\n};\n\nexport default getLastOrderId;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/calls/getLastOrderId.js","// @flow\nimport { mapAccum } from 'ramda';\nimport BigNumber from 'bignumber.js';\nimport getActiveOrders from './getActiveOrders';\n\nimport type { Order } from '../schemas/Order';\n\n/**\n * Gets orderbook with cumulative Volume for `baseTokenSymbol`/\n * `quoteTokenSymbol` asset pair, ordered by price.\n */\nconst getOrderbook = async (\n  environment,\n  { baseTokenSymbol, quoteTokenSymbol },\n): Promise<[Order]> => {\n  const cleanedOrderbook: [Order] = await getActiveOrders(environment, {\n    baseTokenSymbol,\n    quoteTokenSymbol,\n  });\n\n  const totalSellCumulativeVolume: BigNumber = cleanedOrderbook.reduce(\n    (previousVolume: BigNumber, currentOrder: Order) =>\n      currentOrder.type === 'sell'\n        ? previousVolume.add(currentOrder.sell.howMuch)\n        : previousVolume,\n    new BigNumber(0),\n  );\n\n  const orderbook: [Order] = mapAccum(\n    (accumulator: BigNumber, currentOrder: Order) => {\n      const enhancedOrder: Order = { ...currentOrder };\n      if (enhancedOrder.type === 'sell') {\n        enhancedOrder.cumulativeVolume = accumulator;\n        return [accumulator.minus(enhancedOrder.sell.howMuch), enhancedOrder];\n      } else if (enhancedOrder.type === 'buy') {\n        enhancedOrder.cumulativeVolume = accumulator.add(\n          enhancedOrder.buy.howMuch,\n        );\n        return [enhancedOrder.cumulativeVolume, enhancedOrder];\n      }\n      throw new Error(\n        `Order type must be specified ${JSON.stringify(enhancedOrder)}`,\n      );\n    },\n    totalSellCumulativeVolume,\n    cleanedOrderbook,\n  )[1];\n\n  return orderbook;\n};\n\nexport default getOrderbook;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/calls/getOrderbook.js","import getOrder from '../calls/getOrder';\n\n/**\n * Helper function used in melonTracker to enhance order:\n * OrderUpdate event is triggered with `id` param only.\n * @param {Object} params\n * @param {BigNumber} params.id the id of the order\n */\nconst onOrderUpdate = async ({ id }) => getOrder(id.toNumber());\n\nexport default onOrderUpdate;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/events/onOrderUpdate.js","// @flow\nimport BigNumber from 'bignumber.js';\n\nimport type { BuyOrSell } from './BuyOrSell';\n\n/**\n * Shape of a normalised order.\n * `cumulativeVolume` is only populated in the orderbook\n */\nexport type Order = {\n  id: number,\n  owner: string,\n  isActive: boolean,\n  sell: {\n    symbol: string,\n    howMuch: BigNumber,\n  },\n  buy: {\n    symbol: string,\n    howMuch: BigNumber,\n  },\n  price?: BigNumber,\n  type?: BuyOrSell,\n  cumulativeVolume?: BigNumber,\n};\n\nexport type SerializedOrder = {\n  id: number,\n  owner: string,\n  isActive: boolean,\n  sell: {\n    symbol: string,\n    howMuch: string,\n  },\n  buy: {\n    symbol: string,\n    howMuch: string,\n  },\n  price?: string,\n  type?: BuyOrSell,\n  cumulativeVolume?: string,\n};\n\nexport type RawOrder = [string, string, BigNumber, BigNumber];\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/schemas/Order.js","// @flow\nimport BigNumber from 'bignumber.js';\n\nimport type { BuyOrSell } from './BuyOrSell';\nimport type { Address } from '../../assets/schemas/Address';\n\n/**\n * An executed trade == a taken order\n */\nexport type Trade = {\n  maker: Address,\n  taker: Address,\n  timeStamp: Date,\n  price: BigNumber,\n  type: BuyOrSell,\n  quantity: BigNumber,\n};\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/schemas/Trade.js","// @flow\nimport getMatchingMarketContract from '../contracts/getMatchingMarketContract';\nimport findEventInLog from '../../utils/ethereum/findEventInLog';\nimport sendTransaction from '../../utils/parity/sendTransaction';\n\n/**\n * Cancel an order by `id`\n */\nconst cancelOrderFromAccount = async (environment, { id }): boolean => {\n  const simpleMarketContract = await getMatchingMarketContract(environment);\n\n  // TODO: reintroduce rush\n  // const receipt = await rush(\n  //   boosted,\n  //   `Cancelling order ${id} took more than 10 seconds.`,\n  //   10 * 1000,\n  // );\n  const receipt = await sendTransaction(\n    simpleMarketContract,\n    'cancel',\n    [id],\n    environment,\n    {},\n  );\n  const canceled = findEventInLog(\n    'LogKill',\n    receipt,\n    'Error during order cancelation',\n  );\n\n  return !!canceled;\n};\n\nexport default cancelOrderFromAccount;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/transactions/cancelOrderFromAccount.js","import Wallet from 'ethers-wallet';\nimport { ZeroEx } from '0x.js';\nimport getAddress from '../../assets/utils/getAddress';\nimport approve from '../../assets/transactions/approve';\nimport getBalance from '../../assets/calls/getBalance';\nimport ensure from '../../utils/generic/ensure';\nimport rush from '../../utils/generic/rush';\nimport toProcessable from '../../assets/utils/toProcessable';\n\n/*\n * Creates an off-chain order according to the 0x specification\n * User must specify the relayer he's targetting and the network he wants to place the order in (testnet/mainnet)\n */\n\nconst networkToExchangeContract = {\n  KOVAN: '0x12459c951127e0c374ff9105dda097662a027093',\n  LIVE: '0x90fe2af704b34e0224bf2299c838e04d4dcf1364',\n};\n\nconst networkToTokenTransferProxy = {\n  KOVAN: '0x087eed4bc1ee3de49befbd66c662b434b15d49d4',\n  LIVE: '0x8da0d80f5007ef1e431dd2127178d224e32c2ef4',\n};\nconst make0xOffChainOrder = async (\n  environment,\n  config,\n  relayer,\n  network,\n  sellSymbol,\n  buySymbol,\n  sellHowMuch,\n  buyHowMuch,\n) => {\n  const sellTokenBalance = await getBalance(environment, {\n    tokenSymbol: sellSymbol,\n    ofAddress: environment.account.address,\n  });\n  ensure(\n    sellTokenBalance.gte(sellHowMuch),\n    `Insufficient balance of ${sellSymbol}`,\n  );\n\n  const approvePromise = approve(environment, {\n    symbol: sellSymbol,\n    spender: networkToTokenTransferProxy[network],\n    quantity: sellHowMuch,\n  });\n\n  await rush(\n    approvePromise,\n    `Approve took longer that 30 seconds. ${sellHowMuch.toString()} ${sellSymbol} ${\n      networkToTokenTransferProxy[network]\n    }`,\n    50 * 1000,\n  );\n  const salt = ZeroEx.generatePseudoRandomSalt();\n\n  const order = {\n    maker: environment.account.address.toLowerCase(),\n    taker: '0x0000000000000000000000000000000000000000',\n    feeRecipient: '0x0000000000000000000000000000000000000000',\n    makerTokenAddress: getAddress(config, sellSymbol),\n    takerTokenAddress: getAddress(config, buySymbol),\n    exchangeContractAddress: networkToExchangeContract[network],\n    salt,\n    makerFee: '0',\n    takerFee: '0',\n    makerTokenAmount: toProcessable(config, sellHowMuch, sellSymbol),\n    takerTokenAmount: toProcessable(config, buyHowMuch, buySymbol),\n    expirationUnixTimestampSec: (Date.now() + 3600000).toString(),\n  };\n\n  const orderHash = ZeroEx.getOrderHashHex(order);\n\n  const isValidOrderHash = ZeroEx.isValidOrderHash(orderHash);\n  ensure(isValidOrderHash, 'Invalid order hash');\n\n  let rawSignature;\n\n  if (environment.account.signMessage) {\n    rawSignature = environment.account.signMessage(orderHash);\n    const verified = Wallet.Wallet.verifyMessage(orderHash, rawSignature);\n    ensure(\n      verified.toLowerCase() === environment.account.address.toLowerCase(),\n      'Invalid signature',\n      { expected: environment.account.address, received: verified },\n    );\n  } else {\n    rawSignature = await environment.api.eth.sign(\n      environment.account.address,\n      orderHash,\n    );\n  }\n\n  const ecSignature = {\n    r: rawSignature.substring(0, 66),\n    s: `0x${rawSignature.substring(66, 66 + 64)}`,\n    v: parseInt(`0x${rawSignature.substring(66 + 64)}`, 16),\n  };\n  const isValidSignature = await ZeroEx.isValidSignature(\n    orderHash,\n    ecSignature,\n    environment.account.address,\n  );\n  ensure(isValidSignature, 'Invalid signature');\n\n  const signedOrder = { ...order, ecSignature };\n\n  return signedOrder;\n};\n\nexport default make0xOffChainOrder;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/transactions/make0xOffChainOrder.js","module.exports = require(\"0x.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"0x.js\"\n// module id = 121\n// module chunks = 0","// @flow\nimport approve from '../../assets/transactions/approve';\nimport ensure from '../../utils/generic/ensure';\nimport findEventInLog from '../../utils/ethereum/findEventInLog';\nimport getAddress from '../../assets/utils/getAddress';\nimport getConfig from '../../version/calls/getConfig';\nimport getOrder from '../../exchange/calls/getOrder';\nimport getMatchingMarketContract from '../contracts/getMatchingMarketContract';\nimport rush from '../../utils/generic/rush';\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport toProcessable from '../../assets/utils/toProcessable';\n\nimport type { Environment } from '../../utils/environment/Environment';\nimport type { Order } from '../schemas/Order';\n\ntype Argument = Object &\n  Order & {\n    timeout: number,\n  };\n\n/**\n * Make an order directly on the deployed SimpleMarket\n * @param {Order} argument order and more\n * @param argument.timeout wait time for the transaction\n */\nconst makeOrderFromAccount = async (\n  environment: Environment,\n  {\n    sell: { howMuch: sellHowMuch, symbol: sellSymbol },\n    buy: { howMuch: buyHowMuch, symbol: buySymbol },\n    timeout = 50 * 1000,\n  }: Argument,\n): Promise<Order> => {\n  const config = await getConfig(environment);\n  const matchingMarketContract = await getMatchingMarketContract(environment);\n\n  // eslint-disable-next-line no-underscore-dangle\n  const dust = await matchingMarketContract.instance._dust.call({}, [\n    getAddress(config, sellSymbol),\n  ]);\n  /* eslint-enable */\n  ensure(\n    toProcessable(config, sellHowMuch, sellSymbol).gte(dust),\n    'Selling quantity too low.',\n  );\n\n  const approvePromise = approve(environment, {\n    symbol: sellSymbol,\n    spender: matchingMarketContract.address,\n    quantity: sellHowMuch,\n  });\n\n  await rush(\n    approvePromise,\n    `Approve took longer that 30 seconds. ${sellHowMuch.toString()} ${sellSymbol} ${\n      matchingMarketContract.address\n    }`,\n    timeout,\n  );\n\n  const args = [\n    toProcessable(config, sellHowMuch, sellSymbol),\n    getAddress(config, sellSymbol),\n    toProcessable(config, buyHowMuch, buySymbol),\n    getAddress(config, buySymbol),\n    0,\n  ];\n\n  const receipt = await sendTransaction(\n    matchingMarketContract,\n    'offer',\n    args,\n    environment,\n    {},\n  );\n  const updateLog = findEventInLog('LogItemUpdate', receipt);\n  const orderId = updateLog.params.id.value;\n\n  if (!receipt || !orderId)\n    throw new Error(\n      `Error with make on Simple Market: \\n ${JSON.stringify(\n        receipt,\n        null,\n        4,\n      )}`,\n    );\n  const createdOrder = await getOrder(environment, { id: orderId });\n  return createdOrder;\n};\n\nexport default makeOrderFromAccount;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/transactions/makeOrderFromAccount.js","// @flow\nimport findEventInLog from '../../utils/ethereum/findEventInLog';\nimport getConfig from '../../version/calls/getConfig';\nimport getOrder from '../calls/getOrder';\nimport getMatchingMarketContract from '../contracts/getMatchingMarketContract';\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport toProcessable from '../../assets/utils/toProcessable';\n\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * Cancel an order by `id`\n */\nconst takeOrderFromAccount = (\n  environment: Environment,\n  { id, maxTakeAmount },\n): Promise<any> =>\n  getOrder(environment, { id }).then(async order => {\n    const config = await getConfig(environment);\n    const simpleMarketContract = await getMatchingMarketContract(environment);\n    const args = [\n      order.id,\n      toProcessable(config, maxTakeAmount, order.sell.symbol),\n    ];\n\n    const transaction = await sendTransaction(\n      simpleMarketContract,\n      'take',\n      args,\n      environment,\n    );\n\n    const takeLog = findEventInLog('LogTake', transaction);\n    const takeOrder = await getOrder(environment, {\n      id: takeLog.params.id.value,\n    });\n\n    return transaction\n      ? {\n          order: takeOrder,\n        }\n      : null;\n  });\n\nexport default takeOrderFromAccount;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/transactions/takeOrderFromAccount.js","// @flow\nimport BigNumber from 'bignumber.js';\n\nimport type { Order } from '../schemas/Order';\nimport type { BuyOrSell } from '../schemas/BuyOrSell';\n\n/**\n * Calculates the average price over a set of `orders`\n * @param orders need to be sorted and filtered with `matchOrders`\n */\nconst averagePrice = (orderType: BuyOrSell, orders: [Order]): BigNumber => {\n  const cumulatedVolumes = orders.reduce(\n    (accumulator, current) => ({\n      buy: accumulator.buy.add(current.buy.howMuch),\n      sell: accumulator.sell.add(current.sell.howMuch),\n    }),\n    {\n      buy: new BigNumber(0),\n      sell: new BigNumber(0),\n    },\n  );\n\n  if (orderType === 'buy') {\n    return cumulatedVolumes.sell.div(cumulatedVolumes.buy);\n  } else if (orderType === 'sell') {\n    return cumulatedVolumes.buy.div(cumulatedVolumes.sell);\n  }\n\n  throw new Error('You need to specify offerType to be either \"sell\" or \"buy\"');\n};\n\nexport default averagePrice;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/utils/averagePrice.js","// @flow\nimport BigNumber from 'bignumber.js';\n\nimport type { Order, SerializedOrder } from '../schemas/Order';\n\n/**\n * Deserializes an `order`, where serialisation means: Prepare data to be\n * stored in a database like MongoDB, redux store, JSON, ... --> Replace all\n * special objects like BigNumber or Date with a storeable string\n * representation.\n *\n * Deserialisation means: Create these special objects again from their string\n * representation.\n */\nconst deserializeOrder = (order: SerializedOrder): Order => {\n  const result = order;\n  result.buy.howMuch = new BigNumber(order.buy.howMuch);\n  result.sell.howMuch = new BigNumber(order.sell.howMuch);\n  return result;\n};\n\nexport default deserializeOrder;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/utils/deserializeOrder.js","const getExchangeList = () => ['MatchingMarket', 'ZeroExExchange'];\n\nexport default getExchangeList;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/utils/getExchangeList.js","// @flow\nimport BigNumber from 'bignumber.js';\n\nimport getPrices from './getPrices';\n\nimport type { BuyOrSell } from '../schemas/BuyOrSell';\nimport type { Order } from '../schemas/Order';\n\n/**\n * Filter and sort `orders` that match `orderType` and `priceThreshold`.\n * @param orders orders from the same asset pair\n */\nconst matchOrders = (\n  orderType: BuyOrSell,\n  priceThreshold: BigNumber,\n  orders: Array<Order>,\n): Array<Order> => {\n  if (orderType === 'sell') {\n    return orders\n      .filter((order: Order) => getPrices(order).sell.lte(priceThreshold))\n      .sort(\n        (a: Order, b: Order) =>\n          getPrices(a).sell.gt(getPrices(b).sell) ? -1 : 1,\n      );\n  } else if (orderType === 'buy') {\n    return orders\n      .filter((order: Order) => getPrices(order).buy.gte(priceThreshold))\n      .sort(\n        (a: Order, b: Order) =>\n          getPrices(a).buy.gt(getPrices(b).buy) ? -1 : 1,\n      );\n  }\n\n  throw new Error('You need to specify orderType to be either \"sell\" or \"buy\"');\n};\n\nexport default matchOrders;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/utils/matchOrders.js","// @flow\nimport type { Order, SerializedOrder } from '../schemas/Order';\n\n/**\n * Serialize an `order`. Serialisation means: Prepare data to be\n * stored in a database like MongoDB, redux store, JSON, ... --> Replace all\n * special objects like BigNumber or Date with a storeable string\n * representation.\n */\nconst serializeOrder = (order: Order): SerializedOrder => {\n  const result = order;\n  result.buy.howMuch = order.buy.howMuch.toString();\n  result.sell.howMuch = order.sell.howMuch.toString();\n  return result;\n};\n\nexport default serializeOrder;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/exchange/utils/serializeOrder.js","module.exports = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"addAssetToOwnedAssets\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"gav\",\"type\":\"uint256\"},{\"name\":\"unclaimedFees\",\"type\":\"uint256\"}],\"name\":\"calcNav\",\"outputs\":[{\"name\":\"nav\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isInAssetList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"shutDown\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"shareQuantity\",\"type\":\"uint256\"}],\"name\":\"redeemAllOwnedAssets\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofExchange\",\"type\":\"address\"},{\"name\":\"orderId\",\"type\":\"bytes32\"},{\"name\":\"updateType\",\"type\":\"uint8\"},{\"name\":\"orderAddresses\",\"type\":\"address[2]\"},{\"name\":\"orderValues\",\"type\":\"uint256[3]\"}],\"name\":\"orderUpdateHook\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastRequestId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAssets\",\"type\":\"address[]\"}],\"name\":\"enableInvestment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"exchanges\",\"outputs\":[{\"name\":\"exchange\",\"type\":\"address\"},{\"name\":\"exchangeAdapter\",\"type\":\"address\"},{\"name\":\"takesCustody\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofExchange\",\"type\":\"address\"},{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"getOpenOrderInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"cancelRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isInvestAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"calcSharePriceAndAllocateFees\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"quantityHeldInCustodyOfExchange\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"calcGav\",\"outputs\":[{\"name\":\"gav\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ORDER_EXPIRATION_TIME\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"giveQuantity\",\"type\":\"uint256\"},{\"name\":\"shareQuantity\",\"type\":\"uint256\"},{\"name\":\"investmentAsset\",\"type\":\"address\"}],\"name\":\"requestInvestment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastOrderIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAssets\",\"type\":\"address[]\"}],\"name\":\"enableRedemption\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"toWholeShareUnit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"executeRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isInOpenMakeOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofExchange\",\"type\":\"address\"},{\"name\":\"ofSellAsset\",\"type\":\"address\"},{\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"addOpenMakeOrder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requests\",\"outputs\":[{\"name\":\"participant\",\"type\":\"address\"},{\"name\":\"status\",\"type\":\"uint8\"},{\"name\":\"requestType\",\"type\":\"uint8\"},{\"name\":\"requestAsset\",\"type\":\"address\"},{\"name\":\"shareQuantity\",\"type\":\"uint256\"},{\"name\":\"giveQuantity\",\"type\":\"uint256\"},{\"name\":\"receiveQuantity\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"},{\"name\":\"atUpdateId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"exchangeIndex\",\"type\":\"uint256\"},{\"name\":\"method\",\"type\":\"bytes4\"},{\"name\":\"orderAddresses\",\"type\":\"address[5]\"},{\"name\":\"orderValues\",\"type\":\"uint256[8]\"},{\"name\":\"identifier\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"callOnExchange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"shareQuantity\",\"type\":\"uint256\"},{\"name\":\"receiveQuantity\",\"type\":\"uint256\"},{\"name\":\"redemptionAsset\",\"type\":\"address\"}],\"name\":\"requestRedemption\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRedeemAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofExchange\",\"type\":\"address\"},{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"orderExpired\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"shareQuantity\",\"type\":\"uint256\"},{\"name\":\"requestedAssets\",\"type\":\"address[]\"}],\"name\":\"emergencyRedeem\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getExchangeInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"bool[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAssets\",\"type\":\"address[]\"}],\"name\":\"disableRedemption\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"gav\",\"type\":\"uint256\"}],\"name\":\"calcUnclaimedFees\",\"outputs\":[{\"name\":\"managementFee\",\"type\":\"uint256\"},{\"name\":\"performanceFee\",\"type\":\"uint256\"},{\"name\":\"unclaimedFees\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"calcSharePrice\",\"outputs\":[{\"name\":\"sharePrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"exchangesToOpenMakeOrders\",\"outputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"expiresAt\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofNewOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"performCalculations\",\"outputs\":[{\"name\":\"gav\",\"type\":\"uint256\"},{\"name\":\"managementFee\",\"type\":\"uint256\"},{\"name\":\"performanceFee\",\"type\":\"uint256\"},{\"name\":\"unclaimedFees\",\"type\":\"uint256\"},{\"name\":\"feesShareQuantity\",\"type\":\"uint256\"},{\"name\":\"nav\",\"type\":\"uint256\"},{\"name\":\"sharePrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"name\":\"exchangeAddress\",\"type\":\"address\"},{\"name\":\"orderId\",\"type\":\"bytes32\"},{\"name\":\"updateType\",\"type\":\"uint8\"},{\"name\":\"makerAsset\",\"type\":\"address\"},{\"name\":\"takerAsset\",\"type\":\"address\"},{\"name\":\"makerQuantity\",\"type\":\"uint256\"},{\"name\":\"takerQuantity\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"},{\"name\":\"fillTakerQuantity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getModules\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"atLastUnclaimedFeeAllocation\",\"outputs\":[{\"name\":\"gav\",\"type\":\"uint256\"},{\"name\":\"managementFee\",\"type\":\"uint256\"},{\"name\":\"performanceFee\",\"type\":\"uint256\"},{\"name\":\"unclaimedFees\",\"type\":\"uint256\"},{\"name\":\"nav\",\"type\":\"uint256\"},{\"name\":\"highWaterMark\",\"type\":\"uint256\"},{\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"toSmallestShareUnit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofSender\",\"type\":\"address\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"totalValue\",\"type\":\"uint256\"},{\"name\":\"numShares\",\"type\":\"uint256\"}],\"name\":\"calcValuePerShare\",\"outputs\":[{\"name\":\"valuePerShare\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERFORMANCE_FEE_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownedAssets\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MANAGEMENT_FEE_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCreationTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAssets\",\"type\":\"address[]\"}],\"name\":\"disableInvestment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_FUND_ASSETS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"QUOTE_ASSET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"modules\",\"outputs\":[{\"name\":\"pricefeed\",\"type\":\"address\"},{\"name\":\"compliance\",\"type\":\"address\"},{\"name\":\"riskmgmt\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofExchange\",\"type\":\"address\"},{\"name\":\"ofSellAsset\",\"type\":\"address\"}],\"name\":\"removeOpenMakeOrder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwnedAssetsLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isShutDown\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ofManager\",\"type\":\"address\"},{\"name\":\"withName\",\"type\":\"bytes32\"},{\"name\":\"ofQuoteAsset\",\"type\":\"address\"},{\"name\":\"ofManagementFee\",\"type\":\"uint256\"},{\"name\":\"ofPerformanceFee\",\"type\":\"uint256\"},{\"name\":\"ofCompliance\",\"type\":\"address\"},{\"name\":\"ofRiskMgmt\",\"type\":\"address\"},{\"name\":\"ofPriceFeed\",\"type\":\"address\"},{\"name\":\"ofExchanges\",\"type\":\"address[]\"},{\"name\":\"ofDefaultAssets\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"exchange\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"updateType\",\"type\":\"uint8\"}],\"name\":\"OrderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"assets\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"holdings\",\"type\":\"uint256[]\"},{\"indexed\":false,\"name\":\"prices\",\"type\":\"uint256[]\"}],\"name\":\"PortfolioContent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"RequestUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"ofParticipant\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"atTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"shareQuantity\",\"type\":\"uint256\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"atTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"shareQuantityConverted\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"unclaimed\",\"type\":\"uint256\"}],\"name\":\"FeesConverted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"atTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"managementFee\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"performanceFee\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"nav\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"CalculationUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"errorMessage\",\"type\":\"string\"}],\"name\":\"ErrorMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"ofParticipant\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"atTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"shareQuantity\",\"type\":\"uint256\"}],\"name\":\"Created\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"ofParticipant\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"atTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"shareQuantity\",\"type\":\"uint256\"}],\"name\":\"Annihilated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/version/Fund.abi.json\n// module id = 129\n// module chunks = 0","import getConfig from '../../version/calls/getConfig';\nimport getBalance from '../../assets/calls/getBalance';\nimport getPrice from '../../pricefeeds/calls/getPrice';\n\nconst getHoldingsAndPrices = async (environment, { fundAddress }) => {\n  const config = await getConfig(environment);\n  const promiseForHoldingsAndPrices = config.assets.map(async asset => {\n    const balance = await getBalance(environment, {\n      tokenSymbol: asset.symbol,\n      ofAddress: fundAddress,\n    });\n    const price = await getPrice(environment, asset.symbol);\n    return { name: asset.symbol, balance, price };\n  });\n\n  const holdingsAndPrices = await Promise.all(promiseForHoldingsAndPrices);\n  return holdingsAndPrices;\n};\n\nexport default getHoldingsAndPrices;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/calls/getHoldingsAndPrices.js","// @flow\nimport getFundContract from '../contracts/getFundContract';\n\nimport type { Address } from '../../assets/schemas/Address';\n\n/**\n * Returns the addresses of all modules linked to the fund at `fundAddress`\n */\nconst getModules = async (fundAddress: Address): Promise<[Address]> => {\n  const fundContract = getFundContract(fundAddress);\n\n  const modules = await fundContract.instance.getModules.call();\n\n  return modules;\n};\n\nexport default getModules;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/calls/getModules.js","// @flow\nimport getOrdersHistory from './getOrdersHistory';\n\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * Returns all the order the fund has made and whose status is active (this will only work for OasisDex order)\n */\n\nconst getOpenOrders = async (environment: Environment, { fundAddress }) => {\n  const orders = await getOrdersHistory(environment, { fundAddress });\n  return orders.filter(o => o.isActive && o.orderType === 'make');\n};\n\nexport default getOpenOrders;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/calls/getOpenOrders.js","// @flow\nimport getFundContract from '../contracts/getFundContract';\n\n/**\n * Fund participation authorizations\n */\ntype ParticipationAuthorizations = {\n  subscriptionAllowed: boolean,\n  redemptionAllowed: boolean,\n};\n\n/**\n * Get participation authorizations of fund at `fundAddress`\n */\nconst getParticipationAuthorizations = async (\n  environment,\n  { fundAddress },\n): Promise<ParticipationAuthorizations> => {\n  const fundContract = await getFundContract(environment, fundAddress);\n  const subscriptionAllowed = await fundContract.instance.isInvestAllowed.call();\n  const redemptionAllowed = await fundContract.instance.isRedeemAllowed.call();\n\n  return {\n    subscriptionAllowed,\n    redemptionAllowed,\n  };\n};\n\nexport default getParticipationAuthorizations;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/calls/getParticipationAuthorizations.js","// @flow\nimport getFundContract from '../contracts/getFundContract';\n\nimport type { Address } from '../../assets/schemas/Address';\n\n/**\n * Get all the subscribe/redeem requests this fund at `fundAddress` received so far\n */\nconst getRequestsHistory = async (fundAddress: Address): Promise<any> => {\n  const fundContract = getFundContract(fundAddress);\n\n  const requests = await fundContract.instance.requests.call();\n\n  return requests;\n};\n\nexport default getRequestsHistory;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/calls/getRequestsHistory.js","// @flow\nimport BigNumber from 'bignumber.js';\nimport getFundContract from '../contracts/getFundContract';\n\nimport type { Address } from '../../assets/schemas/Address';\n\nconst getStake = async (fundAddress: Address): Promise<BigNumber> => {\n  const fundContract = getFundContract(fundAddress);\n  const stake = await fundContract.instance.getStake.call();\n\n  return stake;\n};\n\nexport default getStake;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/calls/getStake.js","// @flow\nimport getFundContract from '../contracts/getFundContract';\n\n/**\n * Checks if fund at `fundAddress` is shutdown\n */\nconst isShutDown = async (environment, { fundAddress }): Promise<boolean> => {\n  const fundContract = getFundContract(environment, fundAddress);\n\n  const bool = await fundContract.instance.isShutDown.call();\n\n  return bool;\n};\n\nexport default isShutDown;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/calls/isShutDown.js","// @flow\nimport getFundContract from '../contracts/getFundContract';\n\nconst performCalculations = async (\n  environment,\n  { fundAddress, precision = 18 },\n) => {\n  const fundContract = getFundContract(environment, fundAddress);\n\n  const calculations = await fundContract.instance.performCalculations.call();\n  const totalSupply = await fundContract.instance.totalSupply.call();\n  return {\n    gav: calculations[0].div(10 ** precision),\n    managementReward: calculations[1].div(10 ** precision),\n    performanceReward: calculations[2].div(10 ** precision),\n    unclaimedRewards: calculations[3].div(10 ** precision),\n    rewardsShareQuantity: calculations[4].div(10 ** precision),\n    nav: calculations[5].div(10 ** precision),\n    sharePrice: calculations[6].div(10 ** precision),\n    totalSupply: totalSupply.div(10 ** precision),\n  };\n};\n\nexport default performCalculations;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/calls/performCalculations.js","module.exports = [{\"constant\":true,\"inputs\":[],\"name\":\"RISK_LEVEL\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"orderPrice\",\"type\":\"uint256\"},{\"name\":\"referencePrice\",\"type\":\"uint256\"},{\"name\":\"sellAsset\",\"type\":\"address\"},{\"name\":\"buyAsset\",\"type\":\"address\"},{\"name\":\"sellQuantity\",\"type\":\"uint256\"},{\"name\":\"buyQuantity\",\"type\":\"uint256\"}],\"name\":\"isMakePermitted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"orderPrice\",\"type\":\"uint256\"},{\"name\":\"referencePrice\",\"type\":\"uint256\"},{\"name\":\"sellAsset\",\"type\":\"address\"},{\"name\":\"buyAsset\",\"type\":\"address\"},{\"name\":\"sellQuantity\",\"type\":\"uint256\"},{\"name\":\"buyQuantity\",\"type\":\"uint256\"}],\"name\":\"isTakePermitted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/riskmgmt/RMMakeOrders.abi.json\n// module id = 138\n// module chunks = 0","// @flow\nimport BigNumber from 'bignumber.js';\n\nimport getFundContract from '../contracts/getFundContract';\nimport ensure from '../../utils/generic/ensure';\nimport findEventInLog from '../../utils/ethereum/findEventInLog';\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport toDate from '../../utils/generic/toDate';\n\ntype RewardsConverted = {\n  timestamp: BigNumber,\n  shareQuantity: BigNumber,\n  unclaimedFees: BigNumber,\n};\n\n/**\n * Convert unclaimed fees of `fundAddress`\n */\nconst calcSharePriceAndConvertFees = async (\n  environment,\n  { fundAddress },\n): Promise<RewardsConverted> => {\n  const fundContract = await getFundContract(environment, fundAddress);\n  const isShutDown = await fundContract.instance.isShutDown.call();\n  ensure(isShutDown === false, 'Fund is shut down');\n  const owner = await fundContract.owner();\n  ensure(\n    owner.toLowerCase() === environment.account.address.toLowerCase(),\n    'Not owner of fund',\n  );\n\n  const receipt = await sendTransaction(\n    fundContract,\n    'calcSharePriceAndConvertFees',\n    [],\n    environment,\n  );\n\n  const updateLog = findEventInLog('FeesConverted', receipt);\n  const feesConvertedArgs = updateLog.params;\n\n  return {\n    date: toDate(feesConvertedArgs.timestamp.value),\n    shareQuantity: feesConvertedArgs.shareQuantity.value,\n    unclaimedFees: feesConvertedArgs.unclaimedFees.value,\n  };\n};\n\nexport default calcSharePriceAndConvertFees;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/transactions/calcSharePriceAndConvertFees.js","// @flow\nimport ensure from '../../utils/generic/ensure';\nimport callOnExchange from './callOnExchange';\nimport getExchangeName from '../../exchange/utils/getExchangeName';\nimport getFundContract from '../contracts/getFundContract';\nimport getMethodNameSignature from '../../exchange/utils/getMethodNameSignature';\nimport type { Environment } from '../../utils/environment/Environment';\nimport type { Order } from '../../exchange/schemas/Order';\n\nconst cancelOrder = async (\n  environment: Environment,\n  {\n    fundAddress,\n    exchangeAddress,\n    makerAssetSymbol,\n    takerAssetSymbol,\n    identifier,\n  },\n): Promise<Order> => {\n  const fundContract = await getFundContract(environment, fundAddress);\n\n  const isShutDown = await fundContract.instance.isShutDown.call();\n  const owner = await fundContract.instance.owner.call();\n  const orderExpired = await fundContract.instance.orderExpired.call({}, [\n    exchangeAddress,\n    makerAssetSymbol,\n  ]);\n  ensure(\n    owner.toLowerCase() === environment.account.address.toLowerCase() ||\n      isShutDown ||\n      orderExpired,\n    'Order can only be canceled by the owner of the fund, unless the order has expired or the fund has been shut down.',\n  );\n\n  const method = await getMethodNameSignature(environment, 'cancelOrder');\n\n  const cancelLog = await callOnExchange(environment, {\n    fundContract,\n    exchangeAddress,\n    method,\n    orderAddresses: ['0x0', '0x0', makerAssetSymbol, takerAssetSymbol, '0x0'],\n    orderValues: [0, 0, 0, 0, 0, 0, 0],\n    identifier,\n    signature: {},\n  });\n\n  return {\n    id: parseInt(\n      environment.api.util.bytesToHex(cancelLog.params.orderId.value),\n      16,\n    ),\n    exchange: await getExchangeName(\n      environment,\n      cancelLog.params.exchange.value,\n    ),\n    updateType: 'cancel',\n  };\n};\n\nexport default cancelOrder;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/transactions/cancelOrder.js","// @flow\nimport ensure from '../../utils/generic/ensure';\nimport callOnExchange from './callOnExchange';\nimport getFundContract from '../contracts/getFundContract';\nimport getMethodNameSignature from '../../exchange/utils/getMethodNameSignature';\nimport preflightMakeOrder from '../preflights/preflightMakeOrder';\nimport getExchangeName from '../../exchange/utils/getExchangeName';\n\nimport type { Environment } from '../../utils/environment/Environment';\nimport type { Order } from '../../exchange/schemas/Order';\n\nconst makeOrder = async (\n  environment: Environment,\n  {\n    fundAddress,\n    exchangeAddress,\n    maker,\n    taker = '0x0',\n    makerAssetSymbol,\n    takerAssetSymbol,\n    feeRecipient = '0x0',\n    makerQuantity,\n    takerQuantity,\n    makerFee = 0,\n    takerFee = 0,\n    timestamp = 0,\n    salt = '0x0',\n    fillTakerTokenAmount = 0,\n    dexySignatureMode = 0,\n    identifier = '0x0',\n    signature = {},\n  },\n): Promise<Order> => {\n  const fundContract = await getFundContract(environment, fundAddress);\n  const preflightCheck = await preflightMakeOrder(environment, {\n    fundContract,\n    exchangeAddress,\n    makerAssetSymbol,\n    takerAssetSymbol,\n    makerQuantity,\n    takerQuantity,\n  });\n\n  ensure(\n    preflightCheck,\n    'One of the pre-conditions of the function makeOrder failed on pre-flight.',\n  );\n\n  const method = await getMethodNameSignature(environment, 'makeOrder');\n\n  const updateLog = await callOnExchange(environment, {\n    fundContract,\n    exchangeAddress,\n    method,\n    orderAddresses: [\n      maker,\n      taker,\n      makerAssetSymbol,\n      takerAssetSymbol,\n      feeRecipient,\n    ],\n    orderValues: [\n      makerQuantity,\n      takerQuantity,\n      makerFee,\n      takerFee,\n      timestamp,\n      salt,\n      fillTakerTokenAmount,\n      dexySignatureMode,\n    ],\n    identifier,\n    signature,\n  });\n\n  return {\n    id: parseInt(\n      environment.api.util.bytesToHex(updateLog.params.orderId.value),\n      16,\n    ),\n    exchange: await getExchangeName(\n      environment,\n      updateLog.params.exchange.value,\n    ),\n    updateType: updateLog.params.updateType.value === 0 ? 'make' : 'take',\n  };\n};\n\nexport default makeOrder;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/transactions/makeOrder.js","// @flow\nimport getVersionContract from '../../version/contracts/getVersionContract';\nimport ensure from '../../utils/generic/ensure';\nimport sendTransaction from '../../utils/parity/sendTransaction';\n\n/**\n * Shut down fund at `fundAddress`\n */\nconst shutDownFund = async (environment, { fundAddress }): Promise<any> => {\n  const versionContract = await getVersionContract(environment);\n\n  const shutDownAllowed = await versionContract.instance.managerToFunds.call(\n    {},\n    [environment.account.address],\n  );\n  ensure(\n    shutDownAllowed.toLowerCase() === fundAddress.toLowerCase(),\n    'Not owner of fund',\n  );\n\n  const receipt = await sendTransaction(\n    versionContract,\n    'shutDownFund',\n    [fundAddress],\n    environment,\n  );\n\n  return receipt;\n};\n\nexport default shutDownFund;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/transactions/shutDownFund.js","// @flow\nimport BigNumber from 'bignumber.js';\n\nimport takeOrder from './takeOrder';\n\n/**\n * Takes multiple orders from fund at `fundAddress` upon to `totalQuantityAsked`\n * @param orders sorted and filtered orders by matchOrders\n */\nconst takeMultipleOrders = async (\n  environment,\n  { orders, fundAddress, totalQuantityAsked, exchangeNumber = 0 },\n): Promise<BigNumber> =>\n  orders.reduce(async (accumulatorPromise: Promise<*>, currentOrder: any) => {\n    let remainingQuantity = await accumulatorPromise;\n\n    if (remainingQuantity.gt(0)) {\n      const result = await takeOrder(environment, {\n        id: currentOrder.id,\n        fundAddress,\n        quantityAsked: remainingQuantity,\n        exchangeNumber,\n      });\n      remainingQuantity = remainingQuantity.minus(result.executedQuantity);\n    }\n\n    return remainingQuantity;\n  }, Promise.resolve(new BigNumber(totalQuantityAsked)));\n\nexport default takeMultipleOrders;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/transactions/takeMultipleOrders.js","// @flow\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport getFundContract from '../contracts/getFundContract';\nimport ensure from '../../utils/generic/ensure';\n\nconst toggleInvestment = async (\n  environment,\n  { fundAddress },\n): Promise<boolean> => {\n  const fundContract = await getFundContract(environment, fundAddress);\n  const owner = await fundContract.instance.owner.call();\n  ensure(\n    owner.toLowerCase() === environment.account.address.toLowerCase(),\n    'Not owner of fund',\n  );\n\n  const preInvestmentAllowed = await fundContract.instance.isInvestAllowed.call();\n\n  if (preInvestmentAllowed === true) {\n    await sendTransaction(fundContract, 'disableInvestment', [], environment);\n  } else if (preInvestmentAllowed === false) {\n    await sendTransaction(fundContract, 'enableInvestment', [], environment);\n  }\n\n  const postInvestmentAllowed = await fundContract.instance.isInvestAllowed.call();\n\n  ensure(\n    preInvestmentAllowed !== postInvestmentAllowed,\n    'Toggle investment was not successful',\n  );\n  return postInvestmentAllowed;\n};\n\nexport default toggleInvestment;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/transactions/toggleInvestment.js","// @flow\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport getFundContract from '../contracts/getFundContract';\nimport ensure from '../../utils/generic/ensure';\n\n/**\n * Toggles redemption of fund at `fundAddress`\n */\nconst toggleRedemption = async (\n  environment,\n  { fundAddress },\n): Promise<boolean> => {\n  const fundContract = await getFundContract(environment, fundAddress);\n\n  const owner = await fundContract.instance.owner.call();\n  ensure(\n    owner.toLowerCase() === environment.account.address.toLowerCase(),\n    'Not owner of fund',\n  );\n\n  const preRedemptionAllowed = await fundContract.instance.isRedeemAllowed.call();\n\n  if (preRedemptionAllowed === true) {\n    await sendTransaction(fundContract, 'disableRedemption', [], environment);\n  } else if (preRedemptionAllowed === false) {\n    await sendTransaction(fundContract, 'enableRedemption', [], environment);\n  }\n\n  const postRedemptionAllowed = await fundContract.instance.isRedeemAllowed.call();\n\n  ensure(\n    preRedemptionAllowed !== postRedemptionAllowed,\n    'Toggle redemption was not successful',\n  );\n  return postRedemptionAllowed;\n};\n\nexport default toggleRedemption;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/fund/transactions/toggleRedemption.js","module.exports = [{\"constant\":true,\"inputs\":[],\"name\":\"TERMS_AND_CONDITIONS\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"registeredFundToRegistrants\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"address\"}],\"name\":\"getRegistrantId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxRegistrants\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"address\"}],\"name\":\"getRegistrantFund\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"maxBuyinQuantity\",\"type\":\"uint256\"},{\"name\":\"whitelistants\",\"type\":\"address[]\"}],\"name\":\"batchAddToWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTimeTillEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"custodian\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"prizeMoneyAsset\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"payin\",\"type\":\"uint256\"}],\"name\":\"calculatePayout\",\"outputs\":[{\"name\":\"payoutQuantity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMelonAsset\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isCompetitionActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"payin\",\"type\":\"uint256\"}],\"name\":\"getCHFValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COMPETITION_VERSION\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CHF_ASSET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistantToMaxBuyin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registrants\",\"outputs\":[{\"name\":\"fund\",\"type\":\"address\"},{\"name\":\"registrant\",\"type\":\"address\"},{\"name\":\"hasSigned\",\"type\":\"bool\"},{\"name\":\"buyinQuantity\",\"type\":\"uint256\"},{\"name\":\"payoutQuantity\",\"type\":\"uint256\"},{\"name\":\"isRewarded\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMaxBuyin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"prizeMoneyQuantity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MELON_ASSET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MELON_BASE_UNIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentTotalBuyin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofNewOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCompetitionStatusOfRegistrants\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"bool[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MELON_CONTRACT\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"byManager\",\"type\":\"address\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"termsAndConditionsAreSigned\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"fund\",\"type\":\"address\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"registerForCompetition\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"registrantToRegistrantIds\",\"outputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"exists\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ofMelonAsset\",\"type\":\"address\"},{\"name\":\"ofCHFAsset\",\"type\":\"address\"},{\"name\":\"ofCompetitionVersion\",\"type\":\"address\"},{\"name\":\"ofCustodian\",\"type\":\"address\"},{\"name\":\"ofStartTime\",\"type\":\"uint256\"},{\"name\":\"ofEndTime\",\"type\":\"uint256\"},{\"name\":\"ofBonusRate\",\"type\":\"uint256\"},{\"name\":\"ofTotalMaxBuyin\",\"type\":\"uint256\"},{\"name\":\"ofMaxRegistrants\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"withId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fund\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"Register\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"registrant\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"fund\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"ClaimReward\",\"type\":\"event\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/competitions/Competition.abi.json\n// module id = 146\n// module chunks = 0","// @flow\nimport getConfig from '../../version/calls/getConfig';\nimport getOlympiadContract from '../contracts/getOlympiadContract';\nimport getRegistrantFund from '../calls/getRegistrantFund';\nimport getVersionContract from '../../version/contracts/getVersionContract';\nimport findEventInLog from '../../utils/ethereum/findEventInLog';\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport toReadable from '../../assets/utils/toReadable';\n\n/**\n * Calling this function will register the sender on the competition contract and will allocate to his fund an amount of MLN in proportion of his buyInValue in ETH.\n */\nconst claimReward = async (environment): Promise<any> => {\n  const registrantFund = await getRegistrantFund(environment);\n\n  ensure(\n    registrantFund.toLowerCase() !==\n      '0x0000000000000000000000000000000000000000',\n    'Sender not registered.',\n  );\n\n  const olympiadContract = await getOlympiadContract(environment);\n\n  const receipt = await sendTransaction(\n    olympiadContract,\n    'claimReward',\n    [],\n    environment,\n  );\n\n  return receipt;\n};\n\nexport default claimReward;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/olympiad/transactions/claimReward.js","// @flow\nimport getConfig from '../../version/calls/getConfig';\nimport getOlympiadContract from '../contracts/getOlympiadContract';\nimport getVersionContract from '../../version/contracts/getVersionContract';\nimport findEventInLog from '../../utils/ethereum/findEventInLog';\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport toReadable from '../../assets/utils/toReadable';\n\n/**\n * Calling this function will register the sender on the competition contract and will allocate to his fund an amount of MLN in proportion of his buyInValue in ETH.\n */\nconst registerForCompetition = async (\n  environment,\n  { fundAddress, signature, buyInValue },\n): Promise<any> => {\n  const olympiadContract = await getOlympiadContract(environment);\n\n  const isCompetitionActive = await olympiadContract.instance.isCompetitionActive.call();\n  ensure(isCompetitionActive, 'Olympiad is inactive.');\n\n  const termsAndConditionsAreSigned = await olympiadContract.instance.termsAndConditionsAreSigned.call(\n    {},\n    [environment.account.address, signature.v, signature.r, signature.s],\n  );\n  ensure(termsAndConditionsAreSigned, 'Invalid signature of T&Cs');\n\n  const isWhiteListed = await olympiadContract.instance.isWhitelisted.call({}, [\n    environment.account.address,\n  ]);\n\n  ensure(\n    isWhiteListed,\n    'Sender is not whitelisted. Please perform KYC/AML checks with Bitcoin Suisse',\n  );\n\n  const currentTotalBuyin = await olympiadContract.instance.currentTotalBuyin.call();\n  const totalMaxBuyIn = await olympiadContract.instance.totalMaxBuyIn.call();\n  ensure(\n    currentTotalBuyin.add(buyInValue).lte(totalMaxBuyIn),\n    'Max total buy in has been reached.',\n  );\n\n  const CHFValue = await olympiadContract.instance.getCHFValue.call({}, [\n    buyInValue,\n  ]);\n  const whitelistantToMaxBuyin = await olympiadContract.instance.whitelistantToMaxBuyin.call(\n    {},\n    [environment.account.address],\n  );\n\n  ensure(\n    CHFValue.lte(whitelistantToMaxBuyin),\n    'The buy in amount exceed your max buy in amount (determined by Bitcoin Suisse).',\n  );\n\n  const versionContract = await getVersionContract(environment);\n  let managerToFund = await versionContract.instance.getFundByManager.call({}, [\n    environment.account.address,\n  ]);\n  ensure(\n    fundAddress.toLowerCase() === managerToFund.toLowerCase,\n    'Sender must register with a fund he owns.',\n  );\n  const config = await getConfig(environment);\n  const etherBalance = await environment.api.eth\n    .getBalance(environment.account.address)\n    .then(balance => toReadable(config, balance, config.nativeAssetSymbol));\n  ensure(etherBalance.gt(buyInValue), 'Insufficient balance of ether');\n\n  const registeredFundToRegistrant = await olympiadContract.instance.registeredFundToRegistrants.call(\n    {},\n    [fundAddress],\n  );\n  const registrantToRegistrantId = await olympiadContract.instance.registrantToRegistrantIds.call(\n    {},\n    [environment.account.address],\n  );\n  ensure(\n    registeredFundToRegistrant ===\n      '0x0000000000000000000000000000000000000000' &&\n      registrantToRegistrantId[1] === false,\n    'Sender already registered.',\n  );\n\n  const receipt = await sendTransaction(\n    olympiadContract,\n    'registerForCompetition',\n    [fundAddress, signature.v, signature.r, signature.s],\n    environment,\n    { value: buyInValue },\n  );\n\n  const registerLog = findEventInLog('Register', receipt);\n  return registerLog;\n};\n\nexport default registerForCompetition;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/olympiad/transactions/registerForCompetition.js","import Utils from 'ethers-utils';\nimport Wallet from 'ethers-wallet';\nimport ensure from '../../utils/generic/ensure';\nimport getOlympiadContract from '../contracts/getOlympiadContract';\n/**\n * Signs terms and conditions of competition with instantiated wallet\n * and returns a signature object with r, s and v require parameters in setupFund function\n */\n\nconst signOlympiadTermsAndConditions = async environment => {\n  const olympiadContract = await getOlympiadContract(environment);\n  const competitionHash = await olympiadContract.instance.TERMS_AND_CONDITIONS.call();\n  // const arrayifiedHash = [\n  //   26,\n  //   70,\n  //   180,\n  //   92,\n  //   200,\n  //   73,\n  //   226,\n  //   107,\n  //   179,\n  //   21,\n  //   146,\n  //   152,\n  //   195,\n  //   194,\n  //   24,\n  //   239,\n  //   48,\n  //   13,\n  //   1,\n  //   94,\n  //   211,\n  //   226,\n  //   52,\n  //   149,\n  //   231,\n  //   127,\n  //   14,\n  //   82,\n  //   156,\n  //   233,\n  //   246,\n  //   158,\n  // ];\n\n  let rawSignature;\n\n  if (environment.account.signMessage) {\n    rawSignature = environment.account.signMessage(arrayifiedHash);\n    const verified = Wallet.Wallet.verifyMessage(arrayifiedHash, rawSignature);\n    ensure(\n      verified.toLowerCase() === environment.account.address.toLowerCase(),\n      'Invalid signature of terms and conditions',\n      { expected: environment.account.address, received: verified },\n    );\n  } else {\n    const hash = Utils.hexlify(arrayifiedHash);\n    rawSignature = await environment.api.eth.sign(\n      environment.account.address,\n      hash,\n    );\n  }\n\n  const v = parseInt(rawSignature.substring(66 + 64), 16);\n  return {\n    r: rawSignature.substring(0, 66),\n    s: `0x${rawSignature.substring(66, 66 + 64)}`,\n    v,\n  };\n};\n\nexport default signOlympiadTermsAndConditions;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/olympiad/transactions/signOlympiadTermsAndConditions.js","// @flow\nimport BigNumber from 'bignumber.js';\n\nimport getFundContract from '../../fund/contracts/getFundContract';\nimport getPriceFeedContract from '../../pricefeeds/contracts/getPriceFeedContract';\nimport toDate from '../../utils/generic/toDate';\n\nimport type { Address } from '../../assets/schemas/Address';\nimport type { Environment } from '../../utils/environment/Environment';\nimport type { RequestStatus } from '../constants/requestStatus';\nimport type { RequestType } from '../constants/requestTypes';\n\n/**\n * The participation of an investor in fund\n */\ntype Request = {\n  participant: Address,\n  status: RequestStatus,\n  totalSupply: BigNumber,\n  type: RequestType,\n  timestamp: date,\n  atUpdateId: number,\n  canBeExecutedInMs: number,\n};\n\n/**\n * Get's the last request and its estimated remaining wait time\n */\nconst getLastRequest = async (\n  environment: Environment,\n  { fundAddress },\n): Promise<Request> => {\n  const fundContract = await getFundContract(environment, fundAddress);\n  const priceFeedContract = await getPriceFeedContract(environment);\n\n  const interval = (await priceFeedContract.instance.getInterval.call()).toNumber();\n\n  const totalSupply = await fundContract.instance.totalSupply.call();\n  const lastRequestId = await fundContract.instance.getLastRequestId.call();\n  const [\n    participant,\n    status,\n    type,\n    ,\n    ,\n    ,\n    ,\n    timestamp,\n    atUpdateId,\n  ] = await fundContract.instance.requests.call({}, [lastRequestId]);\n\n  /*\n    // Corresponding code on protocol\n    now >= add(requests[id].timestamp, module.pricefeed.getInterval()) &&\n    module.pricefeed.getLastUpdateId() >= add(requests[id].atUpdateId, 2);\n  */\n\n  const maxRemainingWaitSeconds = totalSupply.eq(0) ? 0 : 2 * interval;\n\n  const canBeExecutedInMs = Math.max(\n    maxRemainingWaitSeconds * 1000 - (new Date() - toDate(timestamp)),\n    0,\n  );\n\n  const request = {\n    id: lastRequestId.toNumber(),\n    participant,\n    status: status.toNumber(),\n    type: type.toNumber(),\n    timestamp: toDate(timestamp),\n    atUpdateId: atUpdateId.toNumber(),\n    canBeExecutedInMs,\n  };\n\n  return request;\n};\n\nexport default getLastRequest;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/participation/calls/getLastRequest.js","module.exports = [{\"constant\":true,\"inputs\":[{\"name\":\"sellAsset\",\"type\":\"address\"},{\"name\":\"buyAsset\",\"type\":\"address\"},{\"name\":\"sellQuantity\",\"type\":\"uint256\"},{\"name\":\"buyQuantity\",\"type\":\"uint256\"}],\"name\":\"getOrderPrice\",\"outputs\":[{\"name\":\"orderPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAssets\",\"type\":\"address[]\"}],\"name\":\"hasRecentPrices\",\"outputs\":[{\"name\":\"areRecent\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"getInvertedPrice\",\"outputs\":[{\"name\":\"isRecent\",\"type\":\"bool\"},{\"name\":\"invertedPrice\",\"type\":\"uint256\"},{\"name\":\"decimal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastUpdateId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"remove\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAssets\",\"type\":\"address[]\"},{\"name\":\"newPrices\",\"type\":\"uint256[]\"}],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"bytes32\"},{\"name\":\"symbol\",\"type\":\"bytes8\"},{\"name\":\"decimal\",\"type\":\"uint256\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ipfsHash\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"bytes32\"},{\"name\":\"breakIn\",\"type\":\"address\"},{\"name\":\"breakOut\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getValidity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VALIDITY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"isRecent\",\"type\":\"bool\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"decimal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"getName\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INTERVAL\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAssets\",\"type\":\"address[]\"}],\"name\":\"getPrices\",\"outputs\":[{\"name\":\"areRecent\",\"type\":\"bool\"},{\"name\":\"prices\",\"type\":\"uint256[]\"},{\"name\":\"decimals\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInterval\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"bytes32\"},{\"name\":\"symbol\",\"type\":\"bytes8\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"updateDescriptiveInformation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"information\",\"outputs\":[{\"name\":\"breakIn\",\"type\":\"address\"},{\"name\":\"breakOut\",\"type\":\"address\"},{\"name\":\"chainId\",\"type\":\"bytes32\"},{\"name\":\"decimal\",\"type\":\"uint256\"},{\"name\":\"exists\",\"type\":\"bool\"},{\"name\":\"ipfsHash\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"bytes32\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"symbol\",\"type\":\"bytes8\"},{\"name\":\"timestamp\",\"type\":\"uint256\"},{\"name\":\"url\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofNewOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofBase\",\"type\":\"address\"},{\"name\":\"ofQuote\",\"type\":\"address\"}],\"name\":\"getReferencePrice\",\"outputs\":[{\"name\":\"isRecent\",\"type\":\"bool\"},{\"name\":\"referencePrice\",\"type\":\"uint256\"},{\"name\":\"decimal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"hasRecentPrice\",\"outputs\":[{\"name\":\"isRecent\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"getSymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"getDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getQuoteAsset\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"sellAsset\",\"type\":\"address\"},{\"name\":\"buyAsset\",\"type\":\"address\"}],\"name\":\"existsPriceOnAssetPair\",\"outputs\":[{\"name\":\"isExistent\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"QUOTE_ASSET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ofQuoteAsset\",\"type\":\"address\"},{\"name\":\"quoteAssetName\",\"type\":\"bytes32\"},{\"name\":\"quoteAssetSymbol\",\"type\":\"bytes8\"},{\"name\":\"quoteAssetDecimals\",\"type\":\"uint256\"},{\"name\":\"quoteAssetUrl\",\"type\":\"string\"},{\"name\":\"quoteAssetIpfsHash\",\"type\":\"string\"},{\"name\":\"quoteAssetChainId\",\"type\":\"bytes32\"},{\"name\":\"quoteAssetBreakIn\",\"type\":\"address\"},{\"name\":\"quoteAssetBreakOut\",\"type\":\"address\"},{\"name\":\"interval\",\"type\":\"uint256\"},{\"name\":\"validity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/pricefeeds/PriceFeed.abi.json\n// module id = 151\n// module chunks = 0","// @flow\nconst requestStatus = {\n  ACTIVE: 0,\n  CANCELLED: 1,\n  EXECUTED: 2,\n};\n\nexport type RequestStatus = $Keys<typeof requestStatus>;\n\nexport default requestStatus;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/participation/constants/requestStatus.js","// @flow\nconst requestTypes = {\n  INVEST: 0,\n  REDEEM: 1,\n  FALLBACK_REDEEM: 2,\n};\n\nexport type RequestType = $Keys<typeof requestTypes>;\n\nexport default requestTypes;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/participation/constants/requestTypes.js","module.exports = [{\"constant\":true,\"inputs\":[{\"name\":\"ofParticipant\",\"type\":\"address\"},{\"name\":\"giveQuantity\",\"type\":\"uint256\"},{\"name\":\"shareQuantity\",\"type\":\"uint256\"}],\"name\":\"isInvestmentPermitted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofParticipant\",\"type\":\"address\"},{\"name\":\"shareQuantity\",\"type\":\"uint256\"},{\"name\":\"receiveQuantity\",\"type\":\"uint256\"}],\"name\":\"isRedemptionPermitted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/compliance/ComplianceInterface.abi.json\n// module id = 154\n// module chunks = 0","// @flow\nimport BigNumber from 'bignumber.js';\n\nimport ensure from '../../utils/generic/ensure';\nimport findEventInLog from '../../utils/ethereum/findEventInLog';\nimport getConfig from '../../version/calls/getConfig';\nimport getFundContract from '../../fund/contracts/getFundContract';\nimport getParticipation from '../../participation/calls/getParticipation';\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport toProcessable from '../../assets/utils/toProcessable';\nimport toReadable from '../../assets/utils/toReadable';\n\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * Execute subscription/redemption request by `id` on fund at `fundAddress`\n * @returns number of allocated shares\n */\nconst executeRequest = async (\n  environment: Environment,\n  { id, fundAddress },\n): Promise<BigNumber> => {\n  const config = await getConfig(environment);\n  const fundContract = await getFundContract(environment, fundAddress);\n  const [\n    participant,\n    ,\n    requestType,\n    ,\n    shareQuantity,\n  ] = await fundContract.instance.requests.call({}, [id]);\n  let executeRequestLogEntry;\n  let receipt;\n\n  /* Pre conditions\n      1/ isShutDown\n      2/ pre_cond(requests[id].status == RequestStatus.active)\n      3/ pre_cond(requests[id].requestType != RequestType.redeem || requests[id].shareQuantity <= balances[requests[id].participant])\n      4/ pre_cond(totalSupply == 0 || now >= add(requests[id].timestamp, mul(uint(2), module.pricefeed.getInterval())))\n  */\n\n  const isShutDown = await fundContract.instance.isShutDown.call();\n  ensure(isShutDown === false, 'Fund is shut down');\n\n  if (requestType.eq(new BigNumber(0))) {\n    receipt = await sendTransaction(\n      fundContract,\n      'executeRequest',\n      [id],\n      environment,\n    );\n    executeRequestLogEntry = findEventInLog('Created', receipt);\n  } else if (requestType.eq(new BigNumber(1))) {\n    const participation = await getParticipation(environment, {\n      fundAddress,\n      investorAddress: participant,\n    });\n    const participantStake = participation.personalStake;\n    ensure(\n      shareQuantity.lte(\n        toProcessable(config, participantStake, config.quoteAssetSymbol),\n      ),\n      'Number of shares requested exceed actual balance',\n    );\n    receipt = await sendTransaction(\n      fundContract,\n      'executeRequest',\n      [id],\n      environment,\n      {},\n    );\n    executeRequestLogEntry = findEventInLog('Annihilated', receipt);\n  }\n\n  return toReadable(\n    config,\n    executeRequestLogEntry.params.shareQuantity.value,\n    config.quoteAssetSymbol,\n  );\n};\n\nexport default executeRequest;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/participation/transactions/executeRequest.js","// @flow\nimport BigNumber from 'bignumber.js';\n\nimport approve from '../../assets/transactions/approve';\nimport ensure from '../../utils/generic/ensure';\nimport findEventInLog from '../../utils/ethereum/findEventInLog';\nimport getAddress from '../../assets/utils/getAddress';\nimport getBalance from '../../assets/calls/getBalance';\nimport getConfig from '../../version/calls/getConfig';\nimport getFundContract from '../../fund/contracts/getFundContract';\nimport getCanonicalPriceFeedContract from '../../pricefeeds/contracts/getCanonicalPriceFeedContract';\nimport isInvestmentRequestPermittedAndAllowed from '../calls/isInvestmentRequestPermittedAndAllowed';\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport toProcessable from '../../assets/utils/toProcessable';\nimport toReadable from '../../assets/utils/toReadable';\nimport toDate from '../../utils/generic/toDate';\n\nimport type { Environment } from '../../utils/environment/Environment';\n\ntype Subscription = {\n  numShares: BigNumber,\n  timestamp: Date,\n  id: number,\n};\n\n/**\n * Subscribe to fund at `fundAddress` by offering `offeredValue` and requesting\n * `numShares` and incentivice execution with `incentiveValue`\n */\nconst invest = async (\n  environment: Environment,\n  { fundAddress, numShares, offeredValue, isNativeAsset = false },\n): Promise<Subscription> => {\n  const config = await getConfig(environment);\n  const who = environment.account.address;\n  const fundContract = await getFundContract(environment, fundAddress);\n\n  const symbol = isNativeAsset ? config.nativeAssetSymbol : 'MLN-T';\n\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n  const balance = await getBalance(environment, {\n    tokenSymbol: symbol,\n    ofAddress: who,\n  });\n\n  const isShutDown = await fundContract.instance.isShutDown.call();\n  ensure(isShutDown === false, 'Fund is shut down');\n  await isInvestmentRequestPermittedAndAllowed(environment, {\n    fundContract,\n    asset: getAddress(config, symbol),\n  });\n\n  ensure(\n    balance.gte(offeredValue),\n    `Insufficent ${symbol}. Need ${offeredValue.toString()} have: ${balance.toString()}`,\n  );\n\n  const hasRecentPrice = await canonicalPriceFeedContract.instance.hasRecentPrice.call(\n    {},\n    [getAddress(config, symbol)],\n  );\n  ensure(\n    hasRecentPrice,\n    'Pricefeed data is not valid at the moment. Please try again later.',\n  );\n\n  await approve(environment, {\n    symbol,\n    spender: fundAddress,\n    quantity: offeredValue,\n  });\n\n  const args = [\n    toProcessable(config, offeredValue, symbol),\n    toProcessable(config, numShares, symbol),\n    getAddress(config, symbol),\n  ];\n\n  const receipt = await sendTransaction(\n    fundContract,\n    'requestInvestment',\n    args,\n    environment,\n  );\n  const investRequestLogEntry = findEventInLog('RequestUpdated', receipt);\n  const request = await fundContract.instance.requests.call({}, [\n    investRequestLogEntry.params.id.value,\n  ]);\n  const [, , , , numSharesCreated, , , timestamp] = request;\n\n  return {\n    id: investRequestLogEntry.params.id.value,\n    numShares: toReadable(config, numSharesCreated, symbol),\n    timestamp: toDate(timestamp),\n  };\n};\n\nexport default invest;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/participation/transactions/invest.js","// @flow\nimport ensure from '../../utils/generic/ensure';\nimport getComplianceContract from '../contracts/getComplianceContract';\nimport sendTransaction from '../../utils/parity/sendTransaction';\n\nimport type { Address } from '../../assets/schemas/Address';\n\n/**\n * List an investor as eligible\n */\nconst list = async (wallet, subscriber: Address): Promise<boolean> => {\n  const participationContract = await getComplianceContract();\n  const isListedBefore = await participationContract.avatar(subscriber);\n  if (!isListedBefore) {\n    const listReceipt = await sendTransaction(\n      participationContract,\n      'list',\n      [subscriber],\n      wallet,\n    );\n    const isListed = await participationContract.instance.avatar.call({}, [\n      subscriber,\n    ]);\n    ensure(isListed, 'Listing failed', listReceipt);\n  }\n\n  return true;\n};\n\nexport default list;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/participation/transactions/list.js","// @flow\nimport BigNumber from 'bignumber.js';\n\nimport ensure from '../../utils/generic/ensure';\nimport findEventInLog from '../../utils/ethereum/findEventInLog';\nimport getAddress from '../../assets/utils/getAddress';\nimport getConfig from '../../version/calls/getConfig';\nimport getFundContract from '../../fund/contracts/getFundContract';\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport toProcessable from '../../assets/utils/toProcessable';\nimport toReadable from '../../assets/utils/toReadable';\nimport toDate from '../../utils/generic/toDate';\n\nimport type { Environment } from '../../utils/environment/Environment';\n\ntype Redemption = {\n  numShares: BigNumber,\n  atTimeStamp: Date,\n  id: number,\n};\n\n/**\n * Redeem `numShares` of fund at `fundAddress` by requesting `requestedValue`\n * and incentivice execution with `incentiveValue`\n */\nconst redeem = async (\n  environment: Environment,\n  { fundAddress, numShares, requestedValue, isNativeAsset = false },\n): Promise<Redemption> => {\n  const config = await getConfig(environment);\n  const fundContract = await getFundContract(environment, fundAddress);\n\n  const symbol = isNativeAsset ? config.nativeAssetSymbol : 'MLN-T';\n\n  const isShutDown = await fundContract.instance.isShutDown.call();\n  ensure(isShutDown === false, 'Fund is shut down');\n\n  const args = [\n    toProcessable(config, numShares, symbol),\n    toProcessable(config, requestedValue, symbol),\n    getAddress(config, symbol),\n  ];\n\n  const receipt = await sendTransaction(\n    fundContract,\n    'requestRedemption',\n    args,\n    environment,\n    {},\n  );\n  const redeemRequestLogEntry = findEventInLog('RequestUpdated', receipt);\n  const request = await fundContract.instance.requests.call({}, [\n    redeemRequestLogEntry.params.id.value,\n  ]);\n  const [, , , , shareQuantity, , , timestamp] = request;\n\n  ensure(\n    shareQuantity.eq(toProcessable(config, numShares, symbol)),\n    'requested numShares is not equal to retrieved quantity',\n    redeemRequestLogEntry,\n  );\n\n  return {\n    id: redeemRequestLogEntry.params.id.value,\n    numShares: toReadable(config, shareQuantity, symbol),\n    timestamp: toDate(timestamp),\n  };\n};\n\nexport default redeem;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/participation/transactions/redeem.js","// @flow\nimport ensure from '../../utils/generic/ensure';\nimport findEventInLog from '../../utils/ethereum/findEventInLog';\nimport getConfig from '../../version/calls/getConfig';\nimport getFundContract from '../../fund/contracts/getFundContract';\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport toProcessable from '../../assets/utils/toProcessable';\nimport toReadable from '../../assets/utils/toReadable';\nimport getParticipation from '../calls/getParticipation';\nimport toDate from '../../utils/generic/toDate';\n\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * Redeem `numShares` of fund at `fundAddress` by requesting `redeemAllOwnedAssets`\n */\nconst redeemAllOwnedAssets = async (\n  environment: Environment,\n  { fundAddress, numShares },\n): Promise<Redemption> => {\n  const config = await getConfig(environment);\n  const fundContract = await getFundContract(environment, fundAddress);\n\n  const participation = await getParticipation(environment, {\n    fundAddress,\n    investorAddress: environment.account.address,\n  });\n\n  ensure(\n    participation.personalStake.gte(numShares),\n    `You cannot redeem more shares than you have. You own ${\n      participation.personalStake\n    }`,\n  );\n\n  const args = [toProcessable(config, numShares, config.quoteAssetSymbol)];\n  const receipt = await sendTransaction(\n    fundContract,\n    'redeemAllOwnedAssets',\n    args,\n    environment,\n    {},\n  );\n  const redeemAllOwnedAssetsLogEntry = findEventInLog('Redeemed', receipt);\n  const shareQuantity = redeemAllOwnedAssetsLogEntry.params.shareQuantity.value;\n\n  ensure(\n    shareQuantity.eq(toProcessable(config, numShares, config.quoteAssetSymbol)),\n    'requested numShares is not equal to retrieved quantity',\n    redeemAllOwnedAssetsLogEntry,\n  );\n\n  return {\n    numShares: toReadable(config, shareQuantity, config.quoteAssetSymbol),\n    timestamp: toDate(redeemAllOwnedAssetsLogEntry.params.atTimestamp.value),\n  };\n};\n\nexport default redeemAllOwnedAssets;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/participation/transactions/redeemAllOwnedAssets.js","// @flow\nimport getCanonicalPriceFeedContract from '../contracts/getCanonicalPriceFeedContract';\n\nconst getNextEpochTime = async (environment): Promise<any> => {\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n\n  return canonicalPriceFeedContract.instance.getNextEpochTime.call({}, []);\n};\n\nexport default getNextEpochTime;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/calls/getNextEpochTime.js","// @flow\nimport getCanonicalPriceFeedContract from '../contracts/getCanonicalPriceFeedContract';\n\nconst getOperators = async (environment): Promise<any> => {\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n\n  return canonicalPriceFeedContract.instance.getOperators.call({}, []);\n};\n\nexport default getOperators;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/calls/getOperators.js","// @flow\nimport getStakingPriceFeedContract from '../contracts/getStakingPriceFeedContract';\nimport getConfig from '../../version/calls/getConfig';\nimport getSymbol from '../../assets/utils/getSymbol';\nimport toReadable from '../../assets/utils/toReadable';\n\nconst getPriceByPriceFeed = async (\n  environment,\n  { priceFeed, tokenAddr },\n): Promise<any> => {\n  const config = await getConfig(environment);\n\n  const stakingPricefeedContract = await getStakingPriceFeedContract(\n    environment,\n    priceFeed,\n  );\n\n  const [price, ,] = await stakingPricefeedContract.instance.getPrice.call({}, [\n    tokenAddr,\n  ]);\n\n  const symbol = await getSymbol(config, tokenAddr);\n  return toReadable(config, price, symbol);\n};\n\nexport default getPriceByPriceFeed;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/calls/getPriceByPriceFeed.js","module.exports = [{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastUpdateId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ofAssets\",\"type\":\"address[]\"},{\"name\":\"newPrices\",\"type\":\"uint256[]\"}],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAsset\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"superFeed\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofAssets\",\"type\":\"address[]\"}],\"name\":\"getPrices\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"assetsToPrices\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"updateId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getQuoteAsset\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"depositStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"QUOTE_ASSET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ofRegistrar\",\"type\":\"address\"},{\"name\":\"ofQuoteAsset\",\"type\":\"address\"},{\"name\":\"ofSuperFeed\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/pricefeeds/StakingPriceFeed.abi.json\n// module id = 163\n// module chunks = 0","// @flow\nimport getCanonicalPriceFeedContract from '../contracts/getCanonicalPriceFeedContract';\n\nconst getPriceFeedsByOwner = async (environment, address): Promise<any> => {\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n\n  return canonicalPriceFeedContract.instance.getPriceFeedsByOwner.call({}, [\n    address,\n  ]);\n};\n\nexport default getPriceFeedsByOwner;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/calls/getPriceFeedsByOwner.js","// @flow\nimport getCanonicalPriceFeedContract from '../contracts/getCanonicalPriceFeedContract';\n\nconst getRegisteredAssets = async (environment): Promise<any> => {\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n\n  return canonicalPriceFeedContract.instance.getRegisteredAssets.call({}, []);\n};\n\nexport default getRegisteredAssets;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/calls/getRegisteredAssets.js","// @flow\nimport getCanonicalPriceFeedContract from '../contracts/getCanonicalPriceFeedContract';\n\nconst getStakersAndAmounts = async (environment): Promise<any> => {\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n\n  return canonicalPriceFeedContract.instance.getStakersAndAmounts.call({}, []);\n};\n\nexport default getStakersAndAmounts;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/calls/getStakersAndAmounts.js","// @flow\nimport getStakingPriceFeedContract from '../contracts/getStakingPriceFeedContract';\n\n/**\n * Stake `quantity` on staking pricefeed contract\n */\nconst getStakingPriceFeedOwner = async (environment, address): Promise<any> => {\n  const stakingPricefeedContract = await getStakingPriceFeedContract(\n    environment,\n    address,\n  );\n\n  return stakingPricefeedContract.instance.owner.call({}, []);\n};\n\nexport default getStakingPriceFeedOwner;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/calls/getStakingPriceFeedOwner.js","// @flow\nimport getCanonicalPriceFeedContract from '../contracts/getCanonicalPriceFeedContract';\n\nconst getStakingToken = async (environment): Promise<any> => {\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n\n  return canonicalPriceFeedContract.instance.stakingToken.call({}, []);\n};\n\nexport default getStakingToken;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/calls/getStakingToken.js","// @flow\nimport getCanonicalPriceFeedContract from '../contracts/getCanonicalPriceFeedContract';\n\nconst getTotalStaked = async (environment): Promise<any> => {\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n\n  return canonicalPriceFeedContract.instance.totalStaked.call({}, []);\n};\n\nexport default getTotalStaked;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/calls/getTotalStaked.js","// @flow\nimport getCanonicalPriceFeedContract from '../contracts/getCanonicalPriceFeedContract';\n\nconst getTotalStakedByAddr = async (environment, { addr }): Promise<any> => {\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n\n  return canonicalPriceFeedContract.instance.totalStakedFor.call({}, [addr]);\n};\n\nexport default getTotalStakedByAddr;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/calls/getTotalStakedByAddr.js","// @flow\nimport getCanonicalPriceFeedContract from '../contracts/getCanonicalPriceFeedContract';\n\nconst getUpdateInterval = async (environment): Promise<any> => {\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n\n  return canonicalPriceFeedContract.instance.INTERVAL.call({}, []);\n};\n\nexport default getUpdateInterval;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/calls/getUpdateInterval.js","import getCanonicalPriceFeedContract from '../contracts/getCanonicalPriceFeedContract';\n\n/**\n * @deprecated\n */\nconst awaitDataFeedUpdates = async (environment, howMany = 1) => {\n  // console.warn(\"awaitDataFeedUpdates is deprecated. Use melonTracker instead.\");\n\n  const priceFeedContract = await getCanonicalPriceFeedContract(environment);\n  const entryTime = new Date();\n  let n = 0;\n  let blockDifference;\n  let lastBlockTime;\n  return new Promise((resolve, reject) => {\n    priceFeedContract.instance.PriceUpdated.subscribe({}, (error, result) => {\n      n += 1;\n      environment.api.eth\n        .getBlockByNumber(result[0].blockNumber)\n        .then(lastBlock => {\n          lastBlockTime = lastBlock.timestamp;\n          blockDifference =\n            (lastBlockTime.getTime() - entryTime.getTime()) / 1000;\n          if (n >= howMany && blockDifference > 120) {\n            if (error) reject(error);\n            resolve(true);\n          }\n        });\n    });\n  });\n};\n\nexport default awaitDataFeedUpdates;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/events/awaitDataFeedUpdates.js","// @flow\nimport getCanonicalPriceFeedContract from '../../contracts/getCanonicalPriceFeedContract';\nimport sendTransaction from '../../../utils/parity/sendTransaction';\n\n/**\n * Update canonical pricefeed by collecting median values of all pricefeed operators for each price.\n * This function can only be called by the technical council multisig\n */\nconst collectAndUpdate = async (environment, { assets }): Promise<any> => {\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n\n  const receipt = await sendTransaction(\n    canonicalPriceFeedContract,\n    'collectAndUpdate',\n    [assets],\n    environment,\n  );\n\n  return receipt;\n};\n\nexport default collectAndUpdate;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/transactions/multisig/collectAndUpdate.js","// @flow\nimport getStakingPriceFeedContract from '../../contracts/getStakingPriceFeedContract';\nimport sendTransaction from '../../../utils/parity/sendTransaction';\nimport getSymbol from '../../../assets/utils/getSymbol';\nimport approve from '../../../assets/transactions/approve';\nimport getConfig from '../../../version/calls/getConfig';\nimport toProcessable from '../../../assets/utils/toProcessable';\n\n/**\n * Stake `quantity` on staking pricefeed contract\n */\nconst depositStake = async (\n  environment,\n  { address, quantity },\n): Promise<any> => {\n  const stakingPricefeedContract = await getStakingPriceFeedContract(\n    environment,\n    address,\n  );\n\n  const config = await getConfig(environment);\n\n  const stakingTokenAddress = await stakingPricefeedContract.instance.stakingToken.call();\n  const stakingTokenSymbol = getSymbol(config, stakingTokenAddress);\n\n  const opts = {\n    symbol: stakingTokenSymbol,\n    spender: address,\n    quantity: toProcessable(config, quantity, stakingTokenSymbol),\n  };\n\n  await approve(environment, opts);\n\n  const receipt = await sendTransaction(\n    stakingPricefeedContract,\n    'depositStake',\n    [toProcessable(config, quantity, stakingTokenSymbol), ''],\n    environment,\n  );\n\n  return receipt;\n};\n\nexport default depositStake;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/transactions/operator/depositStake.js","// @flow\nimport getCanonicalPriceFeedContract from '../../contracts/getCanonicalPriceFeedContract';\nimport sendTransaction from '../../../utils/parity/sendTransaction';\n\nconst setupPriceFeed = async (environment): Promise<any> => {\n  const canonicalPriceFeedContract = await getCanonicalPriceFeedContract(\n    environment,\n  );\n\n  const receipt = await sendTransaction(\n    canonicalPriceFeedContract,\n    'setupStakingPriceFeed',\n    [],\n    environment,\n  );\n\n  const setupLog = receipt.logs.find(\n    e => e.topics[0] === environment.api.util.sha3('SetupPriceFeed(address)'),\n  );\n\n  const stakingFeedAddress = environment.api.util.toChecksumAddress(\n    `0x${setupLog.data.slice(-40)}`,\n  );\n  return stakingFeedAddress;\n};\n\nexport default setupPriceFeed;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/transactions/operator/setupPriceFeed.js","// @flow\nimport getStakingPriceFeedContract from '../../contracts/getStakingPriceFeedContract';\nimport sendTransaction from '../../../utils/parity/sendTransaction';\n\n/**\n * Update prices with `newPrices` array for the `assets` array.\n * This function can be called by the owner of the pricefeed.\n */\nconst updatePriceFeed = async (\n  environment,\n  { address, assets, newPrices },\n): Promise<any> => {\n  const stakingPriceFeedContract = await getStakingPriceFeedContract(\n    environment,\n    address,\n  );\n\n  const receipt = await sendTransaction(\n    stakingPriceFeedContract,\n    'update',\n    [assets, newPrices],\n    environment,\n  );\n\n  return receipt;\n};\n\nexport default updatePriceFeed;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/transactions/operator/updatePriceFeed.js","// @flow\nimport getStakingPriceFeedContract from '../../contracts/getStakingPriceFeedContract';\nimport sendTransaction from '../../../utils/parity/sendTransaction';\nimport toProcessable from '../../../assets/utils/toProcessable';\nimport getConfig from '../../../version/calls/getConfig';\nimport getSymbol from '../../../assets/utils/getSymbol';\n\n/**\n * Unstake `amount` on staking pricefeed contract\n */\nconst withdrawStake = async (\n  environment,\n  { address, quantity },\n): Promise<any> => {\n  const stakingPriceFeedContract = await getStakingPriceFeedContract(\n    environment,\n    address,\n  );\n\n  const config = await getConfig(environment);\n\n  const stakingTokenAddress = await stakingPriceFeedContract.instance.stakingToken.call();\n  const stakingTokenSymbol = getSymbol(config, stakingTokenAddress);\n\n  const receipt = await sendTransaction(\n    stakingPriceFeedContract,\n    'withdrawStake',\n    [toProcessable(config, quantity, stakingTokenSymbol), ''],\n    environment,\n  );\n\n  return receipt;\n};\n\nexport default withdrawStake;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/pricefeeds/transactions/operator/withdrawStake.js","import providers from '../constants/providers';\n\nconst isExternalSigner = environment =>\n  environment.providerType === providers.INJECTED;\n\nexport default isExternalSigner;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/environment/isExternalSigner.js","module.exports = require(\"@babel/runtime/core-js/object/values\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/core-js/object/values\"\n// module id = 180\n// module chunks = 0","module.exports = require(\"@babel/runtime/helpers/typeof\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/helpers/typeof\"\n// module id = 181\n// module chunks = 0","import { environment } from './getEnvironment';\nimport isValidEnvironment from './isValidEnvironment';\nimport ensure from '../generic/ensure';\n\nconst setEnvironment = newEnvironment => {\n  const environmentCandidate = { ...environment, ...newEnvironment };\n  ensure(isValidEnvironment(environmentCandidate), 'Invalid environment');\n\n  Object.assign(environment, environmentCandidate);\n};\n\nexport default setEnvironment;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/environment/setEnvironment.js","// @flow\n// import { path } from 'ramda';\nimport SolidityEvent from 'web3/lib/web3/event';\n\nimport type { Address } from '../../assets/schemas/Address';\n\n/**\n * Shape of a JSON file generated by truffle\n */\ntype TruffleJSON = {\n  abi: any,\n};\n\ntype EventDefinition = {\n  name: string,\n  address: Address,\n  hash: string,\n  onEvent: Function,\n  abi: any,\n};\n\n/**\n * Extract event definitions from truffle `json` and mixin `onEventMap`:\n * @example onEventMap = { 'OrderUpdate': doSomething };\n * // will add doSomething to the generated event definition\n */\nconst extractEventDefinitions = ({\n  json,\n  // TODO: Reactivate this\n  // address = path(['networks', setup.networkId, 'address'], json),\n  onEventMap = {},\n}: {\n  json: TruffleJSON,\n  address: Address,\n  onEventMap: any,\n}): Array<EventDefinition> =>\n  json.abi\n    .filter(i => i.type === 'event')\n    .map(i => ({\n      abi: i,\n      decoder: new SolidityEvent(null, i, null),\n    }))\n    .map(({ abi, decoder }) => ({\n      name: abi.name,\n      // TODO: Reactivate this\n      // address,\n      hash: `0x${decoder.signature()}`,\n      onEvent: onEventMap[abi.name],\n      abi,\n    }));\n\nexport default extractEventDefinitions;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/ethereum/extractEventDefinitions.js","import getAccountAddress from '../environment/getAccountAddress';\nimport getBalance from '../../assets/calls/getBalance';\nimport getConfig from '../../version/calls/getConfig';\nimport hasRecentPrice from '../../pricefeeds/calls/hasRecentPrice';\nimport resolvePromiseObject from '../generic/resolvePromiseObject';\nimport toReadable from '../../assets/utils/toReadable';\n\nconst onBlock = async environment => {\n  const config = await getConfig(environment);\n  const isDataValid = await hasRecentPrice(environment);\n  const accountAddress = getAccountAddress(environment);\n\n  const info = await resolvePromiseObject({\n    syncing: environment.api.eth\n      .syncing()\n      .then(syncing => (syncing ? !!syncing.result : syncing)),\n    isDataValid,\n  });\n\n  const accountInfo = accountAddress\n    ? await resolvePromiseObject({\n        nativeBalance: environment.api.eth\n          .getBalance(accountAddress)\n          .then(balance =>\n            toReadable(config, balance, config.nativeAssetSymbol),\n          ),\n        quoteBalance: getBalance(environment, {\n          tokenSymbol: config.quoteAssetSymbol,\n          ofAddress: accountAddress,\n        }),\n      })\n    : {};\n\n  return {\n    ...info,\n    ...accountInfo,\n  };\n};\n\nexport default onBlock;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/ethereum/onBlock.js","// @flow\nimport SolidityEvent from 'web3/lib/web3/event';\n\n/**\n * Parse a raw `event` from the blockchain with the given `abi`\n */\nconst parseEvent = (event: any, abi: any): any => {\n  const decoder = new SolidityEvent(null, abi, null);\n  return decoder.decode(event).args;\n};\n\nexport default parseEvent;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/ethereum/parseEvent.js","import Api from '@parity/api';\nimport BigNumber from 'bignumber.js';\n\n// This function is taken from parity/js-api. It is included inside the contract object so that it does not work with user transactions\nconst waitForTransaction = async (api, txhash) => {\n  return api.pollMethod('eth_getTransactionReceipt', txhash, receipt => {\n    if (!receipt || !receipt.blockNumber || receipt.blockNumber.eq(0)) {\n      return false;\n    }\n\n    return true;\n  });\n};\n\nconst sendEther = async (environment, { to, amount, opt }) => {\n  const nonce = environment.account.sign\n    ? (await environment.api.eth.getTransactionCount(\n        environment.account.address,\n      )).toNumber()\n    : undefined;\n\n  if (amount == undefined) {\n    throw Error('Amount not found');\n  }\n\n  if (to == undefined) {\n    throw Error('To address not found');\n  }\n\n  // Prepare raw transaction\n  const rawTransaction = {\n    from: environment.account.address,\n    to: to,\n    gasPrice: 60000000000,\n    value: '0x' + new BigNumber(amount).toString(16),\n    ...opt,\n  };\n\n  // HACK: If external parity signer, no need to set the nonce, Parity does it. If in-browser wallet, we need to explicitly set the nonce.\n  if (nonce) rawTransaction.nonce = nonce;\n\n  // Estimate and adjust gas with gasBoost\n  const gasKeyName = environment.account.sign ? 'gasLimit' : 'gas';\n\n  const gasEstimation = await environment.api.eth.estimateGas(rawTransaction);\n  rawTransaction[gasKeyName] = '0x' + gasEstimation.toString(16);\n\n  let transactionHash;\n\n  if (environment.account.sign) {\n    // Sign transaction object with Wallet instance\n    const signedTransaction = environment.account.sign(rawTransaction);\n\n    // Send raw signed transaction and wait for receipt\n    transactionHash = await environment.api.eth.sendRawTransaction(\n      signedTransaction,\n    );\n  } else {\n    // Send raw transaction object and wait for receipt\n    transactionHash = await environment.api.eth.sendTransaction(rawTransaction);\n  }\n\n  let res = await waitForTransaction(environment.api, transactionHash);\n  if (res == false) {\n    throw Error(`It could not get transaction receipt`);\n  }\n};\n\nexport default sendEther;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/ethereum/sendEther.js","const getKeyByValue = (obj, value) =>\n  Object.keys(obj).find(key => obj[key] === value);\n\nexport default getKeyByValue;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/generic/getKeyByValue.js","import Api from '@parity/api';\n\nconst getPastEvents = async (\n  environment,\n  { contract, address, eventSignature, fromBlock, toBlock, paramName },\n) => {\n  const hashed = Api.util.sha3(eventSignature);\n\n  const filter = {\n    fromBlock,\n    toBlock,\n    address,\n    topics: [hashed],\n  };\n\n  const pastEvents = await environment.api.eth.getLogs(filter);\n\n  const allReceipts = await Promise.all(\n    pastEvents.map(async event =>\n      environment.api.eth.getTransactionReceipt(event.transactionHash),\n    ),\n  );\n\n  return allReceipts.map(receipt => {\n    const decodedLogs = contract.parseEventLogs(receipt.logs);\n    return `${decodedLogs[0].event} ; ${\n      decodedLogs[0].params[paramName].value\n    }`;\n  });\n};\n\nexport default getPastEvents;\n\n// just decode data\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/getPastEvents.js","import Api from '@parity/api';\nimport protocolPackage from '@melonproject/smart-contracts/package.json';\nimport pkg from '../../../package.json';\nimport providers from '../constants/providers';\nimport ensure from '../generic/ensure';\n\nconst checkHttpProvider = async (url, connectionTimeout) => {\n  try {\n    const provider = new Api.Provider.Http(url, connectionTimeout);\n    const api = new Api(provider);\n    // HACK: Parity does not properly return api.isConnected. This is always true.\n    // So we need to explicitly make a call that fails for a unreachable node. :(\n    await api.net.version();\n    return { api, provider };\n  } catch (e) {\n    console.warn('Error with provider at', url, e);\n    return false;\n  }\n};\n\nconst findHttpProvider = (rpcEndpointList, connectionTimeout) =>\n  rpcEndpointList.reduce(async (lastPromise, { type, url }) => {\n    const lastType = await lastPromise;\n\n    if (lastType) return lastType;\n\n    const candidate = await checkHttpProvider(url, connectionTimeout);\n\n    return candidate ? { ...candidate, providerType: type } : false;\n  }, new Promise(resolve => resolve(false)));\n\n/**\n * Finds a parity provider according to the detected environment:\n * - Browser with Parity Dapp / Parity Signer Extension: Secure\n * - Browser without: Unsecure with in-browser signer (ethers) --> Shall not\n *   connect to local node which chould be connected to main net.\n * - Node.js environment: Can connect to localhost or kovan as fallback.\n *   (Maybe also mainnode in the future)\n *\n * @returns Object {\n *  api: [Parity API instance],\n *  provider: [Parity Provider Instance],\n *  providerType: [f.e. providers.Parity],\n * }\n */\nconst getParityProvider = async connectionTimeout => {\n  ensure(\n    protocolPackage.version ===\n      pkg.dependencies['@melonproject/smart-contracts'],\n    'Fatal: Inconsistency: Protocol version mismatch',\n  );\n\n  const injectedProvider =\n    global.ethereum && global.ethereum.isParity\n      ? global.ethereum\n      : global.ethereumProvider;\n\n  const rpcEndpointList = [\n    {\n      type: providers.HOSTED,\n      url: 'https://kovan.melonport.com',\n    },\n  ];\n\n  if (process && process.title.includes('node')) {\n    rpcEndpointList.unshift({\n      type: providers.LOCAL,\n      url: 'http://localhost:8545',\n    });\n  }\n\n  const provider = injectedProvider\n    ? {\n        provider: injectedProvider,\n        api: new Api(injectedProvider),\n        providerType: providers.INJECTED,\n      }\n    : findHttpProvider(rpcEndpointList, connectionTimeout);\n\n  return provider || { providerType: providers.NONE };\n};\n\nexport default getParityProvider;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/parity/getParityProvider.js","module.exports = {\"name\":\"@melonproject/smart-contracts\",\"version\":\"0.8.0-alpha.17\",\"description\":\"Technology Regulated Investment Funds\",\"directories\":{\"test\":\"tests\"},\"scripts\":{\"start\":\"babel-node utils/main.js\",\"lint\":\"npm run lint:eslint && npm run lint:solium\",\"lint:solium\":\"solium --dir .\",\"lint:eslint\":\"eslint .\",\"oyente\":\"oyente -s src/Fund.sol\",\"devchain\":\"bash utils/chain/devchain.sh\",\"test\":\"npm run test:ds-test && npm run test:ava\",\"test:ava\":\"CHAIN_ENV=development ava --serial --verbose\",\"test:unit\":\"CHAIN_ENV=development ava --files tests/unit/**\",\"test:ds-test\":\"export DAPP_SKIP_BUILD=1 DAPP_NO_ETHRUN=1 && dapp test\",\"compile\":\"export SOLC_FLAGS='--optimize --optimize-runs=0' && make all\",\"deploy\":\"CHAIN_ENV=development babel-node utils/deploy/contracts.js\",\"deploy:kovan\":\"CHAIN_ENV=kovan babel-node utils/deploy/contracts.js\",\"deploy:live\":\"CHAIN_ENV=live babel-node utils/deploy/contracts.js\",\"docs:server\":\"cd scripts/doxity && ./node_modules/.bin/gatsby develop\",\"docs:build\":\"doxity build\",\"babel-build\":\"babel utils/lib/ --out-dir utils/build\",\"append-json\":\"find out/ -name '*.abi' | xargs -t -I{} cp {} {}.json\",\"prepublishOnly\":\"npm run babel-build && npm run append-json\",\"concatenate-contracts\":\"bash ./utils/etherscan/concatenateContracts.sh\"},\"files\":[\"out\",\"utils/info\",\"utils/config\",\"utils/build\",\"addressBook.json\"],\"publishConfig\":{\"access\":\"public\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/melonproject/protocol.git\"},\"keywords\":[\"Ethereum\",\"Protocol\",\"Melon\"],\"author\":\"“Melonport AG <“team@melonport.com”>\",\"license\":\"GPL-3.0\",\"bugs\":{\"url\":\"https://github.com/melonproject/protocol/issues\"},\"homepage\":\"https://github.com/melonproject/protocol#readme\",\"devDependencies\":{\"@digix/doxity\":\"^0.5.2\",\"ava\":\"^0.24.0\",\"babel-cli\":\"^6.26.0\",\"babel-core\":\"^6.26.0\",\"babel-eslint\":\"^7.2.3\",\"babel-plugin-transform-runtime\":\"^6.23.0\",\"babel-preset-es2015\":\"^6.24.1\",\"babel-preset-flow\":\"^6.23.0\",\"babel-preset-stage-0\":\"^6.24.1\",\"babel-runtime\":\"^6.26.0\",\"eslint\":\"^4.15.0\",\"eslint-config-airbnb\":\"^16.1.0\",\"eslint-config-prettier\":\"^2.7.0\",\"eslint-plugin-ava\":\"^4.4.0\",\"eslint-plugin-flowtype\":\"^2.39.1\",\"eslint-plugin-import\":\"^2.8.0\",\"eslint-plugin-jsx-a11y\":\"^6.0.3\",\"eslint-plugin-react\":\"^7.5.1\",\"flow-bin\":\"^0.63.1\",\"prettier-eslint\":\"^8.2.2\",\"solium\":\"^1.1.0\"},\"dependencies\":{\"0x.js\":\"^0.35.0\",\"@parity/api\":\"^2.1.20\",\"bignumber.js\":\"^4.1.0\",\"ethereumjs-testrpc\":\"^4.1.3\",\"request-promise\":\"^4.2.2\"},\"ava\":{\"files\":[\"tests/integration/fundShares.js\",\"tests/integration/fundTrading.js\",\"tests/integration/competitionRegistration.js\",\"tests/integration/competitionPayout.js\",\"tests/integration/centralizedExchange.js\",\"tests/integration/simpleMarketWithApprove.js\",\"tests/integration/redeemMaliciousAsset.js\",\"tests/integration/0xTrading.js\",\"tests/integration/tradingAlternativeToken.js\",\"tests/unit/pricefeed/priceFeed.js\",\"tests/unit/pricefeed/canonicalPriceFeed.js\",\"tests/unit/competitions/registration.js\",\"tests/unit/competitions/redeem.js\",\"tests/unit/competitions/version.js\",\"tests/unit/competitions/whitelist.js\",\"tests/unit/compliance/noCompliance.js\",\"tests/unit/compliance/onlyManager.js\",\"tests/unit/compliance/picopsCompliance.js\",\"tests/unit/governance/governance.js\",\"tests/unit/modules/moduleRegistrar.js\",\"tests/unit/riskmgmt/rmMakeOrders.js\",\"tests/unit/version/version.js\",\"tests/unit/fundRanking.js\"],\"tap\":true,\"babel\":\"inherit\",\"require\":[\"babel-register\"]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/package.json\n// module id = 190\n// module chunks = 0","module.exports = {\"name\":\"@melonproject/melon.js\",\"version\":\"0.8.1\",\"description\":\"Reusable JS API to query/interact with the Melon protocol\",\"main\":\"build/index.js\",\"esnext\":\"lib/index.js\",\"directories\":{\"lib\":\"./lib\",\"doc\":\"./docs\",\"test\":\"./tests\"},\"sign-git-tag\":true,\"publishConfig\":{\"access\":\"public\"},\"engines\":{\"node\":\"^8.0.0\",\"npm\":\"^5.0.0\"},\"scripts\":{\"babel:watch\":\"babel lib -w -d build\",\"babel\":\"babel lib -d build\",\"build\":\"yarn walklib && yarn babel\",\"deploy:alpha\":\"yarn build && npm version prerelease --git-tag-version false && npm publish --tag alpha \",\"deploy\":\"yarn build && npm version patch && npm publish\",\"docs\":\"documentation build lib/** -f html -o docs --sort-order alpha\",\"flow\":\"flow\",\"format\":\"prettier --write \\\"lib/**/*.js\\\" && prettier --write \\\"tests/**/*.js\\\"\",\"postversion\":\"git push && git push --tags\",\"precommit\":\"lint-staged\",\"pretest\":\"yarn build\",\"test:scratchpad\":\"babel-node tests/scratchpad/run\",\"test:integration\":\"babel-node tests/integration/run\",\"test\":\"yarn test:integration && yarn test:scratchpad\",\"walklib\":\"babel-node ./scripts/walkLib.js\"},\"lint-staged\":{\"*.js\":[\"yarn format\",\"git add\"]},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/melonproject/melon.js.git\"},\"keywords\":[\"melon\",\"melonproject\",\"javascript\",\"ethereum\",\"api\"],\"author\":\"Simon Emanuel Schmid <simon@melonport.com>\",\"license\":\"GPL-3.0\",\"bugs\":{\"url\":\"https://github.com/melonproject/melon.js/issues\"},\"homepage\":\"https://github.com/melonproject/melon.js#readme\",\"devDependencies\":{\"@babel/cli\":\"7.0.0-beta.42\",\"@babel/core\":\"7.0.0-beta.42\",\"@babel/node\":\"7.0.0-beta.42\",\"@babel/plugin-proposal-class-properties\":\"7.0.0-beta.42\",\"@babel/plugin-proposal-object-rest-spread\":\"7.0.0-beta.42\",\"@babel/preset-env\":\"7.0.0-beta.42\",\"@babel/preset-flow\":\"7.0.0-beta.42\",\"@babel/runtime\":\"7.0.0-beta.42\",\"documentation\":\"^5.3.3\",\"flow-bin\":\"^0.66.0\",\"husky\":\"^0.14.3\",\"jasmine\":\"^2.7.0\",\"jest\":\"^22.4.3\",\"lint-staged\":\"^6.0.0\",\"prettier\":\"^1.11.1\",\"walk\":\"^2.3.9\"},\"dependencies\":{\"0x.js\":\"^0.35.0\",\"@babel/runtime\":\"7.0.0-beta.42\",\"@melonproject/smart-contracts\":\"0.8.0-alpha.17\",\"@parity/api\":\"^2.1.5\",\"bignumber.js\":\"4.1.0\",\"bip39\":\"^2.4.0\",\"debug\":\"2.6.9\",\"ethers-utils\":\"^2.1.11\",\"ethers-wallet\":\"^2.1.8\",\"ramda\":\"^0.25.0\",\"web3\":\"^0.20.4\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../melon.js/package.json\n// module id = 191\n// module chunks = 0","import Wallet from 'ethers-wallet';\nimport bip39 from 'bip39';\n\nconst createWallet = () => {\n  const mnemonic = bip39.generateMnemonic();\n  return new Wallet.Wallet.fromMnemonic(mnemonic); // eslint-disable-line new-cap\n};\n\nexport default createWallet;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/wallet/createWallet.js","module.exports = require(\"bip39\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bip39\"\n// module id = 193\n// module chunks = 0","import Wallet from 'ethers-wallet';\n\nconst decryptWallet = async (encryptedWallet, password) => {\n  const decryptedWallet = await Wallet.Wallet.fromEncryptedWallet(\n    encryptedWallet,\n    password,\n  );\n  return decryptedWallet;\n};\n\nexport default decryptWallet;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/wallet/decryptWallet.js","const encryptWallet = async (unencryptedWallet, password) => {\n  const encryptedWallet = await unencryptedWallet.encrypt(password);\n  return encryptedWallet;\n};\n\nexport default encryptWallet;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/wallet/encryptWallet.js","import Wallet from 'ethers-wallet';\n\nconst importWallet = mnemonic => Wallet.Wallet.fromMnemonic(mnemonic);\n\nexport default importWallet;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/utils/wallet/importWalletFromMnemonic.js","// @flow\nimport getVersionContract from '../contracts/getVersionContract';\n\nimport type { Address } from '../../assets/schemas/Address';\n\n/**\n * Get fund address for a given `managerAddress`\n * _Hint_: If multiple funds existing for one manager, the latest fund is returned\n */\nconst getFundForManager = async (\n  environment,\n  { managerAddress },\n): Promise<Address | false> => {\n  const versionContract = await getVersionContract(environment);\n  const fundAddress = await versionContract.instance.managerToFunds.call({}, [\n    managerAddress,\n  ]);\n\n  if (fundAddress === '0x0000000000000000000000000000000000000000')\n    return false;\n  return fundAddress;\n};\n\nexport default getFundForManager;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/version/calls/getFundForManager.js","import getVersionContract from '../contracts/getVersionContract';\n\n/**\n * Returns a mapping of manager addresses linked to a fundId list.\n */\nconst getFundsMapping = async environment => {\n  const versionContract = await getVersionContract(environment);\n\n  const fundsMapping = await versionContract.instance.funds.call();\n\n  return fundsMapping;\n};\n\nexport default getFundsMapping;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/version/calls/getFundMapping.js","// @flow\nimport getVersionContract from '../contracts/getVersionContract';\n\nimport type { Address } from '../../assets/schemas/Address';\n\n/**\n * Get addresses of funds starting from `startId`\n */\nconst getFunds = async (\n  environment,\n  startId: number = 0,\n): Promise<Array<Address>> => {\n  const versionContract = await getVersionContract(environment);\n\n  const allFunds = await versionContract.instance.getFunds.call({}, [startId]);\n\n  return allFunds;\n};\n\nexport default getFunds;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/version/calls/getFunds.js","import getVersionContract from '../contracts/getVersionContract';\n\n/**\n * Returns a mapping of manager addresses linked to a fundId list.\n */\nconst getManagersMapping = async environment => {\n  const versionContract = await getVersionContract(environment);\n\n  const managersMapping = await versionContract.instance.managers.call();\n\n  return managersMapping;\n};\n\nexport default getManagersMapping;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/version/calls/getManagersMapping.js","import getConfig from '../../version/calls/getConfig';\nimport getFundContract from '../../fund/contracts/getFundContract';\nimport getRankingContract from '../contracts/getRankingContract';\nimport toReadable from '../../assets/utils/toReadable';\nimport toDate from '../../utils/generic/toDate';\n\n/**\n * Returns an array of all existing funds on current Version, sorted by share price in descending order, with informations such as address, name, share price, and inception date.\n */\nconst getRanking = async environment => {\n  const config = await getConfig(environment);\n  const rankingContract = await getRankingContract(environment);\n  const { versionAddress } = config;\n  const output = await rankingContract.instance.getAddressAndSharePriceOfFunds.call(\n    {},\n    [versionAddress],\n  );\n\n  /* eslint-disable no-underscore-dangle */\n  const fundAddresses = output[0].map(fund => fund._value);\n  const fundSharePrices = output[1].map(fund =>\n    toReadable(config, fund._value, config.quoteAssetSymbol).toNumber(),\n  );\n  const fundInceptions = output[2].map(fund => fund._value);\n  /* eslint-enable */\n  const getRankingPromises = new Array(fundAddresses.length)\n    .fill(undefined)\n    .map(async (val, index) => {\n      const fundContract = getFundContract(environment, fundAddresses[index]);\n      const name = await fundContract.instance.getName.call();\n      return {\n        address: fundAddresses[index],\n        name,\n        sharePrice: fundSharePrices[index],\n        inception: toDate(fundInceptions[index]),\n      };\n    });\n\n  const unsortedFunds = await Promise.all(getRankingPromises);\n  return unsortedFunds.sort((a, b) => (a.sharePrice > b.sharePrice ? -1 : 1));\n};\n\nexport default getRanking;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/version/calls/getRanking.js","module.exports = [{\"constant\":true,\"inputs\":[{\"name\":\"ofVersion\",\"type\":\"address\"}],\"name\":\"getFundDetails\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/benzumbrunn/melon/reporting-thesis/node_modules/@melonproject/smart-contracts/out/FundRanking.abi.json\n// module id = 202\n// module chunks = 0","// @flow\nimport getVersionContract from '../contracts/getVersionContract';\n\nimport type { Address } from '../../assets/schemas/Address';\n\n/**\n * Get subscription history of a manager by `managerAddress`\n */\nconst getSubscriptionHistory = async (\n  environment,\n  managerAddress: Address,\n  startId: number = 0,\n): Promise<any> => {\n  const versionContract = await getVersionContract(environment);\n\n  const subscriptionHistory = await versionContract.instance.getSubscriptionHistory.call(\n    {},\n    [managerAddress, startId],\n  );\n\n  return subscriptionHistory;\n};\n\nexport default getSubscriptionHistory;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/version/calls/getSubscriptionHistory.js","// // @flow\n// import { allPass, flatten, propEq } from \"ramda\";\n\n// // import ExchangeInterfaceJson from \"@melonproject/smart-contracts/build/contracts/ExchangeInterface.json\";\n// import SimpleMarketJson from \"@melonproject/smart-contracts/build/contracts/SimpleMarket.json\";\n// import DataFeedInterfaceJson from \"@melonproject/smart-contracts/build/contracts/DataFeedInterface.json\";\n// import VersionJson from \"@melonproject/smart-contracts/build/contracts/Version.json\";\n\n// import getConfig from \"../calls/getConfig\";\n// import setup from \"../../utils/setup\";\n// import trace from \"../../utils/generic/trace\";\n// import parseEvent from \"../../utils/ethereum/parseEvent\";\n// import extractEventDefinitions from \"../../utils/ethereum/extractEventDefinitions\";\n// import onOrderUpdate from \"../../exchange/events/onOrderUpdate\";\n\n// const subscriptions = new Set();\n// const hashes = new Set();\n// const addresses = new Set();\n\n// let web3Filter;\n\n// const onEventMap = {\n//   OrderUpdate: onOrderUpdate,\n// };\n\n// const getEventDefinitions = async () => {\n//   const config = await getConfig();\n//   const interfaceAddressMap = new Map([\n//     [DataFeedInterfaceJson, config.dataFeedAddress],\n//     // TODO: Mask SimpleEvent behind simpleAdapter to fit into ExchangeInterface\n//     // [ExchangeInterfaceJson, config.exchangeAddress],\n//     [SimpleMarketJson], // same address as exchange\n//     [VersionJson],\n//   ]);\n//   return flatten(\n//     [...interfaceAddressMap].map(([json, address]) =>\n//       extractEventDefinitions({ json, address, onEventMap }),\n//     ),\n//   );\n// };\n\n// const findEventDefinition = async criteria => {\n//   const eventDefinitions = await getEventDefinitions();\n//   return eventDefinitions.find(def => {\n//     const criterias = Object.entries(criteria);\n//     const predicates = criterias.map(([key, value]) => propEq(key, value));\n//     const match = allPass(predicates)(def);\n//     return match;\n//   });\n// };\n\n// const isBigNumber = candidate => candidate instanceof setup.web3.BigNumber;\n\n// const commonEventCleaner = args => {\n//   const cleaned = { ...args };\n//   if (isBigNumber(args.id)) cleaned.id = args.id.toNumber();\n//   if (isBigNumber(args.atTime))\n//     cleaned.atTime = new Date(args.atTime.times(1000).toNumber());\n//   return cleaned;\n// };\n\n// const distribute = (name, args) => {\n//   subscriptions.forEach(sub => {\n//     const { filters, callback } = sub;\n//     if (filters.includes(name)) {\n//       if (filters.length > 1) {\n//         callback(name, args);\n//       } else {\n//         callback(args);\n//       }\n//     }\n//   });\n// };\n\n// const onError = (error, data) => {\n//   trace({\n//     message: \"Error in MelonTracker\",\n//     category: \"error\",\n//     data: { data, error },\n//   });\n\n//   const errorSubscriptions = subscriptions\n//     ? [...subscriptions.values()].filter(sub => sub.filters.includes(\"error\"))\n//     : [];\n//   if (errorSubscriptions.length > 0) {\n//     errorSubscriptions.forEach(sub => {\n//       const { filters, callback } = sub;\n//       if (filters.length > 1) {\n//         callback(\"error\", error, data);\n//       } else {\n//         callback(error, data);\n//       }\n//     });\n//   } else {\n//     throw error;\n//   }\n// };\n\n// const updateFilter = () => {\n//   if (web3Filter) web3Filter.stopWatching();\n\n//   if (addresses.size || hashes.size) {\n//     /*\n//     const filter = {\n//       address: [...addresses.values()],\n//       // only filter for topics if there is only one topic. Otherwise, topics are\n//       // ANDed together and nothing is catched\n//       // topics:\n//       //   hashes.size === 1 ? [...hashes.values()].map(h => [h]) : undefined,\n//     };\n//     console.log(\"Filters \", filter, web3Filter);\n//     */\n//     web3Filter = setup.web3.eth.filter([...addresses.values()]);\n\n//     web3Filter.watch(async (err, event) => {\n//       if (err) onError(err);\n//       if (hashes.has(event.topics[0])) {\n//         const config = await findEventDefinition({ hash: event.topics[0] });\n//         if (!config)\n//           onError(new Error(`No event config for ${event.topics[0]}`));\n//         const args = parseEvent(event, config.abi);\n//         const cleaned = commonEventCleaner(args);\n//         const enhanced = config.onEvent\n//           ? await config.onEvent(cleaned)\n//           : cleaned;\n//         distribute(config.name, enhanced);\n//       }\n//     });\n//   }\n// };\n\n// const implementFilters = async (filters, preventUpdate) => {\n//   let needsUpdate = false;\n\n//   const promises = filters.map(async filter => {\n//     const definition = await findEventDefinition({ name: filter });\n//     if (!definition) throw new Error(`No event definition found for ${filter}`);\n//     if (!hashes.has(definition.hash)) {\n//       needsUpdate = true;\n//       hashes.add(definition.hash);\n//     }\n//     if (!addresses.has(definition.address)) {\n//       needsUpdate = true;\n//       addresses.add(definition.address);\n//     }\n//   });\n\n//   await Promise.all(promises);\n\n//   if (needsUpdate && !preventUpdate) updateFilter();\n// };\n\n// const refreshFilters = preventUpdate => {\n//   hashes.clear();\n//   addresses.clear();\n\n//   if (subscriptions.size) {\n//     subscriptions.forEach(sub => {\n//       implementFilters(sub.filters, preventUpdate);\n//     });\n//   } else if (!preventUpdate && web3Filter) {\n//     web3Filter.stopWatching();\n//   }\n// };\n\n// const registerSubscription = subscription => {\n//   implementFilters(subscription.filters);\n//   subscriptions.add(subscription);\n// };\n\n// const removeSubscription = (subscription, preventUpdate) => {\n//   subscriptions.delete(subscription);\n//   refreshFilters(preventUpdate);\n// };\n\n// const clearSubscriptions = () => {\n//   subscriptions.clear();\n//   hashes.clear();\n//   addresses.clear();\n//   if (web3Filter) web3Filter.stopWatching();\n// };\n\n// /**\n//  * setup a new tracker.\n//  * @example\n//  * const tracker = melonTracker.on('OrderUpdate');\n//  * tracker(data => console.log(data));\n//  * tracker.off();\n//  *\n//  * // or multi events:\n//  * const multiTracker = melonTracker.on('OrderUpdate', 'FundCreated');\n//  * multiTracker((name, data) => console.log(name, data)); // whereas name = OrderUpdate | FundCreated\n//  */\n// const melonTracker = {\n//   on(...filters) {\n//     let hoistedSubscription;\n\n//     const tracker = callback => {\n//       hoistedSubscription = { filters, callback };\n//       registerSubscription(hoistedSubscription);\n//     };\n\n//     tracker.stop = () => {\n//       removeSubscription(hoistedSubscription);\n//     };\n\n//     tracker.times = n =>\n//       new Promise(resolve => {\n//         let i = 0;\n\n//         const waiting = {\n//           filters,\n//           callback: (name, args) => {\n//             i += 1;\n//             if (i >= n) {\n//               removeSubscription(waiting);\n//               resolve(name, args);\n//             }\n//           },\n//         };\n\n//         registerSubscription(waiting);\n//       });\n\n//     tracker.next = () => tracker.times(1);\n\n//     return tracker;\n//   },\n\n//   off(...filters) {\n//     if (filters.length > 0) {\n//       let needsUpdate = false;\n\n//       filters.forEach(filter => {\n//         subscriptions\n//           .find(sub => sub.filters.includes(filter))\n//           .forEach(staleSub => {\n//             needsUpdate = true;\n//             removeSubscription(staleSub, true);\n//           });\n//       });\n\n//       if (needsUpdate) updateFilter();\n//     } else {\n//       clearSubscriptions();\n//     }\n//   },\n// };\n\n// export default melonTracker;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/version/events/melonTracker.js","// @flow\nimport addressBook from '@melonproject/smart-contracts/addressBook.json';\nimport ensure from '../../utils/generic/ensure';\nimport findEventInLog from '../../utils/ethereum/findEventInLog';\nimport getAddress from '../../assets/utils/getAddress';\nimport getConfig from '../../version/calls/getConfig';\nimport getFundInformations from '../../fund/calls/getFundInformations';\nimport getNetwork from '../../utils/environment/getNetwork';\nimport getVersionContract from '../contracts/getVersionContract';\nimport sendTransaction from '../../utils/parity/sendTransaction';\nimport type { Address } from '../../assets/schemas/Address';\nimport type { Environment } from '../../utils/environment/Environment';\n\n/**\n * Basic fund information\n */\ntype Fund = {\n  id: number,\n  address: Address,\n  name: string,\n  inception: number,\n};\n\n/**\n * Setup a new fund with `name` and an array of `exchangeNames`  */\nconst setupFund = async (\n  environment: Environment,\n  { name, signature, exchangeNames = ['MatchingMarket', 'ZeroExExchange'] },\n): Promise<Fund> => {\n  const config = await getConfig(environment);\n  const { quoteAssetSymbol, complianceAddress, riskManagementAddress } = config;\n\n  const quoteAsset = getAddress(config, quoteAssetSymbol);\n\n  const managementReward = 0;\n  const performanceReward = 0;\n\n  const versionContract = await getVersionContract(environment, config);\n\n  const isVersionShutDown = await versionContract.instance.isShutDown.call();\n  ensure(!isVersionShutDown, 'Version is shut down.');\n\n  const termsAndConditionsAreSigned = await versionContract.instance.termsAndConditionsAreSigned.call(\n    { from: environment.account.address },\n    [signature.v, signature.r, signature.s],\n  );\n  ensure(\n    termsAndConditionsAreSigned,\n    'Invalid signature of terms and conditions on contract level',\n  );\n\n  const managerToFunds = await versionContract.instance.managerToFunds.call(\n    {},\n    [environment.account.address],\n  );\n\n  ensure(\n    managerToFunds === '0x0000000000000000000000000000000000000000',\n    'Already have a fund',\n  );\n\n  const network = await getNetwork(environment);\n  const exchanges = exchangeNames.map(\n    exchange => addressBook[network][exchange],\n  );\n\n  const params = [\n    name,\n    quoteAsset,\n    managementReward,\n    performanceReward,\n    complianceAddress,\n    riskManagementAddress,\n    exchanges,\n    [getAddress(config, 'MLN-T')],\n    signature.v,\n    signature.r,\n    signature.s,\n  ];\n  const receipt = await sendTransaction(\n    versionContract,\n    'setupFund',\n    params,\n    environment,\n  );\n  const fundAddedMessage = findEventInLog(\n    'FundUpdated',\n    receipt,\n    'Error during fund creation',\n  );\n  const logArgs = fundAddedMessage.params;\n  const fundAddress = logArgs.ofFund.value;\n\n  const fundInformations = await getFundInformations(environment, {\n    fundAddress,\n  });\n\n  return {\n    address: fundAddress,\n    name: fundInformations.name,\n    inception: fundInformations.inception,\n    modules: fundInformations.modules,\n    owner: fundInformations.owner,\n  };\n};\n\nexport default setupFund;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/version/transactions/setupFund.js","import Utils from 'ethers-utils';\nimport Wallet from 'ethers-wallet';\nimport ensure from '../../utils/generic/ensure';\n\n/**\n * Signs terms and conditions of competition with instantiated wallet\n * and returns a signature object with r, s and v require parameters in setupFund function\n */\n\nconst signCompetitionTermsAndConditions = async environment => {\n  // const competitionHash =\n  //   '0x1A46B45CC849E26BB3159298C3C218EF300D015ED3E23495E77F0E529CE9F69E';\n  // const api = new Api(setup.provider);\n  // const CompetitionContract = await api.newContract(\n  //   CompetitionAbi,\n  //   '0x5652AC06E148b8c8d86c2C040fdBbbF98860ef47',\n  // );\n  // const competitionHash = await CompetitionContract.instance.TERMS_AND_CONDITIONS.call();\n  const arrayifiedHash = [\n    26,\n    70,\n    180,\n    92,\n    200,\n    73,\n    226,\n    107,\n    179,\n    21,\n    146,\n    152,\n    195,\n    194,\n    24,\n    239,\n    48,\n    13,\n    1,\n    94,\n    211,\n    226,\n    52,\n    149,\n    231,\n    127,\n    14,\n    82,\n    156,\n    233,\n    246,\n    158,\n  ];\n\n  let rawSignature;\n\n  if (environment.account.signMessage) {\n    rawSignature = environment.account.signMessage(arrayifiedHash);\n    const verified = Wallet.Wallet.verifyMessage(arrayifiedHash, rawSignature);\n    ensure(\n      verified.toLowerCase() === environment.account.address.toLowerCase(),\n      'Invalid signature of terms and conditions',\n      { expected: environment.account.address, received: verified },\n    );\n  } else {\n    const hash = Utils.hexlify(arrayifiedHash);\n    rawSignature = await environment.api.eth.sign(\n      environment.account.address,\n      hash,\n    );\n  }\n\n  const v = parseInt(rawSignature.substring(66 + 64), 16);\n  return {\n    r: rawSignature.substring(0, 66),\n    s: `0x${rawSignature.substring(66, 66 + 64)}`,\n    v,\n  };\n};\n\nexport default signCompetitionTermsAndConditions;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/version/transactions/signCompetitionTermsAndConditions.js","import Wallet from 'ethers-wallet';\nimport Utils from 'ethers-utils';\nimport ensure from '../../utils/generic/ensure';\nimport getVersionContract from '../contracts/getVersionContract';\n\n/**\n * Signs terms and conditions of competition with instantiated wallet\n * and returns a signature object with r, s and v require parameters in setupFund function\n */\n\nconst signTermsAndConditions = async environment => {\n  const versionContract = await getVersionContract(environment);\n  const arrayifiedHash = await versionContract.instance.TERMS_AND_CONDITIONS.call();\n\n  let rawSignature;\n\n  if (environment.account.signMessage) {\n    rawSignature = environment.account.signMessage(arrayifiedHash);\n    const verified = Wallet.Wallet.verifyMessage(arrayifiedHash, rawSignature);\n    ensure(\n      verified.toLowerCase() === environment.account.address.toLowerCase(),\n      'Invalid signature of terms and conditions',\n      { expected: environment.account.address, received: verified },\n    );\n  } else {\n    const hash = Utils.hexlify(arrayifiedHash);\n    rawSignature = await environment.api.eth.sign(\n      environment.account.address,\n      hash,\n    );\n  }\n\n  return {\n    r: rawSignature.substring(0, 66),\n    s: `0x${rawSignature.substring(66, 66 + 64)}`,\n    v: `0x${rawSignature.substring(66 + 64)}`,\n  };\n};\n\nexport default signTermsAndConditions;\n\n\n\n// WEBPACK FOOTER //\n// ../melon.js/lib/version/transactions/signTermsAndConditions.js","import {\n  getAggregatedObservable,\n  Order,\n} from '@melonproject/exchange-aggregator';\nimport { getParityProvider, getPrice } from '@melonproject/melon.js';\nimport BigNumber from 'bignumber.js';\nimport * as R from 'ramda';\nimport * as Rx from 'rxjs';\nimport { Context } from '../index';\nimport withUnsubscribe from '../utils/withUnsubscribe';\n\nconst getPricePromises = (environment, symbols) =>\n  symbols.map(symbol =>\n    getPrice(environment, symbol).then(price => ({\n      symbol,\n      price,\n    })),\n  );\n\nexport const price = {\n  resolve: (value: number): number => value,\n  subscribe: (parent, args, context: Context) => {\n    const { pubsub } = context;\n    const { symbols } = args;\n\n    const fetchPrices = environment =>\n      Rx.Observable.forkJoin(...getPricePromises(environment, symbols));\n\n    const environment$ = Rx.Observable.fromPromise(getParityProvider());\n    const price$ = environment$\n      .switchMap(fetchPrices)\n      .repeatWhen(Rx.operators.delay(10000));\n\n    const channel = `price:${symbols}`;\n    const iterator = pubsub.asyncIterator(channel);\n    const publish = value => pubsub.publish(channel, value);\n    return withUnsubscribe(price$, iterator, publish);\n  },\n};\n\nconst filterBuyOrders = R.filter<Order>(R.propEq('type', 'buy'));\nconst filterSellOrders = R.filter<Order>(R.propEq('type', 'sell'));\n\nconst accumulateSells = (accumulator: BigNumber, order: Order) => {\n  const volume = accumulator.plus(order.sell.howMuch);\n  return [volume, { order, volume }];\n};\n\nconst accumulateBuys = (accumulator: BigNumber, order: Order) => {\n  const volume = accumulator.plus(order.buy.howMuch);\n  return [volume, { order, volume }];\n};\n\nexport const orderbook = {\n  resolve: (orders: Order[]) => {\n    const [totalBuyVolume, buyEntries] = R.compose(\n      R.mapAccum(accumulateBuys, new BigNumber(0)),\n      filterBuyOrders,\n    )(orders);\n\n    const [totalSellVolume, sellEntries] = R.compose(\n      R.mapAccum(accumulateSells, new BigNumber(0)),\n      filterSellOrders,\n    )(orders);\n\n    return {\n      allOrders: orders,\n      buyEntries,\n      sellEntries,\n      totalSellVolume,\n      totalBuyVolume,\n    };\n  },\n  subscribe: (parent, args, context: Context) => {\n    const { pubsub } = context;\n    const { baseTokenSymbol, quoteTokenSymbol, exchanges } = args;\n\n    const orderbook$ = getAggregatedObservable(\n      baseTokenSymbol,\n      quoteTokenSymbol,\n      exchanges,\n    );\n\n    const channel = `orderbook:${baseTokenSymbol}/${quoteTokenSymbol}`;\n    const iterator = pubsub.asyncIterator(channel);\n    const publish = value => pubsub.publish(channel, value);\n    return withUnsubscribe(orderbook$, iterator, publish);\n  },\n};\n\nexport { Order };\n\nexport default {\n  price,\n  orderbook,\n};\n\n\n\n// WEBPACK FOOTER //\n// ../graphql-schema/src/resolvers/Subscription.ts","import BigNumber from 'bignumber.js';\n\nexport type OrderTypeEnum = 'sell' | 'buy';\n\n// @TODO: Properly define the order type.\nexport interface Order {\n  id: string;\n  price: BigNumber;\n  type: OrderTypeEnum;\n  buy: {\n    howMuch: BigNumber;\n  };\n  sell: {\n    howMuch: BigNumber;\n  };\n}\n\nexport interface OrderWithCumulativeVolume extends Order {\n  cumulativeVolume: BigNumber;\n}\n\nexport type ExchangeEnum = 'RADAR_RELAY' | 'OASIS_DEX' | 'ERC_DEX';\n\nexport {\n  default as getAggregatedObservable,\n} from './orderbooks/getAggregatedObservable';\n\n\n\n// WEBPACK FOOTER //\n// ../exchange-aggregator/src/index.ts","import * as R from 'ramda';\nimport * as Rx from 'rxjs';\nimport getObservableRelayer from './0x/getObservableRelayer';\nimport getObservableErcDex from './ercDex/getObservableErcDex';\nimport getObservableOasisDex from './oasisDex/getObservableOasisDex';\n\nimport { ExchangeEnum, Order } from '../index';\n\nconst debug = require('debug')('exchange-aggregator');\n\nexport type ExchangeCreator = (\n  baseTokenAddress: string,\n  quoteTokenSymbol: string,\n) => Rx.Observable<Order[]>;\n\nconst exchangeToCreatorFunction: { [P in ExchangeEnum]: ExchangeCreator } = {\n  RADAR_RELAY: (baseTokenSymbol, quoteTokenSymbol) =>\n    getObservableRelayer(baseTokenSymbol, quoteTokenSymbol),\n  OASIS_DEX: (baseTokenSymbol, quoteTokenSymbol) =>\n    getObservableOasisDex(baseTokenSymbol, quoteTokenSymbol),\n  ERC_DEX: (baseTokenSymbol, quoteTokenSymbol) =>\n    getObservableErcDex(baseTokenSymbol, quoteTokenSymbol),\n};\n\nconst concatOrderbooks = R.reduce<Order[], Order[]>(R.concat, []);\n\nconst sortOrderBooks = R.sort<Order>((a, b) => {\n  if (a.type === b.type) {\n    if (a.type === 'buy') {\n      return b.price.minus(a.price).toNumber();\n    }\n\n    if (a.type === 'sell') {\n      return a.price.minus(b.price).toNumber();\n    }\n  }\n\n  return a.type === 'buy' ? 1 : -1;\n});\n\nconst getAggregatedObservable = (\n  baseTokenSymbol: string,\n  quoteTokenSymbol: string,\n  exchanges: ExchangeEnum[] = ['RADAR_RELAY', 'OASIS_DEX', 'ERC_DEX'],\n) => {\n  const exchanges$ = Rx.Observable.from<ExchangeEnum>(exchanges);\n  const orderbooks$ = exchanges$\n    .map(name => exchangeToCreatorFunction[name])\n    .map(create => create(baseTokenSymbol, quoteTokenSymbol))\n    .combineAll<Rx.Observable<Order[]>, Order[][]>()\n    .do(value => debug('Emitting combined order book.', value))\n    .distinctUntilChanged();\n\n  // Concat and sort orders across all order books.\n  return orderbooks$.map(R.compose(sortOrderBooks, concatOrderbooks));\n};\n\nexport default getAggregatedObservable;\n\n\n\n// WEBPACK FOOTER //\n// ../exchange-aggregator/src/orderbooks/getAggregatedObservable.ts","import * as R from 'ramda';\nimport * as Rx from 'rxjs';\nimport formatRelayerOrderbook from '../../formatRelayerOrderbook';\nimport getStemmedSymbol from '../../getStemmedSymbol';\nimport getTokenAddress from '../../getTokenAddress';\nimport { Order } from '../../index';\n\n// Isomorphic websocket implementation. Falls back to the standard browser\n// protocol on the client.\nimport WebSocket = require('isomorphic-ws');\n\nconst debug = require('debug')('exchange-aggregator:0x');\n\nconst subscribeMessage = (baseTokenAddress, quoteTokenAddress) =>\n  JSON.stringify({\n    type: 'subscribe',\n    channel: 'orderbook',\n    requestId: 1,\n    payload: {\n      baseTokenAddress,\n      quoteTokenAddress,\n      snapshot: true,\n      limit: 1000,\n    },\n  });\n\n// @TODO: Finish this type.\ninterface RelayOrder {\n  salt: string;\n}\n\ninterface AsksAndBids {\n  asks: RelayOrder[];\n  bids: RelayOrder[];\n}\n\ninterface SnapshotMessage {\n  type: 'snapshot';\n  payload: AsksAndBids;\n}\n\ninterface UpdateMessage {\n  type: 'update';\n  payload: RelayOrder;\n}\n\nconst isSnapshotMessage = R.propEq('type', 'snapshot') as (\n  payload: any,\n) => payload is SnapshotMessage;\n\nconst isUpdateMessage = R.propEq('type', 'update') as (\n  payload: any,\n) => payload is UpdateMessage;\n\nconst scanMessages: (\n  carry: AsksAndBids,\n  current: SnapshotMessage | UpdateMessage,\n) => AsksAndBids = R.cond([\n  [\n    (carry: AsksAndBids, current: SnapshotMessage) => {\n      return isSnapshotMessage(current);\n    },\n    (carry: AsksAndBids, current: SnapshotMessage) => {\n      return current.payload;\n    },\n  ],\n  [\n    (carry: AsksAndBids, current: SnapshotMessage) => {\n      return isUpdateMessage(current);\n    },\n    (carry: AsksAndBids, current: UpdateMessage) => {\n      return updateAsksAndBids(carry, current.payload);\n    },\n  ],\n  [R.T, R.identity],\n]);\n\nconst updateAsksAndBids = (state: AsksAndBids, order: RelayOrder) => {\n  // @TODO: Implement update logic.\n  return state;\n};\n\nconst getObservableRadarRelay = (baseTokenSymbol, quoteTokenSymbol) => {\n  const stemmedBaseTokenSymbol = getStemmedSymbol(baseTokenSymbol);\n  const stemmedQuoteTokenSymbol = getStemmedSymbol(quoteTokenSymbol);\n  const baseTokenAddress = getTokenAddress(stemmedBaseTokenSymbol);\n  const quoteTokenAddress = getTokenAddress(stemmedQuoteTokenSymbol);\n\n  debug('Connecting.', {\n    baseTokenSymbol,\n    quoteTokenSymbol,\n    stemmedBaseTokenSymbol,\n    stemmedQuoteTokenSymbol,\n    baseTokenAddress,\n    quoteTokenAddress,\n  });\n\n  const open$ = new Rx.Subject();\n  const socket$ = Rx.Observable.webSocket({\n    url: 'wss://api.radarrelay.com/0x/v0/ws',\n    WebSocketCtor: WebSocket,\n    openObserver: open$,\n  });\n\n  open$.subscribe(event => {\n    const message = subscribeMessage(baseTokenAddress, quoteTokenAddress);\n    socket$.next(message);\n  });\n\n  const format = formatRelayerOrderbook('RADAR_RELAY');\n\n  const messages$ = socket$\n    // @TODO: In addition to restarting the connection when it's closed, also\n    // send a ping signal if there is no activity to prevent closing the websocket\n    // connection in the first place.\n    .retry()\n    .do(value => debug('Received message.', value))\n    .filter(R.propEq('channel', 'orderbook'))\n    .filter(R.anyPass([isSnapshotMessage, isUpdateMessage]) as (\n      value,\n    ) => value is SnapshotMessage | UpdateMessage)\n    .do(value => debug('Processing snapshot or update message.', value))\n    .scan<SnapshotMessage | UpdateMessage, AsksAndBids>(scanMessages, {\n      bids: [],\n      asks: [],\n    })\n    .distinctUntilChanged()\n    .do(value => debug('Extracting bids and asks.', value))\n    .map<AsksAndBids, Order[]>(value => format(value.bids, value.asks))\n    .do(value => debug('Emitting order book.', value))\n    .catch(error => {\n      debug('Failed to fetch orderbook.', {\n        baseTokenAddress,\n        quoteTokenAddress,\n        error,\n      });\n\n      return Rx.Observable.of([]);\n    });\n\n  return messages$;\n};\n\nexport default getObservableRadarRelay;\n\n\n\n// WEBPACK FOOTER //\n// ../exchange-aggregator/src/orderbooks/0x/getObservableRelayer.ts","module.exports = require(\"ws\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ws\"\n// module id = 212\n// module chunks = 0","import axios from 'axios';\nimport * as R from 'ramda';\nimport * as Rx from 'rxjs';\nimport formatRelayerOrderbook from '../../formatRelayerOrderbook';\nimport getStemmedSymbol from '../../getStemmedSymbol';\nimport getTokenAddress from '../../getTokenAddress';\n\n// Isomorphic websocket implementation. Falls back to the standard browser\n// protocol on the client.\nimport WebSocket = require('isomorphic-ws');\n\nconst debug = require('debug')('exchange-aggregator:erc-dex');\n\nconst fetchOrderbook = async (baseTokenAddress, quoteTokenAddress) => {\n  const endpoint = 'https://api.ercdex.com/api/standard/1/v0/orderbook';\n  const params = {\n    baseTokenAddress,\n    quoteTokenAddress,\n  };\n\n  debug('Fetching orderbook', params);\n\n  const data = await axios.get(endpoint, {\n    params,\n  });\n\n  debug('Fetched orderbook', data.data);\n\n  return data.data;\n};\n\nconst getObservableErcDexNotifications = (\n  baseTokenAddress,\n  quoteTokenAddress,\n) => {\n  const channel = `aggregated-order-feed/${baseTokenAddress}/${quoteTokenAddress}`;\n\n  debug('Connecting to websocket.', channel);\n\n  const open$ = new Rx.Subject();\n  const socket$ = Rx.Observable.webSocket({\n    url: 'wss://api.ercdex.com',\n    WebSocketCtor: WebSocket,\n    openObserver: open$,\n  });\n\n  open$.subscribe(event => {\n    socket$.next(`sub:${channel}`);\n  });\n\n  const messages$ = socket$\n    // @TODO: In addition to restarting the connection when it's closed, also\n    // send a ping signal if there is no activity to prevent closing the websocket\n    // connection in the first place.\n    .retry()\n    .do(value => debug('Received message.', value))\n    .filter(R.propEq('channel', channel))\n    .do(value => debug(`Received update notification.`, value));\n\n  return messages$;\n};\n\nconst getObservableErcDex = (baseTokenSymbol, quoteTokenSymbol) => {\n  const stemmedBaseTokenSymbol = getStemmedSymbol(baseTokenSymbol);\n  const stemmedQuoteTokenSymbol = getStemmedSymbol(quoteTokenSymbol);\n  const baseTokenAddress = getTokenAddress(stemmedBaseTokenSymbol);\n  const quoteTokenAddress = getTokenAddress(stemmedQuoteTokenSymbol);\n\n  debug('Processed symbols.', {\n    baseTokenSymbol,\n    quoteTokenSymbol,\n    stemmedBaseTokenSymbol,\n    stemmedQuoteTokenSymbol,\n    baseTokenAddress,\n    quoteTokenAddress,\n  });\n\n  const format = formatRelayerOrderbook('ERC_DEX');\n\n  const fetch$ = Rx.Observable.defer(() =>\n    fetchOrderbook(baseTokenAddress, quoteTokenAddress),\n  );\n\n  const orderbook$ = fetch$\n    .distinctUntilChanged()\n    .do(value => debug('Extracting bids and asks.', value))\n    .map(value => format(value.bids, value.asks))\n    .catch(error => {\n      debug('Failed to fetch orderbook.', {\n        baseTokenAddress,\n        quoteTokenAddress,\n        error,\n      });\n\n      return Rx.Observable.of([]);\n    });\n\n  return orderbook$.repeatWhen(() =>\n    getObservableErcDexNotifications(baseTokenAddress, quoteTokenAddress),\n  );\n};\n\nexport default getObservableErcDex;\n\n\n\n// WEBPACK FOOTER //\n// ../exchange-aggregator/src/orderbooks/ercDex/getObservableErcDex.ts","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = 214\n// module chunks = 0","import { getOrderbook, getParityProvider } from '@melonproject/melon.js';\nimport * as Rx from 'rxjs';\n\nconst debug = require('debug')('exchange-aggregator:oasis-dex');\n\nconst labelOrder = order => ({ ...order, exchange: 'OASIS_DEX' });\nconst labelOrders = orders => orders.map(labelOrder);\n\nconst fetchOrderbook = options => environment =>\n  Rx.Observable.fromPromise(getOrderbook(environment, options));\n\nconst getObservableOasisDex = (baseTokenSymbol, quoteTokenSymbol) => {\n  const environment$ = Rx.Observable.fromPromise(getParityProvider());\n  const orderbook$ = environment$\n    .do(value => debug('Fetching.', value))\n    .switchMap(\n      fetchOrderbook({\n        baseTokenSymbol,\n        quoteTokenSymbol,\n      }),\n    )\n    .do(value => debug('Receiving values.', value))\n    .distinctUntilChanged()\n    .map(labelOrders)\n    .do(value => debug('Emitting order book.', value));\n\n  return orderbook$.repeatWhen(Rx.operators.delay(10000));\n};\n\nexport default getObservableOasisDex;\n\n\n\n// WEBPACK FOOTER //\n// ../exchange-aggregator/src/orderbooks/oasisDex/getObservableOasisDex.ts","import { $$asyncIterator } from 'iterall';\nimport * as Rx from 'rxjs';\n\n// @TODO: https://github.com/apollographql/graphql-subscriptions/pull/147\nfunction withUnsubscribe<T, V>(\n  observable$: Rx.Observable<T>,\n  iterator: AsyncIterator<V>,\n  publish: (value: T) => void,\n): AsyncIterator<T> {\n  const end$ = new Rx.Subject<boolean>();\n  observable$.takeUntil(end$).subscribe(publish);\n\n  // @ts-ignore: $$asyncIterator is considered the same as Symbol.asyncIterator by TypeScript.\n  return {\n    ...iterator,\n    return(value) {\n      end$.next(true);\n      return iterator.return\n        ? iterator.return(value)\n        : {\n            done: true,\n            value,\n          };\n    },\n    throw(error) {\n      end$.error(error);\n      return iterator.throw\n        ? iterator.throw(error)\n        : {\n            done: true,\n            value: undefined,\n          };\n    },\n    [$$asyncIterator]() {\n      return this;\n    },\n  };\n}\n\nexport default withUnsubscribe;\n\n\n\n// WEBPACK FOOTER //\n// ../graphql-schema/src/utils/withUnsubscribe.ts","module.exports = require(\"iterall\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"iterall\"\n// module id = 217\n// module chunks = 0","import { GraphQLScalarType, Kind } from 'graphql';\n\nexport default new GraphQLScalarType({\n  name: 'Symbol',\n  parseValue: value => value,\n  serialize: value => value.toString(),\n  parseLiteral: ast => {\n    if (ast.kind === Kind.STRING) {\n      if (ast.value.length > 10) {\n        throw new TypeError('Symbols have to be shorter than 6 characters.');\n      } else {\n        return ast.value.toString();\n      }\n    }\n\n    return null;\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ../graphql-schema/src/resolvers/Symbol.ts","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"SchemaDefinition\",\"directives\":[],\"operationTypes\":[{\"kind\":\"OperationTypeDefinition\",\"operation\":\"query\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"}}},{\"kind\":\"OperationTypeDefinition\",\"operation\":\"subscription\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Subscription\"}}}]}],\"loc\":{\"start\":0,\"end\":386}};\n    doc.loc.source = {\"body\":\"#import \\\"./schema/Symbol.gql\\\"\\n#import \\\"./schema/Order.gql\\\"\\n#import \\\"./schema/ExchangeEnum.gql\\\"\\n#import \\\"./schema/HowMuchOfAsset.gql\\\"\\n#import \\\"./schema/Quantity.gql\\\"\\n#import \\\"./schema/Orderbook.gql\\\"\\n#import \\\"./schema/OrderbookEntry.gql\\\"\\n#import \\\"./schema/Query.gql\\\"\\n#import \\\"./schema/Price.gql\\\"\\n#import \\\"./schema/Subscription.gql\\\"\\n\\nschema {\\n  query: Query\\n  subscription: Subscription\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require(\"./schema/Symbol.gql\").definitions));\ndoc.definitions = doc.definitions.concat(unique(require(\"./schema/Order.gql\").definitions));\ndoc.definitions = doc.definitions.concat(unique(require(\"./schema/ExchangeEnum.gql\").definitions));\ndoc.definitions = doc.definitions.concat(unique(require(\"./schema/HowMuchOfAsset.gql\").definitions));\ndoc.definitions = doc.definitions.concat(unique(require(\"./schema/Quantity.gql\").definitions));\ndoc.definitions = doc.definitions.concat(unique(require(\"./schema/Orderbook.gql\").definitions));\ndoc.definitions = doc.definitions.concat(unique(require(\"./schema/OrderbookEntry.gql\").definitions));\ndoc.definitions = doc.definitions.concat(unique(require(\"./schema/Query.gql\").definitions));\ndoc.definitions = doc.definitions.concat(unique(require(\"./schema/Price.gql\").definitions));\ndoc.definitions = doc.definitions.concat(unique(require(\"./schema/Subscription.gql\").definitions));\n\n\n      module.exports = doc;\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../graphql-schema/src/schema.gql\n// module id = 219\n// module chunks = 0","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ScalarTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Symbol\"},\"directives\":[]}],\"loc\":{\"start\":0,\"end\":14}};\n    doc.loc.source = {\"body\":\"scalar Symbol\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../graphql-schema/src/schema/Symbol.gql\n// module id = 220\n// module chunks = 0","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Order\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"isActive\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"buy\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"HowMuchOfAsset\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"sell\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"HowMuchOfAsset\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchangeContractAddress\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchange\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":200}};\n    doc.loc.source = {\"body\":\"type Order {\\n  id: String!\\n  owner: String!\\n  isActive: Boolean!\\n  type: String!\\n  buy: HowMuchOfAsset!\\n  sell: HowMuchOfAsset!\\n  price: String!\\n  exchangeContractAddress: String\\n  exchange: String\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../graphql-schema/src/schema/Order.gql\n// module id = 221\n// module chunks = 0","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"EnumTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ExchangeEnum\"},\"directives\":[],\"values\":[{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"RADAR_RELAY\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"OASIS_DEX\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ERC_DEX\"},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":58}};\n    doc.loc.source = {\"body\":\"enum ExchangeEnum {\\n  RADAR_RELAY\\n  OASIS_DEX\\n  ERC_DEX\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../graphql-schema/src/schema/ExchangeEnum.gql\n// module id = 222\n// module chunks = 0","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"HowMuchOfAsset\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"symbol\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Symbol\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"howMuch\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":61}};\n    doc.loc.source = {\"body\":\"type HowMuchOfAsset {\\n  symbol: Symbol!\\n  howMuch: String!\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../graphql-schema/src/schema/HowMuchOfAsset.gql\n// module id = 223\n// module chunks = 0","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ScalarTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"},\"directives\":[]}],\"loc\":{\"start\":0,\"end\":16}};\n    doc.loc.source = {\"body\":\"scalar Quantity\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../graphql-schema/src/schema/Quantity.gql\n// module id = 224\n// module chunks = 0","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Orderbook\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"allOrders\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Order\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"sellEntries\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"OrderbookEntry\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"buyEntries\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"OrderbookEntry\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"totalBuyVolume\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"totalSellVolume\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":158}};\n    doc.loc.source = {\"body\":\"type Orderbook {\\n  allOrders: [Order]\\n  sellEntries: [OrderbookEntry]\\n  buyEntries: [OrderbookEntry]\\n  totalBuyVolume: Quantity\\n  totalSellVolume: Quantity\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../graphql-schema/src/schema/Orderbook.gql\n// module id = 225\n// module chunks = 0","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"OrderbookEntry\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"volume\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"order\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Order\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":58}};\n    doc.loc.source = {\"body\":\"type OrderbookEntry {\\n  volume: Quantity\\n  order: Order\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../graphql-schema/src/schema/OrderbookEntry.gql\n// module id = 226\n// module chunks = 0","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"symbol\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Symbol\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":49}};\n    doc.loc.source = {\"body\":\"type Query {\\n  price(symbol: Symbol!): String!\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../graphql-schema/src/schema/Query.gql\n// module id = 227\n// module chunks = 0","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Price\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"symbol\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Quantity\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":51}};\n    doc.loc.source = {\"body\":\"type Price {\\n  symbol: String!\\n  price: Quantity\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../graphql-schema/src/schema/Price.gql\n// module id = 228\n// module chunks = 0","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Subscription\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"price\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"symbols\"},\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Symbol\"}}},\"directives\":[]}],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Price\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"orderbook\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"baseTokenSymbol\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Symbol\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"quoteTokenSymbol\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Symbol\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"exchanges\"},\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ExchangeEnum\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Orderbook\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":175}};\n    doc.loc.source = {\"body\":\"type Subscription {\\n  price(symbols: [Symbol]): [Price]\\n  orderbook(\\n    baseTokenSymbol: Symbol!\\n    quoteTokenSymbol: Symbol!\\n    exchanges: [ExchangeEnum]\\n  ): Orderbook\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../graphql-schema/src/schema/Subscription.gql\n// module id = 229\n// module chunks = 0","module.exports = require(\"graphql-subscriptions\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql-subscriptions\"\n// module id = 230\n// module chunks = 0","module.exports = require(\"graphql-yoga\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql-yoga\"\n// module id = 231\n// module chunks = 0"],"sourceRoot":""}